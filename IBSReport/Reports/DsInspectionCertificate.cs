//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace CrystalReportProject.Reports {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public  class DsInspectionCertificate : DataSet {
        
        private CommandDataTable tableCommand;
        
        public DsInspectionCertificate() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DsInspectionCertificate(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Command"] != null)) {
                    this.Tables.Add(new CommandDataTable(ds.Tables["Command"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CommandDataTable Command {
            get {
                return this.tableCommand;
            }
        }
        
        public override DataSet Clone() {
            DsInspectionCertificate cln = ((DsInspectionCertificate)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["Command"] != null)) {
                this.Tables.Add(new CommandDataTable(ds.Tables["Command"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableCommand = ((CommandDataTable)(this.Tables["Command"]));
            if ((this.tableCommand != null)) {
                this.tableCommand.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DsInspectionCertificate";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DsInspectionCertificate.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableCommand = new CommandDataTable();
            this.Tables.Add(this.tableCommand);
        }
        
        private bool ShouldSerializeCommand() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void CommandRowChangeEventHandler(object sender, CommandRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CommandDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnCASE_NO;
            
            private DataColumn columnCall_SNO;
            
            private DataColumn columnCall_Recv_dt;
            
            private DataColumn columnRegion_Code;
            
            private DataColumn columnRLY_CD;
            
            private DataColumn columnCall_Install_No;
            
            private DataColumn columnIE_Sname;
            
            private DataColumn columnVend_Name;
            
            private DataColumn columnVend_Add1;
            
            private DataColumn columnVend_Add2;
            
            private DataColumn columnVend_City;
            
            private DataColumn columnMFG_Name;
            
            private DataColumn columnMFG_Add1;
            
            private DataColumn columnMFG_Add2;
            
            private DataColumn columnMFG_City;
            
            private DataColumn columnMFG_PLACE;
            
            private DataColumn columnPO_NO;
            
            private DataColumn columnPO_DT;
            
            private DataColumn columnCONSIGNEE_DESIG;
            
            private DataColumn columnCONSIGNEE_CD;
            
            private DataColumn columnCONSIGNEE_CITYNAME;
            
            private DataColumn columnCONSIGNEE_DEPT;
            
            private DataColumn columnCONSIGNEE_FIRM;
            
            private DataColumn columnPUR_DESIG;
            
            private DataColumn columnPUR_CD;
            
            private DataColumn columnPUR_DEPT;
            
            private DataColumn columnPUR_FIRM;
            
            private DataColumn columnPUR_City;
            
            private DataColumn columnITEM_SRNO_PO;
            
            private DataColumn columnITEM_DESC_PO;
            
            private DataColumn columnUOM_S_DESC;
            
            private DataColumn columnQTY_ORDERED;
            
            private DataColumn columnCUM_QTY_PREV_OFFERED;
            
            private DataColumn columnCUM_QTY_PREV_PASSED;
            
            private DataColumn columnQTY_TO_INSP;
            
            private DataColumn columnQTY_PASSED;
            
            private DataColumn columnQTY_REJECTED;
            
            private DataColumn columnQTY_DUE;
            
            private DataColumn columnHOLOGRAM;
            
            private DataColumn columnNUM_VISITS;
            
            private DataColumn columnVISIT_DATES;
            
            private DataColumn columnBPO_NAME;
            
            private DataColumn columnBPO_ORGN;
            
            private DataColumn columnCity;
            
            private DataColumn columnHOLOGRAMORG;
            
            private DataColumn columnREMARK;
            
            private DataColumn columnDT_INSP_DESIRE;
            
            private DataColumn columnITEM_REMARK;
            
            private DataColumn columnAMENDMENT_1;
            
            private DataColumn columnAMENDMENTDT_1;
            
            private DataColumn columnAMENDMENT_2;
            
            private DataColumn columnAMENDMENTDT_2;
            
            private DataColumn columnAMENDMENT_3;
            
            private DataColumn columnAMENDMENTDT_3;
            
            private DataColumn columnAMENDMENT_4;
            
            private DataColumn columnAMENDMENTDT_4;
            
            private DataColumn columnBK_NO;
            
            private DataColumn columnSET_NO;
            
            private DataColumn columnVISITS_DATES;
            
            private DataColumn columnIE_STAMP_IMAGE;
            
            private DataColumn columnIE_STAMP_IMAGE1;
            
            private DataColumn columnLAB_TST_RECT_DT;
            
            private DataColumn columnPASSED_INST_NO;
            
            private DataColumn columnCONSIGNEE_DTL;
            
            private DataColumn columnBPO_DTL;
            
            private DataColumn columnPUR_DTL;
            
            private DataColumn columnPUR_AUT_DTL;
            
            private DataColumn columnOFF_INST_NO_DTL;
            
            private DataColumn columnUNIT_DTL;
            
            private DataColumn columnDATETIME;
            
            private DataColumn columnCONSGN_CALL_STATUS;
            
            private DataColumn columnpRegion;
	
            private DataColumn columnCall_Recv_dt_conv;
            
	    private DataColumn columnDT_INSP_DESIRE_conv;

            internal CommandDataTable() : 
                    base("Command") {
                this.InitClass();
            }
            
            internal CommandDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn CASE_NOColumn {
                get {
                    return this.columnCASE_NO;
                }
            }
            
            internal DataColumn Call_SNOColumn {
                get {
                    return this.columnCall_SNO;
                }
            }
            
            internal DataColumn Call_Recv_dtColumn {
                get {
                    return this.columnCall_Recv_dt;
                }
            }
            
            internal DataColumn Region_CodeColumn {
                get {
                    return this.columnRegion_Code;
                }
            }
            
            internal DataColumn RLY_CDColumn {
                get {
                    return this.columnRLY_CD;
                }
            }
            
            internal DataColumn Call_Install_NoColumn {
                get {
                    return this.columnCall_Install_No;
                }
            }
            
            internal DataColumn IE_SnameColumn {
                get {
                    return this.columnIE_Sname;
                }
            }
            
            internal DataColumn Vend_NameColumn {
                get {
                    return this.columnVend_Name;
                }
            }
            
            internal DataColumn Vend_Add1Column {
                get {
                    return this.columnVend_Add1;
                }
            }
            
            internal DataColumn Vend_Add2Column {
                get {
                    return this.columnVend_Add2;
                }
            }
            
            internal DataColumn Vend_CityColumn {
                get {
                    return this.columnVend_City;
                }
            }
            
            internal DataColumn MFG_NameColumn {
                get {
                    return this.columnMFG_Name;
                }
            }
            
            internal DataColumn MFG_Add1Column {
                get {
                    return this.columnMFG_Add1;
                }
            }
            
            internal DataColumn MFG_Add2Column {
                get {
                    return this.columnMFG_Add2;
                }
            }
            
            internal DataColumn MFG_CityColumn {
                get {
                    return this.columnMFG_City;
                }
            }
            
            internal DataColumn MFG_PLACEColumn {
                get {
                    return this.columnMFG_PLACE;
                }
            }
            
            internal DataColumn PO_NOColumn {
                get {
                    return this.columnPO_NO;
                }
            }
            
            internal DataColumn PO_DTColumn {
                get {
                    return this.columnPO_DT;
                }
            }
            
            internal DataColumn CONSIGNEE_DESIGColumn {
                get {
                    return this.columnCONSIGNEE_DESIG;
                }
            }
            
            internal DataColumn CONSIGNEE_CDColumn {
                get {
                    return this.columnCONSIGNEE_CD;
                }
            }
            
            internal DataColumn CONSIGNEE_CITYNAMEColumn {
                get {
                    return this.columnCONSIGNEE_CITYNAME;
                }
            }
            
            internal DataColumn CONSIGNEE_DEPTColumn {
                get {
                    return this.columnCONSIGNEE_DEPT;
                }
            }
            
            internal DataColumn CONSIGNEE_FIRMColumn {
                get {
                    return this.columnCONSIGNEE_FIRM;
                }
            }
            
            internal DataColumn PUR_DESIGColumn {
                get {
                    return this.columnPUR_DESIG;
                }
            }
            
            internal DataColumn PUR_CDColumn {
                get {
                    return this.columnPUR_CD;
                }
            }
            
            internal DataColumn PUR_DEPTColumn {
                get {
                    return this.columnPUR_DEPT;
                }
            }
            
            internal DataColumn PUR_FIRMColumn {
                get {
                    return this.columnPUR_FIRM;
                }
            }
            
            internal DataColumn PUR_CityColumn {
                get {
                    return this.columnPUR_City;
                }
            }
            
            internal DataColumn ITEM_SRNO_POColumn {
                get {
                    return this.columnITEM_SRNO_PO;
                }
            }
            
            internal DataColumn ITEM_DESC_POColumn {
                get {
                    return this.columnITEM_DESC_PO;
                }
            }
            
            internal DataColumn UOM_S_DESCColumn {
                get {
                    return this.columnUOM_S_DESC;
                }
            }
            
            internal DataColumn QTY_ORDEREDColumn {
                get {
                    return this.columnQTY_ORDERED;
                }
            }
            
            internal DataColumn CUM_QTY_PREV_OFFEREDColumn {
                get {
                    return this.columnCUM_QTY_PREV_OFFERED;
                }
            }
            
            internal DataColumn CUM_QTY_PREV_PASSEDColumn {
                get {
                    return this.columnCUM_QTY_PREV_PASSED;
                }
            }
            
            internal DataColumn QTY_TO_INSPColumn {
                get {
                    return this.columnQTY_TO_INSP;
                }
            }
            
            internal DataColumn QTY_PASSEDColumn {
                get {
                    return this.columnQTY_PASSED;
                }
            }
            
            internal DataColumn QTY_REJECTEDColumn {
                get {
                    return this.columnQTY_REJECTED;
                }
            }
            
            internal DataColumn QTY_DUEColumn {
                get {
                    return this.columnQTY_DUE;
                }
            }
            
            internal DataColumn HOLOGRAMColumn {
                get {
                    return this.columnHOLOGRAM;
                }
            }
            
            internal DataColumn NUM_VISITSColumn {
                get {
                    return this.columnNUM_VISITS;
                }
            }
            
            internal DataColumn VISIT_DATESColumn {
                get {
                    return this.columnVISIT_DATES;
                }
            }
            
            internal DataColumn BPO_NAMEColumn {
                get {
                    return this.columnBPO_NAME;
                }
            }
            
            internal DataColumn BPO_ORGNColumn {
                get {
                    return this.columnBPO_ORGN;
                }
            }
            
            internal DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            internal DataColumn HOLOGRAMORGColumn {
                get {
                    return this.columnHOLOGRAMORG;
                }
            }
            
            internal DataColumn REMARKColumn {
                get {
                    return this.columnREMARK;
                }
            }
            
            internal DataColumn DT_INSP_DESIREColumn {
                get {
                    return this.columnDT_INSP_DESIRE;
                }
            }
            
            internal DataColumn ITEM_REMARKColumn {
                get {
                    return this.columnITEM_REMARK;
                }
            }
            
            internal DataColumn AMENDMENT_1Column {
                get {
                    return this.columnAMENDMENT_1;
                }
            }
            
            internal DataColumn AMENDMENTDT_1Column {
                get {
                    return this.columnAMENDMENTDT_1;
                }
            }
            
            internal DataColumn AMENDMENT_2Column {
                get {
                    return this.columnAMENDMENT_2;
                }
            }
            
            internal DataColumn AMENDMENTDT_2Column {
                get {
                    return this.columnAMENDMENTDT_2;
                }
            }
            
            internal DataColumn AMENDMENT_3Column {
                get {
                    return this.columnAMENDMENT_3;
                }
            }
            
            internal DataColumn AMENDMENTDT_3Column {
                get {
                    return this.columnAMENDMENTDT_3;
                }
            }
            
            internal DataColumn AMENDMENT_4Column {
                get {
                    return this.columnAMENDMENT_4;
                }
            }
            
            internal DataColumn AMENDMENTDT_4Column {
                get {
                    return this.columnAMENDMENTDT_4;
                }
            }
            
            internal DataColumn BK_NOColumn {
                get {
                    return this.columnBK_NO;
                }
            }
            
            internal DataColumn SET_NOColumn {
                get {
                    return this.columnSET_NO;
                }
            }
            
            internal DataColumn VISITS_DATESColumn {
                get {
                    return this.columnVISITS_DATES;
                }
            }
            
            internal DataColumn IE_STAMP_IMAGEColumn {
                get {
                    return this.columnIE_STAMP_IMAGE;
                }
            }
            
            internal DataColumn IE_STAMP_IMAGE1Column {
                get {
                    return this.columnIE_STAMP_IMAGE1;
                }
            }
            
            internal DataColumn LAB_TST_RECT_DTColumn {
                get {
                    return this.columnLAB_TST_RECT_DT;
                }
            }
            
            internal DataColumn PASSED_INST_NOColumn {
                get {
                    return this.columnPASSED_INST_NO;
                }
            }
            
            internal DataColumn CONSIGNEE_DTLColumn {
                get {
                    return this.columnCONSIGNEE_DTL;
                }
            }
            
            internal DataColumn BPO_DTLColumn {
                get {
                    return this.columnBPO_DTL;
                }
            }
            
            internal DataColumn PUR_DTLColumn {
                get {
                    return this.columnPUR_DTL;
                }
            }
            
            internal DataColumn PUR_AUT_DTLColumn {
                get {
                    return this.columnPUR_AUT_DTL;
                }
            }
            
            internal DataColumn OFF_INST_NO_DTLColumn {
                get {
                    return this.columnOFF_INST_NO_DTL;
                }
            }
            
            internal DataColumn UNIT_DTLColumn {
                get {
                    return this.columnUNIT_DTL;
                }
            }
            
            internal DataColumn DATETIMEColumn {
                get {
                    return this.columnDATETIME;
                }
            }
            
            internal DataColumn CONSGN_CALL_STATUSColumn {
                get {
                    return this.columnCONSGN_CALL_STATUS;
                }
            }
            
            internal DataColumn pRegionColumn {
                get {
                    return this.columnpRegion;
                }
            }
            
            public CommandRow this[int index] {
                get {
                    return ((CommandRow)(this.Rows[index]));
                }
            }
            
            public event CommandRowChangeEventHandler CommandRowChanged;
            
            public event CommandRowChangeEventHandler CommandRowChanging;
            
            public event CommandRowChangeEventHandler CommandRowDeleted;
            
            public event CommandRowChangeEventHandler CommandRowDeleting;
            
            public void AddCommandRow(CommandRow row) {
                this.Rows.Add(row);
            }
            
            public CommandRow AddCommandRow(
                        string CASE_NO, 
                        string Call_SNO, 
                        string Call_Recv_dt, 
                        string Region_Code, 
                        string RLY_CD, 
                        int Call_Install_No, 
                        string IE_Sname, 
                        string Vend_Name, 
                        string Vend_Add1, 
                        string Vend_Add2, 
                        string Vend_City, 
                        string MFG_Name, 
                        string MFG_Add1, 
                        string MFG_Add2, 
                        string MFG_City, 
                        string MFG_PLACE, 
                        string PO_NO, 
                        string PO_DT, 
                        string CONSIGNEE_DESIG, 
                        int CONSIGNEE_CD, 
                        string CONSIGNEE_CITYNAME, 
                        string CONSIGNEE_DEPT, 
                        string CONSIGNEE_FIRM, 
                        string PUR_DESIG, 
                        string PUR_CD, 
                        string PUR_DEPT, 
                        string PUR_FIRM, 
                        string PUR_City, 
                        int ITEM_SRNO_PO, 
                        string ITEM_DESC_PO, 
                        string UOM_S_DESC, 
                        int QTY_ORDERED, 
                        int CUM_QTY_PREV_OFFERED, 
                        int CUM_QTY_PREV_PASSED, 
                        int QTY_TO_INSP, 
                        int QTY_PASSED, 
                        int QTY_REJECTED, 
                        int QTY_DUE, 
                        string HOLOGRAM, 
                        int NUM_VISITS, 
                        string VISIT_DATES, 
                        string BPO_NAME, 
                        string BPO_ORGN, 
                        string City, 
                        string HOLOGRAMORG, 
                        string REMARK, 
                        string DT_INSP_DESIRE, 
                        string ITEM_REMARK, 
                        string AMENDMENT_1, 
                        string AMENDMENTDT_1, 
                        string AMENDMENT_2, 
                        string AMENDMENTDT_2, 
                        string AMENDMENT_3, 
                        string AMENDMENTDT_3, 
                        string AMENDMENT_4, 
                        string AMENDMENTDT_4, 
                        string BK_NO, 
                        string SET_NO, 
                        string VISITS_DATES, 
                        string IE_STAMP_IMAGE, 
                        string IE_STAMP_IMAGE1, 
                        string LAB_TST_RECT_DT, 
                        string PASSED_INST_NO, 
                        string CONSIGNEE_DTL, 
                        string BPO_DTL, 
                        string PUR_DTL, 
                        string PUR_AUT_DTL, 
                        string OFF_INST_NO_DTL, 
                        string UNIT_DTL, 
                        string DATETIME, 
                        string CONSGN_CALL_STATUS, 
                        string pRegion) {
                CommandRow rowCommandRow = ((CommandRow)(this.NewRow()));
                rowCommandRow.ItemArray = new object[] {
                        CASE_NO,
                        Call_SNO,
                        Call_Recv_dt,
                        Region_Code,
                        RLY_CD,
                        Call_Install_No,
                        IE_Sname,
                        Vend_Name,
                        Vend_Add1,
                        Vend_Add2,
                        Vend_City,
                        MFG_Name,
                        MFG_Add1,
                        MFG_Add2,
                        MFG_City,
                        MFG_PLACE,
                        PO_NO,
                        PO_DT,
                        CONSIGNEE_DESIG,
                        CONSIGNEE_CD,
                        CONSIGNEE_CITYNAME,
                        CONSIGNEE_DEPT,
                        CONSIGNEE_FIRM,
                        PUR_DESIG,
                        PUR_CD,
                        PUR_DEPT,
                        PUR_FIRM,
                        PUR_City,
                        ITEM_SRNO_PO,
                        ITEM_DESC_PO,
                        UOM_S_DESC,
                        QTY_ORDERED,
                        CUM_QTY_PREV_OFFERED,
                        CUM_QTY_PREV_PASSED,
                        QTY_TO_INSP,
                        QTY_PASSED,
                        QTY_REJECTED,
                        QTY_DUE,
                        HOLOGRAM,
                        NUM_VISITS,
                        VISIT_DATES,
                        BPO_NAME,
                        BPO_ORGN,
                        City,
                        HOLOGRAMORG,
                        REMARK,
                        DT_INSP_DESIRE,
                        ITEM_REMARK,
                        AMENDMENT_1,
                        AMENDMENTDT_1,
                        AMENDMENT_2,
                        AMENDMENTDT_2,
                        AMENDMENT_3,
                        AMENDMENTDT_3,
                        AMENDMENT_4,
                        AMENDMENTDT_4,
                        BK_NO,
                        SET_NO,
                        VISITS_DATES,
                        IE_STAMP_IMAGE,
                        IE_STAMP_IMAGE1,
                        LAB_TST_RECT_DT,
                        PASSED_INST_NO,
                        CONSIGNEE_DTL,
                        BPO_DTL,
                        PUR_DTL,
                        PUR_AUT_DTL,
                        OFF_INST_NO_DTL,
                        UNIT_DTL,
                        DATETIME,
                        CONSGN_CALL_STATUS,
                        pRegion};
                this.Rows.Add(rowCommandRow);
                return rowCommandRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CommandDataTable cln = ((CommandDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CommandDataTable();
            }
            
            internal void InitVars() {
                this.columnCASE_NO = this.Columns["CASE_NO"];
                this.columnCall_SNO = this.Columns["Call_SNO"];
                this.columnCall_Recv_dt = this.Columns["Call_Recv_dt"];
                this.columnRegion_Code = this.Columns["Region_Code"];
                this.columnRLY_CD = this.Columns["RLY_CD"];
                this.columnCall_Install_No = this.Columns["Call_Install_No"];
                this.columnIE_Sname = this.Columns["IE_Sname"];
                this.columnVend_Name = this.Columns["Vend_Name"];
                this.columnVend_Add1 = this.Columns["Vend_Add1"];
                this.columnVend_Add2 = this.Columns["Vend_Add2"];
                this.columnVend_City = this.Columns["Vend_City"];
                this.columnMFG_Name = this.Columns["MFG_Name"];
                this.columnMFG_Add1 = this.Columns["MFG_Add1"];
                this.columnMFG_Add2 = this.Columns["MFG_Add2"];
                this.columnMFG_City = this.Columns["MFG_City"];
                this.columnMFG_PLACE = this.Columns["MFG_PLACE"];
                this.columnPO_NO = this.Columns["PO_NO"];
                this.columnPO_DT = this.Columns["PO_DT"];
                this.columnCONSIGNEE_DESIG = this.Columns["CONSIGNEE_DESIG"];
                this.columnCONSIGNEE_CD = this.Columns["CONSIGNEE_CD"];
                this.columnCONSIGNEE_CITYNAME = this.Columns["CONSIGNEE_CITYNAME"];
                this.columnCONSIGNEE_DEPT = this.Columns["CONSIGNEE_DEPT"];
                this.columnCONSIGNEE_FIRM = this.Columns["CONSIGNEE_FIRM"];
                this.columnPUR_DESIG = this.Columns["PUR_DESIG"];
                this.columnPUR_CD = this.Columns["PUR_CD"];
                this.columnPUR_DEPT = this.Columns["PUR_DEPT"];
                this.columnPUR_FIRM = this.Columns["PUR_FIRM"];
                this.columnPUR_City = this.Columns["PUR_City"];
                this.columnITEM_SRNO_PO = this.Columns["ITEM_SRNO_PO"];
                this.columnITEM_DESC_PO = this.Columns["ITEM_DESC_PO"];
                this.columnUOM_S_DESC = this.Columns["UOM_S_DESC"];
                this.columnQTY_ORDERED = this.Columns["QTY_ORDERED"];
                this.columnCUM_QTY_PREV_OFFERED = this.Columns["CUM_QTY_PREV_OFFERED"];
                this.columnCUM_QTY_PREV_PASSED = this.Columns["CUM_QTY_PREV_PASSED"];
                this.columnQTY_TO_INSP = this.Columns["QTY_TO_INSP"];
                this.columnQTY_PASSED = this.Columns["QTY_PASSED"];
                this.columnQTY_REJECTED = this.Columns["QTY_REJECTED"];
                this.columnQTY_DUE = this.Columns["QTY_DUE"];
                this.columnHOLOGRAM = this.Columns["HOLOGRAM"];
                this.columnNUM_VISITS = this.Columns["NUM_VISITS"];
                this.columnVISIT_DATES = this.Columns["VISIT_DATES"];
                this.columnBPO_NAME = this.Columns["BPO_NAME"];
                this.columnBPO_ORGN = this.Columns["BPO_ORGN"];
                this.columnCity = this.Columns["City"];
                this.columnHOLOGRAMORG = this.Columns["HOLOGRAMORG"];
                this.columnREMARK = this.Columns["REMARK"];
                this.columnDT_INSP_DESIRE = this.Columns["DT_INSP_DESIRE"];
                this.columnITEM_REMARK = this.Columns["ITEM_REMARK"];
                this.columnAMENDMENT_1 = this.Columns["AMENDMENT_1"];
                this.columnAMENDMENTDT_1 = this.Columns["AMENDMENTDT_1"];
                this.columnAMENDMENT_2 = this.Columns["AMENDMENT_2"];
                this.columnAMENDMENTDT_2 = this.Columns["AMENDMENTDT_2"];
                this.columnAMENDMENT_3 = this.Columns["AMENDMENT_3"];
                this.columnAMENDMENTDT_3 = this.Columns["AMENDMENTDT_3"];
                this.columnAMENDMENT_4 = this.Columns["AMENDMENT_4"];
                this.columnAMENDMENTDT_4 = this.Columns["AMENDMENTDT_4"];
                this.columnBK_NO = this.Columns["BK_NO"];
                this.columnSET_NO = this.Columns["SET_NO"];
                this.columnVISITS_DATES = this.Columns["VISITS_DATES"];
                this.columnIE_STAMP_IMAGE = this.Columns["IE_STAMP_IMAGE"];
                this.columnIE_STAMP_IMAGE1 = this.Columns["IE_STAMP_IMAGE1"];
                this.columnLAB_TST_RECT_DT = this.Columns["LAB_TST_RECT_DT"];
                this.columnPASSED_INST_NO = this.Columns["PASSED_INST_NO"];
                this.columnCONSIGNEE_DTL = this.Columns["CONSIGNEE_DTL"];
                this.columnBPO_DTL = this.Columns["BPO_DTL"];
                this.columnPUR_DTL = this.Columns["PUR_DTL"];
                this.columnPUR_AUT_DTL = this.Columns["PUR_AUT_DTL"];
                this.columnOFF_INST_NO_DTL = this.Columns["OFF_INST_NO_DTL"];
                this.columnUNIT_DTL = this.Columns["UNIT_DTL"];
                this.columnDATETIME = this.Columns["DATETIME"];
                this.columnCONSGN_CALL_STATUS = this.Columns["CONSGN_CALL_STATUS"];
                this.columnpRegion = this.Columns["pRegion"];
            }
            
            private void InitClass() {
                this.columnCASE_NO = new DataColumn("CASE_NO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCASE_NO);
                this.columnCall_SNO = new DataColumn("Call_SNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCall_SNO);
                this.columnCall_Recv_dt = new DataColumn("Call_Recv_dt", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCall_Recv_dt);
                this.columnRegion_Code = new DataColumn("Region_Code", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRegion_Code);
                this.columnRLY_CD = new DataColumn("RLY_CD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRLY_CD);
                this.columnCall_Install_No = new DataColumn("Call_Install_No", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCall_Install_No);
                this.columnIE_Sname = new DataColumn("IE_Sname", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIE_Sname);
                this.columnVend_Name = new DataColumn("Vend_Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVend_Name);
                this.columnVend_Add1 = new DataColumn("Vend_Add1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVend_Add1);
                this.columnVend_Add2 = new DataColumn("Vend_Add2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVend_Add2);
                this.columnVend_City = new DataColumn("Vend_City", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVend_City);
                this.columnMFG_Name = new DataColumn("MFG_Name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMFG_Name);
                this.columnMFG_Add1 = new DataColumn("MFG_Add1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMFG_Add1);
                this.columnMFG_Add2 = new DataColumn("MFG_Add2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMFG_Add2);
                this.columnMFG_City = new DataColumn("MFG_City", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMFG_City);
                this.columnMFG_PLACE = new DataColumn("MFG_PLACE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMFG_PLACE);
                this.columnPO_NO = new DataColumn("PO_NO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPO_NO);
                this.columnPO_DT = new DataColumn("PO_DT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPO_DT);
                this.columnCONSIGNEE_DESIG = new DataColumn("CONSIGNEE_DESIG", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCONSIGNEE_DESIG);
                this.columnCONSIGNEE_CD = new DataColumn("CONSIGNEE_CD", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCONSIGNEE_CD);
                this.columnCONSIGNEE_CITYNAME = new DataColumn("CONSIGNEE_CITYNAME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCONSIGNEE_CITYNAME);
                this.columnCONSIGNEE_DEPT = new DataColumn("CONSIGNEE_DEPT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCONSIGNEE_DEPT);
                this.columnCONSIGNEE_FIRM = new DataColumn("CONSIGNEE_FIRM", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCONSIGNEE_FIRM);
                this.columnPUR_DESIG = new DataColumn("PUR_DESIG", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPUR_DESIG);
                this.columnPUR_CD = new DataColumn("PUR_CD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPUR_CD);
                this.columnPUR_DEPT = new DataColumn("PUR_DEPT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPUR_DEPT);
                this.columnPUR_FIRM = new DataColumn("PUR_FIRM", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPUR_FIRM);
                this.columnPUR_City = new DataColumn("PUR_City", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPUR_City);
                this.columnITEM_SRNO_PO = new DataColumn("ITEM_SRNO_PO", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnITEM_SRNO_PO);
                this.columnITEM_DESC_PO = new DataColumn("ITEM_DESC_PO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnITEM_DESC_PO);
                this.columnUOM_S_DESC = new DataColumn("UOM_S_DESC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUOM_S_DESC);
                this.columnQTY_ORDERED = new DataColumn("QTY_ORDERED", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnQTY_ORDERED);
                this.columnCUM_QTY_PREV_OFFERED = new DataColumn("CUM_QTY_PREV_OFFERED", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCUM_QTY_PREV_OFFERED);
                this.columnCUM_QTY_PREV_PASSED = new DataColumn("CUM_QTY_PREV_PASSED", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCUM_QTY_PREV_PASSED);
                this.columnQTY_TO_INSP = new DataColumn("QTY_TO_INSP", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnQTY_TO_INSP);
                this.columnQTY_PASSED = new DataColumn("QTY_PASSED", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnQTY_PASSED);
                this.columnQTY_REJECTED = new DataColumn("QTY_REJECTED", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnQTY_REJECTED);
                this.columnQTY_DUE = new DataColumn("QTY_DUE", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnQTY_DUE);
                this.columnHOLOGRAM = new DataColumn("HOLOGRAM", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHOLOGRAM);
                this.columnNUM_VISITS = new DataColumn("NUM_VISITS", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNUM_VISITS);
                this.columnVISIT_DATES = new DataColumn("VISIT_DATES", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVISIT_DATES);
                this.columnBPO_NAME = new DataColumn("BPO_NAME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBPO_NAME);
                this.columnBPO_ORGN = new DataColumn("BPO_ORGN", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBPO_ORGN);
                this.columnCity = new DataColumn("City", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCity);
                this.columnHOLOGRAMORG = new DataColumn("HOLOGRAMORG", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHOLOGRAMORG);
                this.columnREMARK = new DataColumn("REMARK", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnREMARK);
                this.columnDT_INSP_DESIRE = new DataColumn("DT_INSP_DESIRE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDT_INSP_DESIRE);
                this.columnITEM_REMARK = new DataColumn("ITEM_REMARK", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnITEM_REMARK);
                this.columnAMENDMENT_1 = new DataColumn("AMENDMENT_1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAMENDMENT_1);
                this.columnAMENDMENTDT_1 = new DataColumn("AMENDMENTDT_1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAMENDMENTDT_1);
                this.columnAMENDMENT_2 = new DataColumn("AMENDMENT_2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAMENDMENT_2);
                this.columnAMENDMENTDT_2 = new DataColumn("AMENDMENTDT_2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAMENDMENTDT_2);
                this.columnAMENDMENT_3 = new DataColumn("AMENDMENT_3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAMENDMENT_3);
                this.columnAMENDMENTDT_3 = new DataColumn("AMENDMENTDT_3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAMENDMENTDT_3);
                this.columnAMENDMENT_4 = new DataColumn("AMENDMENT_4", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAMENDMENT_4);
                this.columnAMENDMENTDT_4 = new DataColumn("AMENDMENTDT_4", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAMENDMENTDT_4);
                this.columnBK_NO = new DataColumn("BK_NO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBK_NO);
                this.columnSET_NO = new DataColumn("SET_NO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSET_NO);
                this.columnVISITS_DATES = new DataColumn("VISITS_DATES", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVISITS_DATES);
                this.columnIE_STAMP_IMAGE = new DataColumn("IE_STAMP_IMAGE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIE_STAMP_IMAGE);
                this.columnIE_STAMP_IMAGE1 = new DataColumn("IE_STAMP_IMAGE1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIE_STAMP_IMAGE1);
                this.columnLAB_TST_RECT_DT = new DataColumn("LAB_TST_RECT_DT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLAB_TST_RECT_DT);
                this.columnPASSED_INST_NO = new DataColumn("PASSED_INST_NO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPASSED_INST_NO);
                this.columnCONSIGNEE_DTL = new DataColumn("CONSIGNEE_DTL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCONSIGNEE_DTL);
                this.columnBPO_DTL = new DataColumn("BPO_DTL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBPO_DTL);
                this.columnPUR_DTL = new DataColumn("PUR_DTL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPUR_DTL);
                this.columnPUR_AUT_DTL = new DataColumn("PUR_AUT_DTL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPUR_AUT_DTL);
                this.columnOFF_INST_NO_DTL = new DataColumn("OFF_INST_NO_DTL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOFF_INST_NO_DTL);
                this.columnUNIT_DTL = new DataColumn("UNIT_DTL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUNIT_DTL);
                this.columnDATETIME = new DataColumn("DATETIME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDATETIME);
                this.columnCONSGN_CALL_STATUS = new DataColumn("CONSGN_CALL_STATUS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCONSGN_CALL_STATUS);
                this.columnpRegion = new DataColumn("pRegion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnpRegion);
            }
            
            public CommandRow NewCommandRow() {
                return ((CommandRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CommandRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CommandRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CommandRowChanged != null)) {
                    this.CommandRowChanged(this, new CommandRowChangeEvent(((CommandRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CommandRowChanging != null)) {
                    this.CommandRowChanging(this, new CommandRowChangeEvent(((CommandRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CommandRowDeleted != null)) {
                    this.CommandRowDeleted(this, new CommandRowChangeEvent(((CommandRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CommandRowDeleting != null)) {
                    this.CommandRowDeleting(this, new CommandRowChangeEvent(((CommandRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCommandRow(CommandRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CommandRow : DataRow {
            
            private CommandDataTable tableCommand;
            
            internal CommandRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCommand = ((CommandDataTable)(this.Table));
            }
            
            public string CASE_NO {
                get {
                    try {
                        return ((string)(this[this.tableCommand.CASE_NOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.CASE_NOColumn] = value;
                }
            }
            
            public string Call_SNO {
                get {
                    try {
                        return ((string)(this[this.tableCommand.Call_SNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.Call_SNOColumn] = value;
                }
            }
            
            public string Call_Recv_dt {
                get {
                    try {
                        return ((string)(this[this.tableCommand.Call_Recv_dtColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.Call_Recv_dtColumn] = value;
                }
            }
            
            public string Region_Code {
                get {
                    try {
                        return ((string)(this[this.tableCommand.Region_CodeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.Region_CodeColumn] = value;
                }
            }
            
            public string RLY_CD {
                get {
                    try {
                        return ((string)(this[this.tableCommand.RLY_CDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.RLY_CDColumn] = value;
                }
            }
            
            public int Call_Install_No {
                get {
                    try {
                        return ((int)(this[this.tableCommand.Call_Install_NoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.Call_Install_NoColumn] = value;
                }
            }
            
            public string IE_Sname {
                get {
                    try {
                        return ((string)(this[this.tableCommand.IE_SnameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.IE_SnameColumn] = value;
                }
            }
            
            public string Vend_Name {
                get {
                    try {
                        return ((string)(this[this.tableCommand.Vend_NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.Vend_NameColumn] = value;
                }
            }
            
            public string Vend_Add1 {
                get {
                    try {
                        return ((string)(this[this.tableCommand.Vend_Add1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.Vend_Add1Column] = value;
                }
            }
            
            public string Vend_Add2 {
                get {
                    try {
                        return ((string)(this[this.tableCommand.Vend_Add2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.Vend_Add2Column] = value;
                }
            }
            
            public string Vend_City {
                get {
                    try {
                        return ((string)(this[this.tableCommand.Vend_CityColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.Vend_CityColumn] = value;
                }
            }
            
            public string MFG_Name {
                get {
                    try {
                        return ((string)(this[this.tableCommand.MFG_NameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.MFG_NameColumn] = value;
                }
            }
            
            public string MFG_Add1 {
                get {
                    try {
                        return ((string)(this[this.tableCommand.MFG_Add1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.MFG_Add1Column] = value;
                }
            }
            
            public string MFG_Add2 {
                get {
                    try {
                        return ((string)(this[this.tableCommand.MFG_Add2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.MFG_Add2Column] = value;
                }
            }
            
            public string MFG_City {
                get {
                    try {
                        return ((string)(this[this.tableCommand.MFG_CityColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.MFG_CityColumn] = value;
                }
            }
            
            public string MFG_PLACE {
                get {
                    try {
                        return ((string)(this[this.tableCommand.MFG_PLACEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.MFG_PLACEColumn] = value;
                }
            }
            
            public string PO_NO {
                get {
                    try {
                        return ((string)(this[this.tableCommand.PO_NOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.PO_NOColumn] = value;
                }
            }
            
            public string PO_DT {
                get {
                    try {
                        return ((string)(this[this.tableCommand.PO_DTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.PO_DTColumn] = value;
                }
            }
            
            public string CONSIGNEE_DESIG {
                get {
                    try {
                        return ((string)(this[this.tableCommand.CONSIGNEE_DESIGColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.CONSIGNEE_DESIGColumn] = value;
                }
            }
            
            public int CONSIGNEE_CD {
                get {
                    try {
                        return ((int)(this[this.tableCommand.CONSIGNEE_CDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.CONSIGNEE_CDColumn] = value;
                }
            }
            
            public string CONSIGNEE_CITYNAME {
                get {
                    try {
                        return ((string)(this[this.tableCommand.CONSIGNEE_CITYNAMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.CONSIGNEE_CITYNAMEColumn] = value;
                }
            }
            
            public string CONSIGNEE_DEPT {
                get {
                    try {
                        return ((string)(this[this.tableCommand.CONSIGNEE_DEPTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.CONSIGNEE_DEPTColumn] = value;
                }
            }
            
            public string CONSIGNEE_FIRM {
                get {
                    try {
                        return ((string)(this[this.tableCommand.CONSIGNEE_FIRMColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.CONSIGNEE_FIRMColumn] = value;
                }
            }
            
            public string PUR_DESIG {
                get {
                    try {
                        return ((string)(this[this.tableCommand.PUR_DESIGColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.PUR_DESIGColumn] = value;
                }
            }
            
            public string PUR_CD {
                get {
                    try {
                        return ((string)(this[this.tableCommand.PUR_CDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.PUR_CDColumn] = value;
                }
            }
            
            public string PUR_DEPT {
                get {
                    try {
                        return ((string)(this[this.tableCommand.PUR_DEPTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.PUR_DEPTColumn] = value;
                }
            }
            
            public string PUR_FIRM {
                get {
                    try {
                        return ((string)(this[this.tableCommand.PUR_FIRMColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.PUR_FIRMColumn] = value;
                }
            }
            
            public string PUR_City {
                get {
                    try {
                        return ((string)(this[this.tableCommand.PUR_CityColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.PUR_CityColumn] = value;
                }
            }
            
            public int ITEM_SRNO_PO {
                get {
                    try {
                        return ((int)(this[this.tableCommand.ITEM_SRNO_POColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.ITEM_SRNO_POColumn] = value;
                }
            }
            
            public string ITEM_DESC_PO {
                get {
                    try {
                        return ((string)(this[this.tableCommand.ITEM_DESC_POColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.ITEM_DESC_POColumn] = value;
                }
            }
            
            public string UOM_S_DESC {
                get {
                    try {
                        return ((string)(this[this.tableCommand.UOM_S_DESCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.UOM_S_DESCColumn] = value;
                }
            }
            
            public int QTY_ORDERED {
                get {
                    try {
                        return ((int)(this[this.tableCommand.QTY_ORDEREDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.QTY_ORDEREDColumn] = value;
                }
            }
            
            public int CUM_QTY_PREV_OFFERED {
                get {
                    try {
                        return ((int)(this[this.tableCommand.CUM_QTY_PREV_OFFEREDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.CUM_QTY_PREV_OFFEREDColumn] = value;
                }
            }
            
            public int CUM_QTY_PREV_PASSED {
                get {
                    try {
                        return ((int)(this[this.tableCommand.CUM_QTY_PREV_PASSEDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.CUM_QTY_PREV_PASSEDColumn] = value;
                }
            }
            
            public int QTY_TO_INSP {
                get {
                    try {
                        return ((int)(this[this.tableCommand.QTY_TO_INSPColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.QTY_TO_INSPColumn] = value;
                }
            }
            
            public int QTY_PASSED {
                get {
                    try {
                        return ((int)(this[this.tableCommand.QTY_PASSEDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.QTY_PASSEDColumn] = value;
                }
            }
            
            public int QTY_REJECTED {
                get {
                    try {
                        return ((int)(this[this.tableCommand.QTY_REJECTEDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.QTY_REJECTEDColumn] = value;
                }
            }
            
            public int QTY_DUE {
                get {
                    try {
                        return ((int)(this[this.tableCommand.QTY_DUEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.QTY_DUEColumn] = value;
                }
            }
            
            public string HOLOGRAM {
                get {
                    try {
                        return ((string)(this[this.tableCommand.HOLOGRAMColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.HOLOGRAMColumn] = value;
                }
            }
            
            public int NUM_VISITS {
                get {
                    try {
                        return ((int)(this[this.tableCommand.NUM_VISITSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.NUM_VISITSColumn] = value;
                }
            }
            
            public string VISIT_DATES {
                get {
                    try {
                        return ((string)(this[this.tableCommand.VISIT_DATESColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.VISIT_DATESColumn] = value;
                }
            }
            
            public string BPO_NAME {
                get {
                    try {
                        return ((string)(this[this.tableCommand.BPO_NAMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.BPO_NAMEColumn] = value;
                }
            }
            
            public string BPO_ORGN {
                get {
                    try {
                        return ((string)(this[this.tableCommand.BPO_ORGNColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.BPO_ORGNColumn] = value;
                }
            }
            
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableCommand.CityColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.CityColumn] = value;
                }
            }
            
            public string HOLOGRAMORG {
                get {
                    try {
                        return ((string)(this[this.tableCommand.HOLOGRAMORGColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.HOLOGRAMORGColumn] = value;
                }
            }
            
            public string REMARK {
                get {
                    try {
                        return ((string)(this[this.tableCommand.REMARKColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.REMARKColumn] = value;
                }
            }
            
            public string DT_INSP_DESIRE {
                get {
                    try {
                        return ((string)(this[this.tableCommand.DT_INSP_DESIREColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.DT_INSP_DESIREColumn] = value;
                }
            }
            
            public string ITEM_REMARK {
                get {
                    try {
                        return ((string)(this[this.tableCommand.ITEM_REMARKColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.ITEM_REMARKColumn] = value;
                }
            }
            
            public string AMENDMENT_1 {
                get {
                    try {
                        return ((string)(this[this.tableCommand.AMENDMENT_1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.AMENDMENT_1Column] = value;
                }
            }
            
            public string AMENDMENTDT_1 {
                get {
                    try {
                        return ((string)(this[this.tableCommand.AMENDMENTDT_1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.AMENDMENTDT_1Column] = value;
                }
            }
            
            public string AMENDMENT_2 {
                get {
                    try {
                        return ((string)(this[this.tableCommand.AMENDMENT_2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.AMENDMENT_2Column] = value;
                }
            }
            
            public string AMENDMENTDT_2 {
                get {
                    try {
                        return ((string)(this[this.tableCommand.AMENDMENTDT_2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.AMENDMENTDT_2Column] = value;
                }
            }
            
            public string AMENDMENT_3 {
                get {
                    try {
                        return ((string)(this[this.tableCommand.AMENDMENT_3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.AMENDMENT_3Column] = value;
                }
            }
            
            public string AMENDMENTDT_3 {
                get {
                    try {
                        return ((string)(this[this.tableCommand.AMENDMENTDT_3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.AMENDMENTDT_3Column] = value;
                }
            }
            
            public string AMENDMENT_4 {
                get {
                    try {
                        return ((string)(this[this.tableCommand.AMENDMENT_4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.AMENDMENT_4Column] = value;
                }
            }
            
            public string AMENDMENTDT_4 {
                get {
                    try {
                        return ((string)(this[this.tableCommand.AMENDMENTDT_4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.AMENDMENTDT_4Column] = value;
                }
            }
            
            public string BK_NO {
                get {
                    try {
                        return ((string)(this[this.tableCommand.BK_NOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.BK_NOColumn] = value;
                }
            }
            
            public string SET_NO {
                get {
                    try {
                        return ((string)(this[this.tableCommand.SET_NOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.SET_NOColumn] = value;
                }
            }
            
            public string VISITS_DATES {
                get {
                    try {
                        return ((string)(this[this.tableCommand.VISITS_DATESColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.VISITS_DATESColumn] = value;
                }
            }
            
            public string IE_STAMP_IMAGE {
                get {
                    try {
                        return ((string)(this[this.tableCommand.IE_STAMP_IMAGEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.IE_STAMP_IMAGEColumn] = value;
                }
            }
            
            public string IE_STAMP_IMAGE1 {
                get {
                    try {
                        return ((string)(this[this.tableCommand.IE_STAMP_IMAGE1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.IE_STAMP_IMAGE1Column] = value;
                }
            }
            
            public string LAB_TST_RECT_DT {
                get {
                    try {
                        return ((string)(this[this.tableCommand.LAB_TST_RECT_DTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.LAB_TST_RECT_DTColumn] = value;
                }
            }
            
            public string PASSED_INST_NO {
                get {
                    try {
                        return ((string)(this[this.tableCommand.PASSED_INST_NOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.PASSED_INST_NOColumn] = value;
                }
            }
            
            public string CONSIGNEE_DTL {
                get {
                    try {
                        return ((string)(this[this.tableCommand.CONSIGNEE_DTLColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.CONSIGNEE_DTLColumn] = value;
                }
            }
            
            public string BPO_DTL {
                get {
                    try {
                        return ((string)(this[this.tableCommand.BPO_DTLColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.BPO_DTLColumn] = value;
                }
            }
            
            public string PUR_DTL {
                get {
                    try {
                        return ((string)(this[this.tableCommand.PUR_DTLColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.PUR_DTLColumn] = value;
                }
            }
            
            public string PUR_AUT_DTL {
                get {
                    try {
                        return ((string)(this[this.tableCommand.PUR_AUT_DTLColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.PUR_AUT_DTLColumn] = value;
                }
            }
            
            public string OFF_INST_NO_DTL {
                get {
                    try {
                        return ((string)(this[this.tableCommand.OFF_INST_NO_DTLColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.OFF_INST_NO_DTLColumn] = value;
                }
            }
            
            public string UNIT_DTL {
                get {
                    try {
                        return ((string)(this[this.tableCommand.UNIT_DTLColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.UNIT_DTLColumn] = value;
                }
            }
            
            public string DATETIME {
                get {
                    try {
                        return ((string)(this[this.tableCommand.DATETIMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.DATETIMEColumn] = value;
                }
            }
            
            public string CONSGN_CALL_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableCommand.CONSGN_CALL_STATUSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.CONSGN_CALL_STATUSColumn] = value;
                }
            }
            
            public string pRegion {
                get {
                    try {
                        return ((string)(this[this.tableCommand.pRegionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommand.pRegionColumn] = value;
                }
            }
            
            public bool IsCASE_NONull() {
                return this.IsNull(this.tableCommand.CASE_NOColumn);
            }
            
            public void SetCASE_NONull() {
                this[this.tableCommand.CASE_NOColumn] = System.Convert.DBNull;
            }
            
            public bool IsCall_SNONull() {
                return this.IsNull(this.tableCommand.Call_SNOColumn);
            }
            
            public void SetCall_SNONull() {
                this[this.tableCommand.Call_SNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsCall_Recv_dtNull() {
                return this.IsNull(this.tableCommand.Call_Recv_dtColumn);
            }
            
            public void SetCall_Recv_dtNull() {
                this[this.tableCommand.Call_Recv_dtColumn] = System.Convert.DBNull;
            }
            
            public bool IsRegion_CodeNull() {
                return this.IsNull(this.tableCommand.Region_CodeColumn);
            }
            
            public void SetRegion_CodeNull() {
                this[this.tableCommand.Region_CodeColumn] = System.Convert.DBNull;
            }
            
            public bool IsRLY_CDNull() {
                return this.IsNull(this.tableCommand.RLY_CDColumn);
            }
            
            public void SetRLY_CDNull() {
                this[this.tableCommand.RLY_CDColumn] = System.Convert.DBNull;
            }
            
            public bool IsCall_Install_NoNull() {
                return this.IsNull(this.tableCommand.Call_Install_NoColumn);
            }
            
            public void SetCall_Install_NoNull() {
                this[this.tableCommand.Call_Install_NoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIE_SnameNull() {
                return this.IsNull(this.tableCommand.IE_SnameColumn);
            }
            
            public void SetIE_SnameNull() {
                this[this.tableCommand.IE_SnameColumn] = System.Convert.DBNull;
            }
            
            public bool IsVend_NameNull() {
                return this.IsNull(this.tableCommand.Vend_NameColumn);
            }
            
            public void SetVend_NameNull() {
                this[this.tableCommand.Vend_NameColumn] = System.Convert.DBNull;
            }
            
            public bool IsVend_Add1Null() {
                return this.IsNull(this.tableCommand.Vend_Add1Column);
            }
            
            public void SetVend_Add1Null() {
                this[this.tableCommand.Vend_Add1Column] = System.Convert.DBNull;
            }
            
            public bool IsVend_Add2Null() {
                return this.IsNull(this.tableCommand.Vend_Add2Column);
            }
            
            public void SetVend_Add2Null() {
                this[this.tableCommand.Vend_Add2Column] = System.Convert.DBNull;
            }
            
            public bool IsVend_CityNull() {
                return this.IsNull(this.tableCommand.Vend_CityColumn);
            }
            
            public void SetVend_CityNull() {
                this[this.tableCommand.Vend_CityColumn] = System.Convert.DBNull;
            }
            
            public bool IsMFG_NameNull() {
                return this.IsNull(this.tableCommand.MFG_NameColumn);
            }
            
            public void SetMFG_NameNull() {
                this[this.tableCommand.MFG_NameColumn] = System.Convert.DBNull;
            }
            
            public bool IsMFG_Add1Null() {
                return this.IsNull(this.tableCommand.MFG_Add1Column);
            }
            
            public void SetMFG_Add1Null() {
                this[this.tableCommand.MFG_Add1Column] = System.Convert.DBNull;
            }
            
            public bool IsMFG_Add2Null() {
                return this.IsNull(this.tableCommand.MFG_Add2Column);
            }
            
            public void SetMFG_Add2Null() {
                this[this.tableCommand.MFG_Add2Column] = System.Convert.DBNull;
            }
            
            public bool IsMFG_CityNull() {
                return this.IsNull(this.tableCommand.MFG_CityColumn);
            }
            
            public void SetMFG_CityNull() {
                this[this.tableCommand.MFG_CityColumn] = System.Convert.DBNull;
            }
            
            public bool IsMFG_PLACENull() {
                return this.IsNull(this.tableCommand.MFG_PLACEColumn);
            }
            
            public void SetMFG_PLACENull() {
                this[this.tableCommand.MFG_PLACEColumn] = System.Convert.DBNull;
            }
            
            public bool IsPO_NONull() {
                return this.IsNull(this.tableCommand.PO_NOColumn);
            }
            
            public void SetPO_NONull() {
                this[this.tableCommand.PO_NOColumn] = System.Convert.DBNull;
            }
            
            public bool IsPO_DTNull() {
                return this.IsNull(this.tableCommand.PO_DTColumn);
            }
            
            public void SetPO_DTNull() {
                this[this.tableCommand.PO_DTColumn] = System.Convert.DBNull;
            }
            
            public bool IsCONSIGNEE_DESIGNull() {
                return this.IsNull(this.tableCommand.CONSIGNEE_DESIGColumn);
            }
            
            public void SetCONSIGNEE_DESIGNull() {
                this[this.tableCommand.CONSIGNEE_DESIGColumn] = System.Convert.DBNull;
            }
            
            public bool IsCONSIGNEE_CDNull() {
                return this.IsNull(this.tableCommand.CONSIGNEE_CDColumn);
            }
            
            public void SetCONSIGNEE_CDNull() {
                this[this.tableCommand.CONSIGNEE_CDColumn] = System.Convert.DBNull;
            }
            
            public bool IsCONSIGNEE_CITYNAMENull() {
                return this.IsNull(this.tableCommand.CONSIGNEE_CITYNAMEColumn);
            }
            
            public void SetCONSIGNEE_CITYNAMENull() {
                this[this.tableCommand.CONSIGNEE_CITYNAMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsCONSIGNEE_DEPTNull() {
                return this.IsNull(this.tableCommand.CONSIGNEE_DEPTColumn);
            }
            
            public void SetCONSIGNEE_DEPTNull() {
                this[this.tableCommand.CONSIGNEE_DEPTColumn] = System.Convert.DBNull;
            }
            
            public bool IsCONSIGNEE_FIRMNull() {
                return this.IsNull(this.tableCommand.CONSIGNEE_FIRMColumn);
            }
            
            public void SetCONSIGNEE_FIRMNull() {
                this[this.tableCommand.CONSIGNEE_FIRMColumn] = System.Convert.DBNull;
            }
            
            public bool IsPUR_DESIGNull() {
                return this.IsNull(this.tableCommand.PUR_DESIGColumn);
            }
            
            public void SetPUR_DESIGNull() {
                this[this.tableCommand.PUR_DESIGColumn] = System.Convert.DBNull;
            }
            
            public bool IsPUR_CDNull() {
                return this.IsNull(this.tableCommand.PUR_CDColumn);
            }
            
            public void SetPUR_CDNull() {
                this[this.tableCommand.PUR_CDColumn] = System.Convert.DBNull;
            }
            
            public bool IsPUR_DEPTNull() {
                return this.IsNull(this.tableCommand.PUR_DEPTColumn);
            }
            
            public void SetPUR_DEPTNull() {
                this[this.tableCommand.PUR_DEPTColumn] = System.Convert.DBNull;
            }
            
            public bool IsPUR_FIRMNull() {
                return this.IsNull(this.tableCommand.PUR_FIRMColumn);
            }
            
            public void SetPUR_FIRMNull() {
                this[this.tableCommand.PUR_FIRMColumn] = System.Convert.DBNull;
            }
            
            public bool IsPUR_CityNull() {
                return this.IsNull(this.tableCommand.PUR_CityColumn);
            }
            
            public void SetPUR_CityNull() {
                this[this.tableCommand.PUR_CityColumn] = System.Convert.DBNull;
            }
            
            public bool IsITEM_SRNO_PONull() {
                return this.IsNull(this.tableCommand.ITEM_SRNO_POColumn);
            }
            
            public void SetITEM_SRNO_PONull() {
                this[this.tableCommand.ITEM_SRNO_POColumn] = System.Convert.DBNull;
            }
            
            public bool IsITEM_DESC_PONull() {
                return this.IsNull(this.tableCommand.ITEM_DESC_POColumn);
            }
            
            public void SetITEM_DESC_PONull() {
                this[this.tableCommand.ITEM_DESC_POColumn] = System.Convert.DBNull;
            }
            
            public bool IsUOM_S_DESCNull() {
                return this.IsNull(this.tableCommand.UOM_S_DESCColumn);
            }
            
            public void SetUOM_S_DESCNull() {
                this[this.tableCommand.UOM_S_DESCColumn] = System.Convert.DBNull;
            }
            
            public bool IsQTY_ORDEREDNull() {
                return this.IsNull(this.tableCommand.QTY_ORDEREDColumn);
            }
            
            public void SetQTY_ORDEREDNull() {
                this[this.tableCommand.QTY_ORDEREDColumn] = System.Convert.DBNull;
            }
            
            public bool IsCUM_QTY_PREV_OFFEREDNull() {
                return this.IsNull(this.tableCommand.CUM_QTY_PREV_OFFEREDColumn);
            }
            
            public void SetCUM_QTY_PREV_OFFEREDNull() {
                this[this.tableCommand.CUM_QTY_PREV_OFFEREDColumn] = System.Convert.DBNull;
            }
            
            public bool IsCUM_QTY_PREV_PASSEDNull() {
                return this.IsNull(this.tableCommand.CUM_QTY_PREV_PASSEDColumn);
            }
            
            public void SetCUM_QTY_PREV_PASSEDNull() {
                this[this.tableCommand.CUM_QTY_PREV_PASSEDColumn] = System.Convert.DBNull;
            }
            
            public bool IsQTY_TO_INSPNull() {
                return this.IsNull(this.tableCommand.QTY_TO_INSPColumn);
            }
            
            public void SetQTY_TO_INSPNull() {
                this[this.tableCommand.QTY_TO_INSPColumn] = System.Convert.DBNull;
            }
            
            public bool IsQTY_PASSEDNull() {
                return this.IsNull(this.tableCommand.QTY_PASSEDColumn);
            }
            
            public void SetQTY_PASSEDNull() {
                this[this.tableCommand.QTY_PASSEDColumn] = System.Convert.DBNull;
            }
            
            public bool IsQTY_REJECTEDNull() {
                return this.IsNull(this.tableCommand.QTY_REJECTEDColumn);
            }
            
            public void SetQTY_REJECTEDNull() {
                this[this.tableCommand.QTY_REJECTEDColumn] = System.Convert.DBNull;
            }
            
            public bool IsQTY_DUENull() {
                return this.IsNull(this.tableCommand.QTY_DUEColumn);
            }
            
            public void SetQTY_DUENull() {
                this[this.tableCommand.QTY_DUEColumn] = System.Convert.DBNull;
            }
            
            public bool IsHOLOGRAMNull() {
                return this.IsNull(this.tableCommand.HOLOGRAMColumn);
            }
            
            public void SetHOLOGRAMNull() {
                this[this.tableCommand.HOLOGRAMColumn] = System.Convert.DBNull;
            }
            
            public bool IsNUM_VISITSNull() {
                return this.IsNull(this.tableCommand.NUM_VISITSColumn);
            }
            
            public void SetNUM_VISITSNull() {
                this[this.tableCommand.NUM_VISITSColumn] = System.Convert.DBNull;
            }
            
            public bool IsVISIT_DATESNull() {
                return this.IsNull(this.tableCommand.VISIT_DATESColumn);
            }
            
            public void SetVISIT_DATESNull() {
                this[this.tableCommand.VISIT_DATESColumn] = System.Convert.DBNull;
            }
            
            public bool IsBPO_NAMENull() {
                return this.IsNull(this.tableCommand.BPO_NAMEColumn);
            }
            
            public void SetBPO_NAMENull() {
                this[this.tableCommand.BPO_NAMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsBPO_ORGNNull() {
                return this.IsNull(this.tableCommand.BPO_ORGNColumn);
            }
            
            public void SetBPO_ORGNNull() {
                this[this.tableCommand.BPO_ORGNColumn] = System.Convert.DBNull;
            }
            
            public bool IsCityNull() {
                return this.IsNull(this.tableCommand.CityColumn);
            }
            
            public void SetCityNull() {
                this[this.tableCommand.CityColumn] = System.Convert.DBNull;
            }
            
            public bool IsHOLOGRAMORGNull() {
                return this.IsNull(this.tableCommand.HOLOGRAMORGColumn);
            }
            
            public void SetHOLOGRAMORGNull() {
                this[this.tableCommand.HOLOGRAMORGColumn] = System.Convert.DBNull;
            }
            
            public bool IsREMARKNull() {
                return this.IsNull(this.tableCommand.REMARKColumn);
            }
            
            public void SetREMARKNull() {
                this[this.tableCommand.REMARKColumn] = System.Convert.DBNull;
            }
            
            public bool IsDT_INSP_DESIRENull() {
                return this.IsNull(this.tableCommand.DT_INSP_DESIREColumn);
            }
            
            public void SetDT_INSP_DESIRENull() {
                this[this.tableCommand.DT_INSP_DESIREColumn] = System.Convert.DBNull;
            }
            
            public bool IsITEM_REMARKNull() {
                return this.IsNull(this.tableCommand.ITEM_REMARKColumn);
            }
            
            public void SetITEM_REMARKNull() {
                this[this.tableCommand.ITEM_REMARKColumn] = System.Convert.DBNull;
            }
            
            public bool IsAMENDMENT_1Null() {
                return this.IsNull(this.tableCommand.AMENDMENT_1Column);
            }
            
            public void SetAMENDMENT_1Null() {
                this[this.tableCommand.AMENDMENT_1Column] = System.Convert.DBNull;
            }
            
            public bool IsAMENDMENTDT_1Null() {
                return this.IsNull(this.tableCommand.AMENDMENTDT_1Column);
            }
            
            public void SetAMENDMENTDT_1Null() {
                this[this.tableCommand.AMENDMENTDT_1Column] = System.Convert.DBNull;
            }
            
            public bool IsAMENDMENT_2Null() {
                return this.IsNull(this.tableCommand.AMENDMENT_2Column);
            }
            
            public void SetAMENDMENT_2Null() {
                this[this.tableCommand.AMENDMENT_2Column] = System.Convert.DBNull;
            }
            
            public bool IsAMENDMENTDT_2Null() {
                return this.IsNull(this.tableCommand.AMENDMENTDT_2Column);
            }
            
            public void SetAMENDMENTDT_2Null() {
                this[this.tableCommand.AMENDMENTDT_2Column] = System.Convert.DBNull;
            }
            
            public bool IsAMENDMENT_3Null() {
                return this.IsNull(this.tableCommand.AMENDMENT_3Column);
            }
            
            public void SetAMENDMENT_3Null() {
                this[this.tableCommand.AMENDMENT_3Column] = System.Convert.DBNull;
            }
            
            public bool IsAMENDMENTDT_3Null() {
                return this.IsNull(this.tableCommand.AMENDMENTDT_3Column);
            }
            
            public void SetAMENDMENTDT_3Null() {
                this[this.tableCommand.AMENDMENTDT_3Column] = System.Convert.DBNull;
            }
            
            public bool IsAMENDMENT_4Null() {
                return this.IsNull(this.tableCommand.AMENDMENT_4Column);
            }
            
            public void SetAMENDMENT_4Null() {
                this[this.tableCommand.AMENDMENT_4Column] = System.Convert.DBNull;
            }
            
            public bool IsAMENDMENTDT_4Null() {
                return this.IsNull(this.tableCommand.AMENDMENTDT_4Column);
            }
            
            public void SetAMENDMENTDT_4Null() {
                this[this.tableCommand.AMENDMENTDT_4Column] = System.Convert.DBNull;
            }
            
            public bool IsBK_NONull() {
                return this.IsNull(this.tableCommand.BK_NOColumn);
            }
            
            public void SetBK_NONull() {
                this[this.tableCommand.BK_NOColumn] = System.Convert.DBNull;
            }
            
            public bool IsSET_NONull() {
                return this.IsNull(this.tableCommand.SET_NOColumn);
            }
            
            public void SetSET_NONull() {
                this[this.tableCommand.SET_NOColumn] = System.Convert.DBNull;
            }
            
            public bool IsVISITS_DATESNull() {
                return this.IsNull(this.tableCommand.VISITS_DATESColumn);
            }
            
            public void SetVISITS_DATESNull() {
                this[this.tableCommand.VISITS_DATESColumn] = System.Convert.DBNull;
            }
            
            public bool IsIE_STAMP_IMAGENull() {
                return this.IsNull(this.tableCommand.IE_STAMP_IMAGEColumn);
            }
            
            public void SetIE_STAMP_IMAGENull() {
                this[this.tableCommand.IE_STAMP_IMAGEColumn] = System.Convert.DBNull;
            }
            
            public bool IsIE_STAMP_IMAGE1Null() {
                return this.IsNull(this.tableCommand.IE_STAMP_IMAGE1Column);
            }
            
            public void SetIE_STAMP_IMAGE1Null() {
                this[this.tableCommand.IE_STAMP_IMAGE1Column] = System.Convert.DBNull;
            }
            
            public bool IsLAB_TST_RECT_DTNull() {
                return this.IsNull(this.tableCommand.LAB_TST_RECT_DTColumn);
            }
            
            public void SetLAB_TST_RECT_DTNull() {
                this[this.tableCommand.LAB_TST_RECT_DTColumn] = System.Convert.DBNull;
            }
            
            public bool IsPASSED_INST_NONull() {
                return this.IsNull(this.tableCommand.PASSED_INST_NOColumn);
            }
            
            public void SetPASSED_INST_NONull() {
                this[this.tableCommand.PASSED_INST_NOColumn] = System.Convert.DBNull;
            }
            
            public bool IsCONSIGNEE_DTLNull() {
                return this.IsNull(this.tableCommand.CONSIGNEE_DTLColumn);
            }
            
            public void SetCONSIGNEE_DTLNull() {
                this[this.tableCommand.CONSIGNEE_DTLColumn] = System.Convert.DBNull;
            }
            
            public bool IsBPO_DTLNull() {
                return this.IsNull(this.tableCommand.BPO_DTLColumn);
            }
            
            public void SetBPO_DTLNull() {
                this[this.tableCommand.BPO_DTLColumn] = System.Convert.DBNull;
            }
            
            public bool IsPUR_DTLNull() {
                return this.IsNull(this.tableCommand.PUR_DTLColumn);
            }
            
            public void SetPUR_DTLNull() {
                this[this.tableCommand.PUR_DTLColumn] = System.Convert.DBNull;
            }
            
            public bool IsPUR_AUT_DTLNull() {
                return this.IsNull(this.tableCommand.PUR_AUT_DTLColumn);
            }
            
            public void SetPUR_AUT_DTLNull() {
                this[this.tableCommand.PUR_AUT_DTLColumn] = System.Convert.DBNull;
            }
            
            public bool IsOFF_INST_NO_DTLNull() {
                return this.IsNull(this.tableCommand.OFF_INST_NO_DTLColumn);
            }
            
            public void SetOFF_INST_NO_DTLNull() {
                this[this.tableCommand.OFF_INST_NO_DTLColumn] = System.Convert.DBNull;
            }
            
            public bool IsUNIT_DTLNull() {
                return this.IsNull(this.tableCommand.UNIT_DTLColumn);
            }
            
            public void SetUNIT_DTLNull() {
                this[this.tableCommand.UNIT_DTLColumn] = System.Convert.DBNull;
            }
            
            public bool IsDATETIMENull() {
                return this.IsNull(this.tableCommand.DATETIMEColumn);
            }
            
            public void SetDATETIMENull() {
                this[this.tableCommand.DATETIMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsCONSGN_CALL_STATUSNull() {
                return this.IsNull(this.tableCommand.CONSGN_CALL_STATUSColumn);
            }
            
            public void SetCONSGN_CALL_STATUSNull() {
                this[this.tableCommand.CONSGN_CALL_STATUSColumn] = System.Convert.DBNull;
            }
            
            public bool IspRegionNull() {
                return this.IsNull(this.tableCommand.pRegionColumn);
            }
            
            public void SetpRegionNull() {
                this[this.tableCommand.pRegionColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CommandRowChangeEvent : EventArgs {
            
            private CommandRow eventRow;
            
            private DataRowAction eventAction;
            
            public CommandRowChangeEvent(CommandRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CommandRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
