--Scaffold-DbContext name=DefaultConnection Oracle.EntityFrameworkCore -noOnConfiguring -OutputDir DataAccess -Force
--=============================================================================================================================================
--By Naimish Rana
--=============================================================================================================================================
--ALTER TABLE IC_INTERMEDIATE ADD CREATEDBY  NUMBER(6,0) DEFAULT null;
--ALTER TABLE IC_INTERMEDIATE ADD CREATEDDATE TIMESTAMP(6) WITH TIME ZONE;
--ALTER TABLE IC_INTERMEDIATE ADD UPDATEDBY  NUMBER(6,0) DEFAULT null;
--ALTER TABLE IC_INTERMEDIATE ADD UPDATEDDATE TIMESTAMP(6) WITH TIME ZONE;
--ALTER TABLE IC_INTERMEDIATE ADD ISDELETED NUMBER(2,0) DEFAULT 0;

--ALTER TABLE IC_INTERMEDIATE MODIFY CREATEDDATE DATE;
--ALTER TABLE IC_INTERMEDIATE MODIFY UPDATEDDATE DATE;

create or replace FUNCTION GET_FINANCIAL_YEAR_START_DATE
RETURN DATE 
IS
  v_start_date DATE;
BEGIN
  SELECT 
      CASE 
        WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'MM')) >= 4 
        THEN TO_DATE('01-04-' || TO_CHAR(SYSDATE, 'YYYY'), 'DD-MM-YYYY') 
        ELSE TO_DATE('01-04-' || TO_CHAR(SYSDATE - INTERVAL '1' YEAR, 'YYYY'), 'DD-MM-YYYY') 
      END
  INTO v_start_date
  FROM dual;
    --v_start_date := TO_DATE('01/04/2020', 'DD-MM-YYYY');
  RETURN v_start_date;
END;
/
create or replace FUNCTION GET_FINANCIAL_YEAR_END_DATE
RETURN DATE
IS
    current_date DATE := SYSDATE;
    fiscal_start_month NUMBER := 4; -- April
    FISCAL_YEAR_START date;
    FISCAL_YEAR_END date;
    TESTT date;
BEGIN
 if extract(month from current_date) < FISCAL_START_MONTH then
        --FISCAL_YEAR_START := TO_DATE(extract(year from current_date) - 1 || '-' || FISCAL_START_MONTH || '-01', 'YYYY-MM-DD');
        FISCAL_YEAR_START := TO_DATE('01/' || FISCAL_START_MONTH || '/' || extract(year from current_date) - 1,'DD/MM/YYYY');
    else
        --FISCAL_YEAR_START := TO_DATE(extract(year from current_date) || '-' || FISCAL_START_MONTH || '-01', 'YYYY-MM-DD');
        FISCAL_YEAR_START := TO_DATE('01/' || FISCAL_START_MONTH || '/' || extract(year from current_date) ,'DD/MM/YYYY');
    END IF;

    fiscal_year_end := fiscal_year_start + INTERVAL '1' YEAR - INTERVAL '1' DAY;

--    RETURN TO_DATE(fiscal_year_end, 'DD-MM-YYYY');
    RETURN fiscal_year_end;
end;
/
----------------------------------------------------- Start ALL Dashboard COMPLAINTS STATUS SP -----------------------------------------------------
CREATE OR REPLACE PROCEDURE "GET_DASHBOARD_COMPLAINT_STATUS" 
(
  P_ROLE_NAME IN VARCHAR2,
  P_REGION IN VARCHAR2,  
  P_IE_CD IN NUMBER,
  P_VEND_CD IN NUMBER,
  P_RLY_CD IN VARCHAR2,
  P_RLY_NONRLY IN VARCHAR2,
  P_RESULT_CURSOR OUT SYS_REFCURSOR  
) AS 
    str VARCHAR2(4000);
    strParam VARCHAR2(50);
    strJoin VARCHAR2(100);
    P_FROMDATE DATE;
    P_TODATE DATE;
BEGIN
    P_FROMDATE := GET_FINANCIAL_YEAR_START_DATE();
    P_TODATE := GET_FINANCIAL_YEAR_END_DATE(); --TO_CHAR(SYSDATE,'DD/MM/YYYY');
    
    strJoin := '';
    IF P_ROLE_NAME = 'admin' THEN
        strParam := '''' || P_REGION || ''' REGION, ';
    ELSIF P_ROLE_NAME = 'inspection engineer (ie)' THEN
        strParam := P_IE_CD || ' IECD, ';
    ELSIF P_ROLE_NAME = 'vendor' THEN
        strParam := P_VEND_CD || ' VENDOR, ';
    ELSIF P_ROLE_NAME = 'client' THEN
        strParam := '''' || P_RLY_CD || ''' RLY_CD,'''|| P_RLY_NONRLY ||''' RLY_NONRLY, ';
        strJoin := 'JOIN T13_PO_MASTER T13 ON T40.CASE_NO = T13.CASE_NO';
    END IF;
    DBMS_OUTPUT.PUT_LINE(strParam);
    DBMS_OUTPUT.PUT_LINE('-----------');
    str := 'SELECT '||strParam||''  ||
                'NVL(SUM(CASE WHEN NVL(T40.JI_STATUS_CD,0) = 0 THEN 1 ELSE 0 END),0) PENDING, ' ||
                'NVL(SUM(CASE WHEN T40.JI_STATUS_CD = 1 THEN 1 ELSE 0 END),0) ACCEPTED, ' ||
                'NVL(SUM(CASE WHEN T40.JI_STATUS_CD = 2 THEN 1 ELSE 0 END),0) UPHELD, ' ||
                'NVL(SUM(CASE WHEN T40.JI_STATUS_CD = 3 THEN 1 ELSE 0 END),0) SORTING, ' ||
                'NVL(SUM(CASE WHEN T40.JI_STATUS_CD = 4 THEN 1 ELSE 0 END),0) RECTIFICATION, ' ||
                'NVL(SUM(CASE WHEN T40.JI_STATUS_CD = 5 THEN 1 ELSE 0 END),0) PRICE_REDUCTION, ' ||
                'NVL(SUM(CASE WHEN T40.JI_STATUS_CD = 6 THEN 1 ELSE 0 END),0) LIFTED_BEFORE_JI, ' ||
                'NVL(SUM(CASE WHEN T40.JI_STATUS_CD = 7 THEN 1 ELSE 0 END),0) TRANSIT_DEMANGE, ' ||
                'NVL(SUM(CASE WHEN T40.JI_STATUS_CD = 8 THEN 1 ELSE 0 END),0) UNSTAMPED, ' ||
                'NVL(SUM(CASE WHEN T40.JI_STATUS_CD = 9 THEN 1 ELSE 0 END),0) NOT_ON_RITES, ' ||
                'NVL(SUM(CASE WHEN T40.JI_STATUS_CD = 10 THEN 1 ELSE 0 END),0) DELETED ' ||
            'FROM T40_CONSIGNEE_COMPLAINTS T40 ' ||
            'JOIN T39_JI_STATUS_CODES T39 ON NVL(T40.JI_STATUS_CD,0) = T39.JI_STATUS_CD ' ||
            '' ||strJoin || '' || ' ' ||
            'WHERE T40.COMPLAINT_DT BETWEEN '''||P_FROMDATE||''' AND '''||P_TODATE||''' ';
    IF P_ROLE_NAME = 'admin' THEN
        str := str || 'AND T40.INSP_REGION =  ''' || P_REGION || ''' ';    
    ELSIF P_ROLE_NAME = 'inspection engineer (ie)' THEN
        str := str || 'AND T40.IE_CD =  ' || P_IE_CD || ' ';
    ELSIF P_ROLE_NAME = 'vendor' THEN
        str := str || 'AND T40.VEND_CD =  ' || P_VEND_CD || ' ';
    ELSIF P_ROLE_NAME = 'client' THEN
        str := str || 'AND T13.RLY_CD = ''' || P_RLY_CD || ''' AND T13.RLY_NONRLY = ''' || P_RLY_NONRLY || ''' ';
    END IF;
    DBMS_OUTPUT.PUT_LINE(str);
    OPEN P_RESULT_CURSOR FOR str;    
END;
/
----------------------------------------------------- End ALL Dashboard COMPLAINTS STATUS SP -----------------------------------------------------



----------------------------------------------------- Start Client Dashboard SP -----------------------------------------------------
CREATE OR REPLACE PROCEDURE "GET_CLIENT_DASHBOARD" 
(
  P_RLY_CD IN VARCHAR2,
  P_RLY_NONRLY IN VARCHAR2,
  P_RESULT_CURSOR OUT SYS_REFCURSOR,
  P_RESULT_VND_WISE_PER OUT SYS_REFCURSOR,
  P_RESULT_REC_REQ OUT SYS_REFCURSOR,
  P_RESULT_REC_PO OUT SYS_REFCURSOR,
  P_RESULT_VND_CONS_COMP OUT SYS_REFCURSOR
) AS 
    P_FROMDATE DATE;
    P_TODATE DATE;
BEGIN
    P_FROMDATE := GET_FINANCIAL_YEAR_START_DATE();
    P_TODATE := GET_FINANCIAL_YEAR_END_DATE(); --SYSDATE;
    
    -- Get Client Dashboard Count
    OPEN P_RESULT_CURSOR FOR
    SELECT  RLY_CD,
            RLY_NONRLY,
            SUM(TOTAL_CALL) TOTAL_CALL,
            SUM(PENDING_CALL) PENDING_CALL,
            SUM(ACCEPTED_CALL) ACCEPTED_CALL,
            SUM(CANCELLED_CALL) CANCELLED_CALL, 
            SUM(UNDER_LAB_TESTING) UNDER_LAB_TESTING, 
            SUM(STILL_UNDER_INSPECTION) STILL_UNDER_INSPECTION, 
            SUM(STAGE_REJECTION) STAGE_REJECTION           
    FROM (
        SELECT  P_RLY_CD RLY_CD,
                P_RLY_NONRLY RLY_NONRLY,
                COUNT(t17.CASE_NO) AS TOTAL_CALL,
                SUM (CASE WHEN t17.CALL_STATUS = 'M' THEN 1 else 0 end) PENDING_CALL,
                0 ACCEPTED_CALL,
                SUM (CASE WHEN t17.CALL_STATUS = 'C' THEN 1 else 0 end) CANCELLED_CALL, 
                SUM (CASE WHEN t17.CALL_STATUS = 'U' THEN 1 else 0 end) UNDER_LAB_TESTING, 
                SUM (CASE WHEN t17.CALL_STATUS = 'S' THEN 1 else 0 end) STILL_UNDER_INSPECTION, 
                SUM (CASE WHEN t17.CALL_STATUS = 'T' THEN 1 else 0 end) STAGE_REJECTION                
        FROM T17_CALL_REGISTER t17
        JOIN T13_PO_MASTER t13 ON t17.CASE_NO = t13.CASE_NO
        WHERE t13.RLY_CD = P_RLY_CD 
        AND t13.RLY_NONRLY = P_RLY_NONRLY
        AND t17.CALL_RECV_DT BETWEEN P_FROMDATE AND P_TODATE
--        AND t17.CALL_RECV_DT >= TO_DATE(P_FROMDATE, 'DD/MM/YYYY')
--        AND t17.CALL_RECV_DT <= TO_DATE(P_TODATE, 'DD/MM/YYYY')
        GROUP BY t13.RLY_CD, t13.RLY_NONRLY 
        UNION
        SELECT  P_RLY_CD RLY_CD,
                P_RLY_NONRLY RLY_NONRLY,
                0 TOTAL_CALL,
                0 PENDING_CALL,
                COUNT(t17.CASE_NO) ACCEPTED_CALL,
                0 CANCELLED_CALL, 
                0 UNDER_LAB_TESTING, 
                0 STILL_UNDER_INSPECTION, 
                0 STAGE_REJECTION                
        FROM T47_IE_WORK_PLAN t47
        JOIN T17_CALL_REGISTER t17 ON t47.CASE_NO = t17.CASE_NO AND t47.CALL_RECV_DT = t17.CALL_RECV_DT AND t47.CALL_SNO = t17.CALL_SNO
        JOIN T13_PO_MASTER t13 ON t17.CASE_NO = t13.CASE_NO
        WHERE TRIM(t17.CALL_STATUS) = 'A'
        AND t13.RLY_CD = P_RLY_CD 
        AND t13.RLY_NONRLY = P_RLY_NONRLY
        AND t17.CALL_RECV_DT BETWEEN P_FROMDATE AND P_TODATE
--        AND t17.CALL_RECV_DT >= TO_DATE(P_FROMDATE, 'DD/MM/YYYY')
--        AND t17.CALL_RECV_DT <= TO_DATE(P_TODATE, 'DD/MM/YYYY')        
        GROUP BY t13.RLY_CD, t13.RLY_NONRLY
    ) A
    GROUP BY A.RLY_CD, A.RLY_NONRLY;
    
    -- Get Vendor wise Performance Data
    OPEN P_RESULT_VND_WISE_PER FOR
    SELECT  RLY_CD,
            RLY_NONRLY,
            VEND_NAME,
            TOTAL_CALL,
            REJECTED_CALL,
            CANCELLED_CALL,
            (REJECTED_CALL + CANCELLED_CALL) REJ_CAN_SUM
    FROM (
        SELECT
            P_RLY_CD AS RLY_CD,
            P_RLY_NONRLY AS RLY_NONRLY,
            t05.VEND_NAME,
            COUNT(t17.CASE_NO) AS TOTAL_CALL,
            SUM(CASE WHEN (t17.CALL_STATUS = 'T' OR t17.CALL_STATUS = 'R') THEN 1 ELSE 0 END) AS REJECTED_CALL,
            SUM(CASE WHEN t17.CALL_STATUS = 'C' THEN 1 ELSE 0 END) AS CANCELLED_CALL                        
        FROM T17_CALL_REGISTER t17
        JOIN T13_PO_MASTER t13 ON t17.CASE_NO = t13.CASE_NO
        JOIN T05_VENDOR t05 ON t13.VEND_CD = t05.VEND_CD 
        WHERE t13.RLY_CD = P_RLY_CD
        AND t13.RLY_NONRLY = P_RLY_NONRLY
        AND t17.CALL_RECV_DT BETWEEN P_FROMDATE AND P_TODATE
        GROUP BY P_RLY_CD, P_RLY_NONRLY, t05.VEND_NAME
    ) VP
    ORDER BY (REJECTED_CALL + CANCELLED_CALL) DESC, VP.TOTAL_CALL  DESC;
    
    -- Get Recent Request Data
    OPEN P_RESULT_REC_REQ FOR
    SELECT  t17.CASE_NO,
            t17.CALL_RECV_DT,
            t17.CALL_SNO,
            t05.VEND_NAME,
            '' DETAILS,
            t09.IE_NAME,
            t21.CALL_STATUS_DESC CALL_STATUS
    FROM T17_CALL_REGISTER t17
    JOIN T13_PO_MASTER t13 ON t17.CASE_NO = t13.CASE_NO
    JOIN T05_VENDOR t05 ON t17.MFG_CD = t05.VEND_CD
    JOIN T09_IE t09 ON t17.IE_CD = t09.IE_CD
    JOIN T21_CALL_STATUS_CODES t21 ON TRIM(t17.CALL_STATUS) = TRIM(t21.CALL_STATUS_CD)
    WHERE t13.RLY_CD = P_RLY_CD
    AND t13.RLY_NONRLY = P_RLY_NONRLY
    AND t17.CALL_RECV_DT BETWEEN P_FROMDATE AND P_TODATE
    ORDER BY t17.CALL_RECV_DT DESC;
    
    -- Get Recent Purchase Order Data
    OPEN P_RESULT_REC_PO FOR
    SELECT  t13.CASE_NO,
            SUM(t15.VALUE) VALUE ,
            t13.PO_NO,
            t13.PO_DT,
            t13.RECV_DT,
            t13.PO_OR_LETTER,
            t05.VEND_NAME,
            SUM(t15.QTY) QTY
    FROM T13_PO_MASTER t13 
    JOIN T15_PO_DETAIL t15 ON t13.CASE_NO = t15.CASE_NO
    JOIN T05_VENDOR t05 ON t13.VEND_CD = t05.VEND_CD
    WHERE t13.RLY_CD = P_RLY_CD
    AND t13.RLY_NONRLY = P_RLY_NONRLY
    AND t13.PO_DT BETWEEN P_FROMDATE AND P_TODATE
    GROUP BY t13.CASE_NO,        
            t13.PO_NO,
            t13.PO_DT,
            t13.RECV_DT,
            t13.PO_OR_LETTER,
            t05.VEND_NAME
    ORDER BY t13.PO_DT DESC;
    
    -- Get Vendor With Consignee Compalints Data
    OPEN P_RESULT_VND_CONS_COMP FOR
    SELECT VEND_NAME,NO_OF_COMPLAINTS
    FROM (
        SELECT
            t05.VEND_NAME,
            COUNT(c.CASE_NO) NO_OF_COMPLAINTS    
        FROM T13_PO_MASTER t13
        JOIN T20_IC t20 ON t13.CASE_NO = t20.CASE_NO
        JOIN T40_CONSIGNEE_COMPLAINTS c ON t20.CASE_NO = c.CASE_NO
        JOIN T05_VENDOR t05 ON t13.VEND_CD = t05.VEND_CD
        WHERE t13.RLY_CD = P_RLY_CD
        AND t13.RLY_NONRLY = P_RLY_NONRLY       
        AND t13.PO_DT BETWEEN P_FROMDATE AND P_TODATE
        GROUP BY t05.VEND_NAME
    ) VCM
    ORDER BY VCM.NO_OF_COMPLAINTS DESC;
END;
/

create or replace PROCEDURE GET_CLIENT_DASHBOARD_RECENT_PO 
(
  P_RLY_CD IN VARCHAR2, 
  P_RLY_NONRLY IN VARCHAR2, 
  P_RESULT_CURSOR OUT SYS_REFCURSOR
) AS 
    P_FROMDATE DATE;
    P_TODATE DATE;
BEGIN
    P_FROMDATE := GET_FINANCIAL_YEAR_START_DATE();
    P_TODATE := GET_FINANCIAL_YEAR_END_DATE(); --SYSDATE;
    
    OPEN P_RESULT_CURSOR FOR
    SELECT  t13.CASE_NO,
            SUM(t15.VALUE) VALUE ,
            t13.PO_NO,
            t13.PO_DT,
            t05.VEND_NAME
    FROM  T13_PO_MASTER t13 
    JOIN T15_PO_DETAIL t15 ON t13.CASE_NO = t15.CASE_NO
    JOIN T05_VENDOR t05 ON t13.VEND_CD = t05.VEND_CD
    WHERE t13.RLY_CD = P_RLY_CD
    AND t13.RLY_NONRLY = P_RLY_NONRLY
    AND t13.PO_DT BETWEEN P_FROMDATE AND P_TODATE
    GROUP BY t13.CASE_NO,        
            t13.PO_NO,
            t13.PO_DT,
            t05.VEND_NAME
    ORDER BY t13.PO_DT DESC;
END;
/

create or replace PROCEDURE GET_CLIENT_DASHBOARD_RECENT_REQUEST 
(
  P_RLY_CD IN VARCHAR2, 
  P_RLY_NONRLY IN VARCHAR2, 
  P_RESULT_CURSOR OUT SYS_REFCURSOR
) AS 
    P_FROMDATE DATE;
    P_TODATE DATE;
BEGIN
    P_FROMDATE := GET_FINANCIAL_YEAR_START_DATE();
    P_TODATE := GET_FINANCIAL_YEAR_END_DATE(); --SYSDATE;
    
    OPEN P_RESULT_CURSOR FOR
    SELECT  t17.CASE_NO,
            t17.CALL_RECV_DT,
            t17.CALL_SNO,
            t05.VEND_NAME,
            '' DETAILS,
            t09.IE_NAME,
            t21.CALL_STATUS_DESC CALL_STATUS
    FROM T17_CALL_REGISTER t17
    JOIN T13_PO_MASTER t13 ON t17.CASE_NO = t13.CASE_NO
    JOIN T05_VENDOR t05 ON t17.MFG_CD = t05.VEND_CD
    JOIN T09_IE t09 ON t17.IE_CD = t09.IE_CD
    JOIN T21_CALL_STATUS_CODES t21 ON TRIM(t17.CALL_STATUS) = TRIM(t21.CALL_STATUS_CD)
    WHERE t13.RLY_CD = P_RLY_CD
    AND t13.RLY_NONRLY = P_RLY_NONRLY
    AND t17.CALL_RECV_DT BETWEEN P_FROMDATE AND P_TODATE
    ORDER BY t17.CALL_RECV_DT DESC;
END;
/


create or replace PROCEDURE GET_CLIENT_DASHBOARD_VENDOR_CONSIGNEE_COMPLAINTS 
(
  P_RLY_CD IN VARCHAR2, 
  P_RLY_NONRLY IN VARCHAR2, 
  P_RESULT_CURSOR OUT SYS_REFCURSOR
) AS 
    P_FROMDATE DATE;
    P_TODATE DATE;
BEGIN
    P_FROMDATE := GET_FINANCIAL_YEAR_START_DATE();
    P_TODATE := GET_FINANCIAL_YEAR_END_DATE(); --SYSDATE;
    
    OPEN P_RESULT_CURSOR FOR
    SELECT VEND_NAME,NO_OF_COMPLAINTS
    FROM (
        SELECT
            t05.VEND_NAME,
            COUNT(c.CASE_NO) NO_OF_COMPLAINTS    
        FROM T13_PO_MASTER t13
        JOIN T20_IC t20 ON t13.CASE_NO = t20.CASE_NO
        JOIN T40_CONSIGNEE_COMPLAINTS c ON t20.CASE_NO = c.CASE_NO
        JOIN T05_VENDOR t05 ON t13.VEND_CD = t05.VEND_CD
        WHERE t13.RLY_CD = P_RLY_CD
        AND t13.RLY_NONRLY = P_RLY_NONRLY       
        AND t13.PO_DT BETWEEN P_FROMDATE AND P_TODATE
        GROUP BY t05.VEND_NAME
    ) VCM
    ORDER BY VCM.NO_OF_COMPLAINTS DESC;
--    ORDER BY c.CASE_NO, c.COMPLAINT_ID ASC;
END;
/

create or replace PROCEDURE GET_CLIENT_DASHBOARD_VENDOR_WISE_PERFORMANCE 
(
  P_RLY_CD IN VARCHAR2, 
  P_RLY_NONRLY IN VARCHAR2, 
  P_RESULT_CURSOR OUT SYS_REFCURSOR
) AS
    P_FROMDATE DATE;
    P_TODATE DATE;
BEGIN
    P_FROMDATE := GET_FINANCIAL_YEAR_START_DATE();
    P_TODATE := GET_FINANCIAL_YEAR_END_DATE(); --SYSDATE;
    
    OPEN P_RESULT_CURSOR FOR
    SELECT  RLY_CD,
            RLY_NONRLY,
            VEND_NAME,
            TOTAL_CALL,
            REJECTED_CALL,
            CANCELLED_CALL
    FROM (
        SELECT
            P_RLY_CD AS RLY_CD,
            P_RLY_NONRLY AS RLY_NONRLY,
            t05.VEND_NAME,
            COUNT(t17.CASE_NO) AS TOTAL_CALL,
            SUM(CASE WHEN (t17.CALL_STATUS = 'T' OR t17.CALL_STATUS = 'R') THEN 1 ELSE 0 END) AS REJECTED_CALL,
            SUM(CASE WHEN t17.CALL_STATUS = 'C' THEN 1 ELSE 0 END) AS CANCELLED_CALL                        
        FROM T17_CALL_REGISTER t17
        JOIN T13_PO_MASTER t13 ON t17.CASE_NO = t13.CASE_NO
        JOIN T05_VENDOR t05 ON t13.VEND_CD = t05.VEND_CD 
        WHERE t13.RLY_CD = P_RLY_CD
        AND t13.RLY_NONRLY = P_RLY_NONRLY
        AND t17.CALL_RECV_DT BETWEEN P_FROMDATE AND P_TODATE
        GROUP BY P_RLY_CD, P_RLY_NONRLY, t05.VEND_NAME
    ) VP
    ORDER BY VP.TOTAL_CALL DESC;
END;
/
----------------------------------------------------- End Client Dashboard SP -----------------------------------------------------

----------------------------------------------------- Start CM DFO Dashboard SP -----------------------------------------------------
CREATE OR REPLACE PROCEDURE "GET_CM_DFO_DASHBOARD" 
(
  P_CO_CD IN VARCHAR2,
  P_RESULT_CURSOR OUT SYS_REFCURSOR,
  P_RESULT_BILLING_CLIENT OUT SYS_REFCURSOR,
  P_RESULT_OUTSTANDING_CLIENT OUT SYS_REFCURSOR,
  P_RESULT_BULLING_COMPARISON OUT SYS_REFCURSOR,
  P_RESULT_SECTOR_BILLING OUT SYS_REFCURSOR,
  P_RESULT_SECTOR_BILLING_CURRENT_YEAR_WISE OUT SYS_REFCURSOR
) AS
    P_FROMDATE DATE;
    P_TODATE DATE;
    
    P_FY2_STARTDATE DATE;
    P_FY2_ENDDATE DATE;
    P_FY3_STARTDATE DATE;
    P_FY3_ENDDATE DATE;
    
    P_CURR_FY_ENDDATE  DATE;
    P_CURR_FY2_ENDDATE  DATE;
    P_CURR_FY3_ENDDATE  DATE;
BEGIN
    
    P_FROMDATE := GET_FINANCIAL_YEAR_START_DATE();
    P_TODATE := SYSDATE;    
    P_CURR_FY_ENDDATE := GET_FINANCIAL_YEAR_END_DATE(); --TO_CHAR(ADD_MONTHS( TO_DATE('31/03/' || TO_CHAR(TRUNC(SYSDATE, 'YYYY'), 'YYYY'),'DD/MM/YYYY'),12),'DD/MM/YYYY');

    -- START GET CURRENT PREVIOUSE DATES   
    SELECT ADD_MONTHS(GET_FINANCIAL_YEAR_START_DATE(), -12) 
    INTO P_FY2_STARTDATE
    FROM DUAL;    

    SELECT ADD_MONTHS(SYSDATE, -12) 
    INTO P_FY2_ENDDATE 
    FROM DUAL;

    SELECT ADD_MONTHS(GET_FINANCIAL_YEAR_END_DATE(), -12)
    INTO P_CURR_FY2_ENDDATE 
    FROM DUAL;    
--    -- END GET CURRENT PREVIOUSE DATES
--    
--    -- START GET PREVIOUSE TO PREVIOUSE DATES
    SELECT ADD_MONTHS(GET_FINANCIAL_YEAR_START_DATE(), -24)
    INTO P_FY3_STARTDATE 
    FROM DUAL;
--    
    SELECT ADD_MONTHS(SYSDATE, -24)
    INTO P_FY3_ENDDATE 
    FROM DUAL;
--    
    SELECT ADD_MONTHS(GET_FINANCIAL_YEAR_END_DATE(), -24)
    INTO P_CURR_FY3_ENDDATE 
    FROM DUAL;
--    -- END GET PREVIOUSE TO PREVIOUSE DATES

    -- Get Dashboard Count
    OPEN P_RESULT_CURSOR FOR
    SELECT  SUM(A.amount_outstanding) OUTSTANDING_AMOUNT,
            SUM(A.SUSPENSE_AMT) SUSPENSE_AMT,
            SUM(case when A.amount_outstanding > 0 then 1 else 0 end) OUTSTANDING_BILL,
            SUM(CASE WHEN A.bill_no IS NOT NULL THEN 1 ELSE 0 END) TOTAL_INVOICE,
--            COUNT(A.bill_no) TOTAL_INVOICE,
            SUM(A.FINALIZED_INVOICE) FINALIZED_INVOICE,
            SUM(A.PENDING_FINALIZED_INVOICE) PENDING_FINALIZED_INVOICE
    FROM (
        SELECT  bill_no,                    
                (bill_amount - ( tds + tds_sgst + tds_cgst + tds_igst + retention_money + write_off_amt + amount_posted + cnote_amount )) amount_outstanding,
                0 SUSPENSE_AMT,
                0 FINALIZED_INVOICE,
                0 PENDING_FINALIZED_INVOICE
        FROM(
            SELECT  t22.bill_no bill_no,
                    nvl(t22.bill_amount, 0) bill_amount,
                    t25.narration || '/' || t25.chq_no AS narration,
                    nvl(t22.tds, 0) tds,
                    nvl(t22.tds_sgst, 0) tds_sgst,
                    nvl(t22.tds_cgst, 0) tds_cgst,
                    nvl(t22.tds_igst, 0) tds_igst,
                    nvl(t22.retention_money, 0) retention_money,
                    nvl(t22.cnote_amount, 0) cnote_amount,
                    nvl(t22.write_off_amt, 0) write_off_amt,
                    SUM(nvl(t26.amount_cleared, 0)) amount_posted
            FROM    t22_bill t22, t20_ic t20, t12_bill_paying_officer t12, t03_city t031, t13_po_master t13, t03_city t032,
                    t03_city t033, t05_vendor t05, t06_consignee t06, t26_cheque_posting t26, t25_rv_details t25, au_cris au
            WHERE   t22.bill_no = t20.bill_no
                    AND t20.bpo_cd = t12.bpo_cd
                    AND t22.case_no = t25.case_no
                    AND t12.au = au.au
                    AND t12.bpo_city_cd = t031.city_cd (+)
                    AND t22.case_no = t13.case_no
                    AND t13.vend_cd = t05.vend_cd
                    AND t05.vend_city_cd = t032.city_cd (+)
                    AND t20.consignee_cd = t06.consignee_cd
                    AND t06.consignee_city = t033.city_cd (+)
                    AND t22.bill_no = t26.bill_no (+)
                    AND ( ( t12.bpo_type = 'R' AND NOT ( nvl(t22.bill_amount, 0) BETWEEN 0 AND 100 ) ) OR ( t12.bpo_type <> 'R' ) )
                    and SUBSTR(T22.BILL_NO, 1, 1) not in ( 'O', 'T', 'X', 'F', 'D','R' )
                    AND t22.bill_dt BETWEEN P_FROMDATE AND P_TODATE
                    --AND t22.bill_dt BETWEEN TO_DATE(P_FROMDATE, 'DD/MM/YYYY') AND TO_DATE(P_TODATE, 'DD/MM/YYYY')
            GROUP BY t22.bill_no,
                    nvl(t22.bill_amount, 0),
                    t25.narration || '/' || t25.chq_no,
                    nvl(t22.tds, 0),
                    nvl(t22.tds_sgst, 0),
                    nvl(t22.tds_cgst, 0),
                    nvl(t22.tds_igst, 0),
                    nvl(t22.retention_money, 0),
                    nvl(t22.cnote_amount, 0),
                    nvl(t22.write_off_amt, 0)
        ) TEMP
        
        UNION ALL
        
        SELECT  '' bill_no,
                0 amount_outstanding,
                SUM(T25.SUSPENSE_AMT) SUSPENSE_AMT,
                0 FINALIZED_INVOICE,
                0 PENDING_FINALIZED_INVOICE
        FROM T25_RV_DETAILS T25
        JOIN T24_RV T24 ON T24.VCHR_NO = T25.VCHR_NO
        WHERE T24.VCHR_DT BETWEEN P_FROMDATE AND P_TODATE
        UNION     
        SELECT  '' bill_no,
                0 amount_outstanding,
                0 SUSPENSE_AMT,
                SUM(CASE WHEN T22.BILL_FINALISED  = 'Y' THEN 1 ELSE 0 END) FINALIZED_INVOICE,
                SUM(CASE WHEN (T22.BILL_FINALISED  <> 'Y' AND T22.BILL_FINALISED IS NULL) THEN 1 ELSE 0 END) PENDING_FINALIZED_INVOICE
        FROM T22_BILL T22 
        WHERE T22.BILL_DT BETWEEN P_FROMDATE and P_TODATE
        --WHERE T22.BILL_DT BETWEEN TO_DATE(P_FROMDATE, 'DD/MM/YYYY') AND TO_DATE(P_TODATE, 'DD/MM/YYYY')
    ) A;
    
    -- Get Top 10 Billing Clients (Current Financial year)
    OPEN P_RESULT_BILLING_CLIENT FOR
    SELECT  BCL.CLIENT_NAME,
            SUM(BCL.BILL_AMOUNT) AMOUNT
    FROM (
        SELECT  
                NVL((
                        select RAILWAY Client from T91_RAILWAYS where RLY_CD = t13.RLY_CD and t13.RLY_NONRLY = 'R' 
                        union
                        select distinct BPO_ORGN Client from T12_BILL_PAYING_OFFICER where BPO_RLY = t13.RLY_CD and t13.RLY_NONRLY <> 'R' and ROWNUM <= 1
                ),'Other')  CLIENT_NAME, T22.BILL_AMOUNT
        FROM T22_BILL T22
        JOIN T13_PO_MASTER T13 ON T13.CASE_NO = T22.CASE_NO
        WHERE T22.BILL_DT BETWEEN P_FROMDATE AND P_TODATE  
    ) BCL
    GROUP BY BCL.CLIENT_NAME
    ORDER BY AMOUNT DESC;
    --FETCH FIRST 10 ROWS ONLY;
    
        -- Get Top 05 Outstanding Clients (Current Financial year)
    OPEN P_RESULT_OUTSTANDING_CLIENT FOR
    SELECT  CLIENT_NAME,
            SUM(amount_outstanding) AMOUNT
    FROM (
        SELECT  CLIENT_NAME,
                bill_amount - ( tds + tds_sgst + tds_cgst + tds_igst + retention_money + write_off_amt + amount_posted + cnote_amount ) amount_outstanding
        FROM(
            SELECT  t22.bill_no bill_no,
                    nvl(t22.bill_amount, 0) bill_amount,
                    t25.narration || '/' || t25.chq_no AS narration,
                    nvl(t22.tds, 0) tds,
                    nvl(t22.tds_sgst, 0) tds_sgst,
                    nvl(t22.tds_cgst, 0) tds_cgst,
                    nvl(t22.tds_igst, 0) tds_igst,
                    nvl(t22.retention_money, 0) retention_money,
                    nvl(t22.cnote_amount, 0) cnote_amount,
                    nvl(t22.write_off_amt, 0) write_off_amt,
                    SUM(nvl(t26.amount_cleared, 0)) amount_posted,
                    t13.RLY_CD,
                    t13.RLY_NONRLY,
                    NVL((
                        select RAILWAY Client from T91_RAILWAYS where RLY_CD = t13.RLY_CD and t13.RLY_NONRLY = 'R' 
                        union
                        select distinct BPO_ORGN Client from T12_BILL_PAYING_OFFICER where BPO_RLY = t13.RLY_CD and t13.RLY_NONRLY <> 'R' and ROWNUM <= 1
                    ),'Other')  CLIENT_NAME
            FROM t22_bill t22, t20_ic t20, t12_bill_paying_officer t12, t03_city t031, t13_po_master t13, t03_city t032,
                 t03_city t033, t05_vendor t05, t06_consignee t06, t26_cheque_posting t26, t25_rv_details t25, au_cris au
            WHERE   t22.bill_no = t20.bill_no
                    AND t20.bpo_cd = t12.bpo_cd
                    AND t22.case_no = t25.case_no
                    AND t12.au = au.au
                    AND t12.bpo_city_cd = t031.city_cd (+)
                    AND t22.case_no = t13.case_no
                    AND t13.vend_cd = t05.vend_cd
                    AND t05.vend_city_cd = t032.city_cd (+)
                    AND t20.consignee_cd = t06.consignee_cd
                    AND t06.consignee_city = t033.city_cd (+)
                    AND t22.bill_no = t26.bill_no (+)
                    AND ( ( t12.bpo_type = 'R' AND NOT ( nvl(t22.bill_amount, 0) BETWEEN 0 AND 100 ) ) OR ( t12.bpo_type <> 'R' ) )
                    AND substr(t22.bill_no, 1, 1) NOT IN ( 'O', 'T', 'X', 'F', 'D','R' )
                    AND t22.bill_dt BETWEEN P_FROMDATE AND P_TODATE
            GROUP BY t22.bill_no,
                     nvl(t22.bill_amount, 0),
                     t25.narration || '/' || t25.chq_no,
                     nvl(t22.tds, 0),
                     nvl(t22.tds_sgst, 0),
                     nvl(t22.tds_cgst, 0),
                     nvl(t22.tds_igst, 0),
                     nvl(t22.retention_money, 0),
                     nvl(t22.cnote_amount, 0),
                     nvl(t22.write_off_amt, 0),
                     t13.RLY_CD,
                     t13.RLY_NONRLY
        ) TEMP
    )
    GROUP BY CLIENT_NAME
    ORDER BY AMOUNT DESC;
   -- FETCH FIRST 5 ROWS ONLY;

    -- Get Billing Comparison for the Last Three Years
    OPEN P_RESULT_BULLING_COMPARISON FOR
    SELECT  ROWNO,
            FINALCIAL_YEAR,
            AMOUNT
    FROM (
        SELECT  1 ROWNO,
                P_FROMDATE || ' to ' || P_TODATE FINALCIAL_YEAR,
                SUM(T22.BILL_AMOUNT) AMOUNT
        FROM T22_BILL T22
        WHERE T22.BILL_DT BETWEEN P_FROMDATE AND P_TODATE
        UNION
        SELECT  2 ROWNO,
                P_FY2_STARTDATE || ' to ' || P_FY2_ENDDATE FINALCIAL_YEAR,
                SUM(T22.BILL_AMOUNT) AMOUNT
        FROM T22_BILL T22
        WHERE T22.BILL_DT BETWEEN P_FY2_STARTDATE AND P_FY2_ENDDATE
--        WHERE T22.BILL_DT BETWEEN TO_DATE(P_FY2_STARTDATE, 'DD/MM/YYYY') AND TO_DATE(P_FY2_ENDDATE, 'DD/MM/YYYY')
        UNION
        SELECT  3 ROWNO,
                P_FY3_STARTDATE || ' to ' || P_FY3_ENDDATE FINALCIAL_YEAR,
                SUM(T22.BILL_AMOUNT) AMOUNT
        FROM T22_BILL T22
        WHERE T22.BILL_DT BETWEEN P_FY3_STARTDATE AND P_FY3_ENDDATE
--        WHERE T22.BILL_DT BETWEEN TO_DATE(P_FY3_STARTDATE, 'DD/MM/YYYY') AND TO_DATE(P_FY3_ENDDATE, 'DD/MM/YYYY')
    ) ORDER BY ROWNO;
    
    OPEN P_RESULT_SECTOR_BILLING FOR
    SELECT  ROWNO,
            SECTOR,
            NVL(AMOUNT,0) AMOUNT
    FROM (
        SELECT  1 ROWNO,
                'PSU' SECTOR,
                SUM(T22.BILL_AMOUNT) AMOUNT
        FROM T22_BILL T22
        JOIN T13_PO_MASTER T13 ON T22.CASE_NO = T13.CASE_NO
        WHERE T22.BILL_DT BETWEEN P_FROMDATE AND P_CURR_FY_ENDDATE
        AND T13.RLY_NONRLY = 'P'
        UNION
        SELECT  2 ROWNO,
                'RAILWAY' SECTOR,
                SUM(T22.BILL_AMOUNT) AMOUNT
        FROM T22_BILL T22
        JOIN T13_PO_MASTER T13 ON T22.CASE_NO = T13.CASE_NO
        WHERE T22.BILL_DT BETWEEN P_FROMDATE AND P_CURR_FY_ENDDATE
        AND T13.RLY_NONRLY = 'R'
        UNION
        SELECT  3 ROWNO,
                'NONRAILWAY' SECTOR,
                SUM(T22.BILL_AMOUNT) AMOUNT
        FROM T22_BILL T22
        JOIN T13_PO_MASTER T13 ON T22.CASE_NO = T13.CASE_NO
        WHERE T22.BILL_DT BETWEEN P_FROMDATE AND P_CURR_FY_ENDDATE
        AND T13.RLY_NONRLY = 'N'
        UNION
        SELECT  4 ROWNO,
                'PRIVATE' SECTOR,
                SUM(T22.BILL_AMOUNT) AMOUNT
        FROM T22_BILL T22
        JOIN T13_PO_MASTER T13 ON T22.CASE_NO = T13.CASE_NO
        WHERE T22.BILL_DT BETWEEN P_FROMDATE AND P_CURR_FY_ENDDATE
        AND T13.RLY_NONRLY = 'S'
        UNION
        SELECT  5 ROWNO,
                'LAB' SECTOR,
                SUM(T22.BILL_AMOUNT) AMOUNT
        FROM T22_BILL T22
        JOIN T13_PO_MASTER T13 ON T22.CASE_NO = T13.CASE_NO
        WHERE T22.BILL_DT BETWEEN P_FROMDATE AND P_CURR_FY_ENDDATE
        AND T13.RLY_NONRLY = 'L'
    ) SECTOR
    ORDER BY ROWNO;
    
    OPEN P_RESULT_SECTOR_BILLING_CURRENT_YEAR_WISE FOR
    SELECT  YRS,
            ROWNO,                    
            SECTOR,
            AMOUNT
    FROM (
        SELECT  TO_CHAR(TRUNC(P_FROMDATE, 'YYYY'), 'YYYY') YRS,
                ROWNO,
                SECTOR,
                NVL(AMOUNT,0) AMOUNT
        FROM (
            SELECT  1 ROWNO,
                    'PSU' SECTOR,
                    SUM(T22.BILL_AMOUNT) AMOUNT
            FROM T22_BILL T22
            JOIN T13_PO_MASTER T13 ON T22.CASE_NO = T13.CASE_NO
            WHERE T22.BILL_DT BETWEEN P_FROMDATE AND P_CURR_FY_ENDDATE
            AND T13.RLY_NONRLY = 'P'
            UNION
            SELECT  2 ROWNO,
                    'RAILWAY' SECTOR,
                    SUM(T22.BILL_AMOUNT) AMOUNT
            FROM T22_BILL T22
            JOIN T13_PO_MASTER T13 ON T22.CASE_NO = T13.CASE_NO
            WHERE T22.BILL_DT BETWEEN P_FROMDATE AND P_CURR_FY_ENDDATE
            AND T13.RLY_NONRLY = 'R'
            UNION
            SELECT  3 ROWNO,
                    'NONRAILWAY' SECTOR,
                    SUM(T22.BILL_AMOUNT) AMOUNT
            FROM T22_BILL T22
            JOIN T13_PO_MASTER T13 ON T22.CASE_NO = T13.CASE_NO
            WHERE T22.BILL_DT BETWEEN P_FROMDATE AND P_CURR_FY_ENDDATE
            AND T13.RLY_NONRLY = 'N'
            UNION
            SELECT  4 ROWNO,
                    'PRIVATE' SECTOR,
                    SUM(T22.BILL_AMOUNT) AMOUNT
            FROM T22_BILL T22
            JOIN T13_PO_MASTER T13 ON T22.CASE_NO = T13.CASE_NO
            WHERE T22.BILL_DT BETWEEN P_FROMDATE AND P_CURR_FY_ENDDATE
            AND T13.RLY_NONRLY = 'S'
            UNION
            SELECT  5 ROWNO,
                    'LAB' SECTOR,
                    SUM(T22.BILL_AMOUNT) AMOUNT
            FROM T22_BILL T22
            JOIN T13_PO_MASTER T13 ON T22.CASE_NO = T13.CASE_NO
            WHERE T22.BILL_DT BETWEEN P_FROMDATE AND P_CURR_FY_ENDDATE
            AND T13.RLY_NONRLY = 'L'
        ) SECTOR
        UNION
        SELECT  TO_CHAR(TRUNC(P_FY2_STARTDATE, 'YYYY'), 'YYYY') YRS,
                ROWNO,
                SECTOR,
                NVL(AMOUNT,0) AMOUNT
        FROM (
            SELECT  1 ROWNO,
                    'PSU' SECTOR,
                    SUM(T22.BILL_AMOUNT) AMOUNT
            FROM T22_BILL T22
            JOIN T13_PO_MASTER T13 ON T22.CASE_NO = T13.CASE_NO
            WHERE T22.BILL_DT BETWEEN P_FY2_STARTDATE AND P_CURR_FY2_ENDDATE
--            WHERE T22.BILL_DT BETWEEN TO_DATE(TO_CHAR(ADD_MONTHS(P_FROMDATE, -12),'DD/MM/YYYY'), 'DD/MM/YYYY') AND TO_DATE(TO_CHAR(ADD_MONTHS(P_CURR_FY_ENDDATE, -12),'DD/MM/YYYY'), 'DD/MM/YYYY')
            AND T13.RLY_NONRLY = 'P'
            UNION
            SELECT  2 ROWNO,
                    'RAILWAY' SECTOR,
                    SUM(T22.BILL_AMOUNT) AMOUNT
            FROM T22_BILL T22
            JOIN T13_PO_MASTER T13 ON T22.CASE_NO = T13.CASE_NO
            WHERE T22.BILL_DT BETWEEN P_FY2_STARTDATE AND P_CURR_FY2_ENDDATE
            AND T13.RLY_NONRLY = 'R'
            UNION
            SELECT  3 ROWNO,
                    'NONRAILWAY' SECTOR,
                    SUM(T22.BILL_AMOUNT) AMOUNT
            FROM T22_BILL T22
            JOIN T13_PO_MASTER T13 ON T22.CASE_NO = T13.CASE_NO
            WHERE T22.BILL_DT BETWEEN P_FY2_STARTDATE AND P_CURR_FY2_ENDDATE
            AND T13.RLY_NONRLY = 'N'
            UNION
            SELECT  4 ROWNO,
                    'PRIVATE' SECTOR,
                    SUM(T22.BILL_AMOUNT) AMOUNT
            FROM T22_BILL T22
            JOIN T13_PO_MASTER T13 ON T22.CASE_NO = T13.CASE_NO
            WHERE T22.BILL_DT BETWEEN P_FY2_STARTDATE AND P_CURR_FY2_ENDDATE
            AND T13.RLY_NONRLY = 'S'
            UNION
            SELECT  5 ROWNO,
                    'LAB' SECTOR,
                    SUM(T22.BILL_AMOUNT) AMOUNT
            FROM T22_BILL T22
            JOIN T13_PO_MASTER T13 ON T22.CASE_NO = T13.CASE_NO
            WHERE T22.BILL_DT BETWEEN P_FY2_STARTDATE AND P_CURR_FY2_ENDDATE
            AND T13.RLY_NONRLY = 'L'
        ) SECTOR
        UNION
        SELECT  TO_CHAR(TRUNC(P_FY3_STARTDATE, 'YYYY'), 'YYYY') YRS,
                ROWNO,
                SECTOR,
                NVL(AMOUNT,0) AMOUNT
        FROM (
            SELECT  1 ROWNO,
                    'PSU' SECTOR,
                    SUM(T22.BILL_AMOUNT) AMOUNT
            FROM T22_BILL T22
            JOIN T13_PO_MASTER T13 ON T22.CASE_NO = T13.CASE_NO
            WHERE T22.BILL_DT BETWEEN P_FY3_STARTDATE AND P_CURR_FY3_ENDDATE
--            WHERE T22.BILL_DT BETWEEN TO_DATE(TO_CHAR(ADD_MONTHS(P_FROMDATE, -24),'DD/MM/YYYY'), 'DD/MM/YYYY') AND TO_DATE(TO_CHAR(ADD_MONTHS(P_CURR_FY_ENDDATE, -24),'DD/MM/YYYY'), 'DD/MM/YYYY')
            AND T13.RLY_NONRLY = 'P'
            UNION
            SELECT  2 ROWNO,
                    'RAILWAY' SECTOR,
                    SUM(T22.BILL_AMOUNT) AMOUNT
            FROM T22_BILL T22
            JOIN T13_PO_MASTER T13 ON T22.CASE_NO = T13.CASE_NO
            WHERE T22.BILL_DT BETWEEN P_FY3_STARTDATE AND P_CURR_FY3_ENDDATE
            AND T13.RLY_NONRLY = 'R'
            UNION
            SELECT  3 ROWNO,
                    'NONRAILWAY' SECTOR,
                    SUM(T22.BILL_AMOUNT) AMOUNT
            FROM T22_BILL T22
            JOIN T13_PO_MASTER T13 ON T22.CASE_NO = T13.CASE_NO
            WHERE T22.BILL_DT BETWEEN P_FY3_STARTDATE AND P_CURR_FY3_ENDDATE
            AND T13.RLY_NONRLY = 'N'
            UNION
            SELECT  4 ROWNO,
                    'PRIVATE' SECTOR,
                    SUM(T22.BILL_AMOUNT) AMOUNT
            FROM T22_BILL T22
            JOIN T13_PO_MASTER T13 ON T22.CASE_NO = T13.CASE_NO
            WHERE T22.BILL_DT BETWEEN P_FY3_STARTDATE AND P_CURR_FY3_ENDDATE
            AND T13.RLY_NONRLY = 'S'
            UNION
            SELECT  5 ROWNO,
                    'LAB' SECTOR,
                    SUM(T22.BILL_AMOUNT) AMOUNT
            FROM T22_BILL T22
            JOIN T13_PO_MASTER T13 ON T22.CASE_NO = T13.CASE_NO
            WHERE T22.BILL_DT BETWEEN P_FY3_STARTDATE AND P_CURR_FY3_ENDDATE
            AND T13.RLY_NONRLY = 'L'
        ) SECTOR
    ) CURR_YEAR
    ORDER BY YRS DESC, ROWNO;
END;
/

CREATE OR REPLACE PROCEDURE "GET_CM_DFO_DASHBOARD_LIST" 
(
    P_FROMDATE IN NVARCHAR2,
    P_TODATE IN NVARCHAR2,
    P_ACTION_TYPE IN NVARCHAR2,
    P_RESULT_CURSOR OUT SYS_REFCURSOR 
) AS 
BEGIN
     IF P_ACTION_TYPE = 'OSA' THEN
        OPEN P_RESULT_CURSOR FOR
                       SELECT 
                A.bill_no,
                A.BILLDT,
                A.CASE_NO,
                A.MATVAL,
                A.REMARKS,
                SUM(A.amount_outstanding) AS AMOUNT_OUTSTANDING
            FROM (
                SELECT  
                    bill_no,
                    BILLDT,
                    CASE_NO,
                    MATVAL,
                    REMARKS,                    
                    (bill_amount - (tds + tds_sgst + tds_cgst + tds_igst + retention_money + write_off_amt + amount_posted + cnote_amount)) AS amount_outstanding,
                    0 AS SUSPENSE_AMT,
                    0 AS FINALIZED_INVOICE,
                    0 AS PENDING_FINALIZED_INVOICE
                FROM (
                    SELECT  
                        t22.bill_no bill_no,
                        t22.BILL_DT BILLDT,
                        t22.CASE_NO CASE_NO,
                        t22.MATERIAL_VALUE MATVAL,
                        t22.REMARKS REMARKS,
                        nvl(t22.bill_amount, 0) AS bill_amount,
                        t25.narration || '/' || t25.chq_no AS narration,
                        nvl(t22.tds, 0) AS tds,
                        nvl(t22.tds_sgst, 0) AS tds_sgst,
                        nvl(t22.tds_cgst, 0) AS tds_cgst,
                        nvl(t22.tds_igst, 0) AS tds_igst,
                        nvl(t22.retention_money, 0) AS retention_money,
                        nvl(t22.cnote_amount, 0) AS cnote_amount,
                        nvl(t22.write_off_amt, 0) AS write_off_amt,
                        SUM(nvl(t26.amount_cleared, 0)) AS amount_posted
                    FROM    
                        t22_bill t22, t20_ic t20, t12_bill_paying_officer t12, t03_city t031, t13_po_master t13, t03_city t032,
                        t03_city t033, t05_vendor t05, t06_consignee t06, t26_cheque_posting t26, t25_rv_details t25, au_cris au
                    WHERE   
                        t22.bill_no = t20.bill_no
                        AND t20.bpo_cd = t12.bpo_cd
                        AND t22.case_no = t25.case_no
                        AND t12.au = au.au
                        AND t12.bpo_city_cd = t031.city_cd (+)
                        AND t22.case_no = t13.case_no
                        AND t13.vend_cd = t05.vend_cd
                        AND t05.vend_city_cd = t032.city_cd (+)
                        AND t20.consignee_cd = t06.consignee_cd
                        AND t06.consignee_city = t033.city_cd (+)
                        AND t22.bill_no = t26.bill_no (+)
                        AND ( (t12.bpo_type = 'R' AND NOT (nvl(t22.bill_amount, 0) BETWEEN 0 AND 100)) OR (t12.bpo_type <> 'R') )
                        AND SUBSTR(T22.BILL_NO, 1, 1) NOT IN ('O', 'T', 'X', 'F', 'D', 'R')
                        AND t22.bill_dt BETWEEN TO_DATE(P_FROMDATE, 'DD/MM/YYYY') AND TO_DATE(P_TODATE, 'DD/MM/YYYY')
                    GROUP BY 
                        t22.bill_no,
                        t22.BILL_DT,
                        t22.CASE_NO,
                        t22.MATERIAL_VALUE,
                        t22.REMARKS,
                        nvl(t22.bill_amount, 0),
                        t25.narration || '/' || t25.chq_no,
                        nvl(t22.tds, 0),
                        nvl(t22.tds_sgst, 0),
                        nvl(t22.tds_cgst, 0),
                        nvl(t22.tds_igst, 0),
                        nvl(t22.retention_money, 0),
                        nvl(t22.cnote_amount, 0),
                        nvl(t22.write_off_amt, 0)
                ) TEMP

                UNION ALL

                SELECT  
                    NULL AS bill_no,
                    NULL AS BILLDT,
                    NULL AS CASE_NO,
                    NULL AS MATVAL,
                    NULL AS REMARKS,
                    0 AS amount_outstanding,
                    SUM(T25.SUSPENSE_AMT) AS SUSPENSE_AMT,
                    0 AS FINALIZED_INVOICE,
                    0 AS PENDING_FINALIZED_INVOICE
                FROM T25_RV_DETAILS T25
                JOIN T24_RV T24 ON T24.VCHR_NO = T25.VCHR_NO
                WHERE T24.VCHR_DT BETWEEN TO_DATE(P_FROMDATE, 'DD/MM/YYYY') AND TO_DATE(P_TODATE, 'DD/MM/YYYY')

                UNION     

                SELECT  
                    NULL AS bill_no,
                    NULL AS BILLDT,
                    NULL AS CASE_NO,
                    NULL AS MATVAL,
                    NULL AS REMARKS,
                    0 AS amount_outstanding,
                    0 AS SUSPENSE_AMT,
                    SUM(CASE WHEN T22.BILL_FINALISED = 'Y' THEN 1 ELSE 0 END) AS FINALIZED_INVOICE,
                    SUM(CASE WHEN (T22.BILL_FINALISED <> 'Y' AND T22.BILL_FINALISED IS NULL) THEN 1 ELSE 0 END) AS PENDING_FINALIZED_INVOICE
                FROM T22_BILL T22 
                WHERE T22.BILL_DT BETWEEN TO_DATE(P_FROMDATE, 'DD/MM/YYYY') AND TO_DATE(P_TODATE, 'DD/MM/YYYY')
                GROUP BY T22.BILL_FINALISED  -- Add GROUP BY for the aggregate functions
            ) A
            GROUP BY A.bill_no, A.BILLDT, A.CASE_NO, A.MATVAL, A.REMARKS;  

     ELSIF P_ACTION_TYPE = 'SA' THEN
            OPEN P_RESULT_CURSOR FOR
               SELECT
               T25.CASE_NO,T25.CHQ_DT,T25.CHQ_NO,T25.NARRATION,T25.SUSPENSE_AMT,T25.VCHR_NO
            FROM
                T25_RV_DETAILS T25
                JOIN T24_RV T24 ON T24.VCHR_NO = T25.VCHR_NO
            WHERE
                T24.VCHR_DT BETWEEN TO_DATE(P_FROMDATE, 'DD/MM/YYYY') AND TO_DATE(P_TODATE, 'DD/MM/YYYY');
     ELSIF P_ACTION_TYPE = 'OB' THEN
            OPEN P_RESULT_CURSOR FOR
            SELECT bill_no,amount_outstanding,BILLDT,CASE_NO,MATVAL,REMARKS FROM (
         SELECT 
                   bill_no,BILLDT,CASE_NO,MATVAL,REMARKS,
            (bill_amount - ( tds + tds_sgst + tds_cgst + tds_igst + retention_money + write_off_amt + amount_posted + cnote_amount )) amount_outstanding              
            FROM(
                    SELECT  t22.bill_no bill_no,t22.BILL_DT BILLDT,t22.CASE_NO CASE_NO,t22.MATERIAL_VALUE MATVAL,t22.REMARKS REMARKS,
                            nvl(t22.bill_amount, 0) bill_amount,
                            t25.narration || '/' || t25.chq_no AS narration,
                            nvl(t22.tds, 0) tds,
                            nvl(t22.tds_sgst, 0) tds_sgst,
                            nvl(t22.tds_cgst, 0) tds_cgst,
                            nvl(t22.tds_igst, 0) tds_igst,
                            nvl(t22.retention_money, 0) retention_money,
                            nvl(t22.cnote_amount, 0) cnote_amount,
                            nvl(t22.write_off_amt, 0) write_off_amt,
                            SUM(nvl(t26.amount_cleared, 0)) amount_posted
                    FROM    t22_bill t22, t20_ic t20, t12_bill_paying_officer t12, t03_city t031, t13_po_master t13, t03_city t032,
                            t03_city t033, t05_vendor t05, t06_consignee t06, t26_cheque_posting t26, t25_rv_details t25, au_cris au
                    WHERE   t22.bill_no = t20.bill_no
                            AND t20.bpo_cd = t12.bpo_cd
                            AND t22.case_no = t25.case_no
                            AND t12.au = au.au
                            AND t12.bpo_city_cd = t031.city_cd (+)
                            AND t22.case_no = t13.case_no
                            AND t13.vend_cd = t05.vend_cd
                            AND t05.vend_city_cd = t032.city_cd (+)
                            AND t20.consignee_cd = t06.consignee_cd
                            AND t06.consignee_city = t033.city_cd (+)
                            AND t22.bill_no = t26.bill_no (+)
                            AND ( ( t12.bpo_type = 'R' AND NOT ( nvl(t22.bill_amount, 0) BETWEEN 0 AND 100 ) ) OR ( t12.bpo_type <> 'R' ) )
                            and SUBSTR(T22.BILL_NO, 1, 1) not in ( 'O', 'T', 'X', 'F', 'D','R' )
                            AND t22.bill_dt BETWEEN TO_DATE(P_FROMDATE, 'DD/MM/YYYY') AND TO_DATE(P_TODATE, 'DD/MM/YYYY')
                            --AND t22.bill_dt BETWEEN TO_DATE(P_FROMDATE, 'DD/MM/YYYY') AND TO_DATE(P_TODATE, 'DD/MM/YYYY')
                    GROUP BY t22.bill_no,t22.BILL_DT,t22.CASE_NO,t22.MATERIAL_VALUE,t22.REMARKS,
                            nvl(t22.bill_amount, 0),
                            t25.narration || '/' || t25.chq_no,
                            nvl(t22.tds, 0),
                            nvl(t22.tds_sgst, 0),
                            nvl(t22.tds_cgst, 0),
                            nvl(t22.tds_igst, 0),
                            nvl(t22.retention_money, 0),
                            nvl(t22.cnote_amount, 0),
                            nvl(t22.write_off_amt, 0)
                ) TEMP  

                GROUP BY BILL_NO,BILLDT,CASE_NO,MATVAL,REMARKS,(bill_amount - ( tds + tds_sgst + tds_cgst + tds_igst + retention_money + write_off_amt + amount_posted + cnote_amount ))
                ) TP
                WHERE TP.amount_outstanding > 0;

     ELSIF P_ACTION_TYPE = 'TOTI' THEN
            OPEN P_RESULT_CURSOR FOR
         SELECT  
                    bill_no,BILLDT,CASE_NO,MATVAL,REMARKS,
            (bill_amount - ( tds + tds_sgst + tds_cgst + tds_igst + retention_money + write_off_amt + amount_posted + cnote_amount )) amount_outstanding              
            FROM(
                    SELECT  t22.bill_no bill_no,t22.BILL_DT BILLDT,t22.CASE_NO CASE_NO,t22.MATERIAL_VALUE MATVAL,t22.REMARKS REMARKS,
                            nvl(t22.bill_amount, 0) bill_amount,
                            t25.narration || '/' || t25.chq_no AS narration,
                            nvl(t22.tds, 0) tds,
                            nvl(t22.tds_sgst, 0) tds_sgst,
                            nvl(t22.tds_cgst, 0) tds_cgst,
                            nvl(t22.tds_igst, 0) tds_igst,
                            nvl(t22.retention_money, 0) retention_money,
                            nvl(t22.cnote_amount, 0) cnote_amount,
                            nvl(t22.write_off_amt, 0) write_off_amt,
                            SUM(nvl(t26.amount_cleared, 0)) amount_posted
                    FROM    t22_bill t22, t20_ic t20, t12_bill_paying_officer t12, t03_city t031, t13_po_master t13, t03_city t032,
                            t03_city t033, t05_vendor t05, t06_consignee t06, t26_cheque_posting t26, t25_rv_details t25, au_cris au
                    WHERE   t22.bill_no = t20.bill_no
                            AND t20.bpo_cd = t12.bpo_cd
                            AND t22.case_no = t25.case_no
                            AND t12.au = au.au
                            AND t12.bpo_city_cd = t031.city_cd (+)
                            AND t22.case_no = t13.case_no
                            AND t13.vend_cd = t05.vend_cd
                            AND t05.vend_city_cd = t032.city_cd (+)
                            AND t20.consignee_cd = t06.consignee_cd
                            AND t06.consignee_city = t033.city_cd (+)
                            AND t22.bill_no = t26.bill_no (+)
                            AND ( ( t12.bpo_type = 'R' AND NOT ( nvl(t22.bill_amount, 0) BETWEEN 0 AND 100 ) ) OR ( t12.bpo_type <> 'R' ) )
                            and SUBSTR(T22.BILL_NO, 1, 1) not in ( 'O', 'T', 'X', 'F', 'D','R' )
                            AND t22.bill_dt BETWEEN TO_DATE(P_FROMDATE, 'DD/MM/YYYY') AND TO_DATE(P_TODATE, 'DD/MM/YYYY')
                            --AND t22.bill_dt BETWEEN TO_DATE(P_FROMDATE, 'DD/MM/YYYY') AND TO_DATE(P_TODATE, 'DD/MM/YYYY')
                    GROUP BY t22.bill_no,t22.BILL_DT,t22.CASE_NO,t22.MATERIAL_VALUE,t22.REMARKS,
                            nvl(t22.bill_amount, 0),
                            t25.narration || '/' || t25.chq_no,
                            nvl(t22.tds, 0),
                            nvl(t22.tds_sgst, 0),
                            nvl(t22.tds_cgst, 0),
                            nvl(t22.tds_igst, 0),
                            nvl(t22.retention_money, 0),
                            nvl(t22.cnote_amount, 0),
                            nvl(t22.write_off_amt, 0)
                ) TEMP  

                GROUP BY BILL_NO,BILLDT,CASE_NO,MATVAL,REMARKS,(bill_amount - ( tds + tds_sgst + tds_cgst + tds_igst + retention_money + write_off_amt + amount_posted + cnote_amount ));              
    ELSIF P_ACTION_TYPE = 'FI' THEN
            OPEN P_RESULT_CURSOR FOR
        SELECT
             T22.BILL_NO,T22.BILL_DT,T22.CASE_NO,T22.MATERIAL_VALUE,T22.BILL_AMOUNT,T22.BILL_STATUS,T22.REMARKS
        FROM
            t22_bill T22
        WHERE
            T22.bill_dt BETWEEN TO_DATE(P_FROMDATE, 'DD/MM/YYYY') AND TO_DATE(P_TODATE, 'DD/MM/YYYY') AND T22.BILL_FINALISED='Y';
    ELSIF P_ACTION_TYPE = 'PIF' THEN
        OPEN P_RESULT_CURSOR FOR
         SELECT
             T22.BILL_NO,T22.BILL_DT,T22.CASE_NO,T22.MATERIAL_VALUE,T22.BILL_AMOUNT,T22.BILL_STATUS,T22.REMARKS
        FROM
            t22_bill T22
        WHERE
            T22.bill_dt BETWEEN TO_DATE(P_FROMDATE, 'DD/MM/YYYY') AND TO_DATE(P_TODATE, 'DD/MM/YYYY') and T22.BILL_FINALISED != 'Y' and T22.BILL_FINALISED IS NULL;
     END IF;
END;
/
----------------------------------------------------- End CM DFO DASHBOARD SP -----------------------------------------------------

----------------------------------------------------- START VENDOR DASHBOARD SP -----------------------------------------------------
create or replace PROCEDURE GET_VENDOR_DASHBOARD_COUNT 
(
  P_VENDCD IN NUMBER ,
  P_RESULT_CURSOR OUT SYS_REFCURSOR
) AS 
    P_FROMDATE DATE;
    P_TODATE DATE;
BEGIN
    P_FROMDATE := GET_FINANCIAL_YEAR_START_DATE();
    P_TODATE := GET_FINANCIAL_YEAR_END_DATE();
    
    OPEN P_RESULT_CURSOR FOR
    SELECT  VEND_CD,
            SUM(TOTAL_CALL) TOTAL_CALL,
            SUM(PENDING_CALL) PENDING_CALL,
            SUM(ACCEPTED_CALL) ACCEPTED_CALL,
            SUM(CANCELLED_CALL) CANCELLED_CALL, 
            SUM(UNDER_LAB_TESTING) UNDER_LAB_TESTING, 
            SUM(STILL_UNDER_INSPECTION) STILL_UNDER_INSPECTION, 
            SUM(STAGE_REJECTION) STAGE_REJECTION           
    FROM (
        SELECT  P_VENDCD VEND_CD,
                COUNT(t17.CASE_NO) AS TOTAL_CALL,
                SUM (CASE WHEN t17.CALL_STATUS = 'M' THEN 1 else 0 end) PENDING_CALL,
                0 ACCEPTED_CALL,
                SUM (CASE WHEN t17.CALL_STATUS = 'C' THEN 1 else 0 end) CANCELLED_CALL, 
                SUM (CASE WHEN t17.CALL_STATUS = 'U' THEN 1 else 0 end) UNDER_LAB_TESTING, 
                SUM (CASE WHEN t17.CALL_STATUS = 'S' THEN 1 else 0 end) STILL_UNDER_INSPECTION, 
                SUM (CASE WHEN t17.CALL_STATUS = 'T' THEN 1 else 0 end) STAGE_REJECTION                
        FROM T17_CALL_REGISTER t17
        WHERE t17.MFG_CD = P_VENDCD --670    
        AND t17.CALL_RECV_DT BETWEEN P_FROMDATE AND P_TODATE
--        AND t17.CALL_RECV_DT >= TO_DATE(P_FROMDATE, 'DD/MM/YYYY')
--        AND t17.CALL_RECV_DT <= TO_DATE(P_TODATE, 'DD/MM/YYYY')
        GROUP BY T17.MFG_CD
        UNION
        SELECT  P_VENDCD VEND_CD,
                0 TOTAL_CALL,
                0 PENDING_CALL,
                COUNT(t17.CASE_NO) ACCEPTED_CALL,
                0 CANCELLED_CALL, 
                0 UNDER_LAB_TESTING, 
                0 STILL_UNDER_INSPECTION, 
                0 STAGE_REJECTION                
        FROM T47_IE_WORK_PLAN t47
        JOIN T17_CALL_REGISTER t17 ON t47.CASE_NO = t17.CASE_NO AND t47.CALL_RECV_DT = t17.CALL_RECV_DT AND t47.CALL_SNO = t17.CALL_SNO
        WHERE TRIM(t17.CALL_STATUS) = 'A'
        AND t17.CALL_RECV_DT BETWEEN P_FROMDATE AND P_TODATE
--        AND t17.CALL_RECV_DT >= TO_DATE(P_FROMDATE, 'DD/MM/YYYY')
--        AND t17.CALL_RECV_DT <= TO_DATE(P_TODATE, 'DD/MM/YYYY')
        AND t47.MFG_CD = P_VENDCD --670
        GROUP BY t17.MFG_CD                    
    ) A
    GROUP BY A.VEND_CD;
END;
/

create or replace PROCEDURE GET_VENDOR_DASHBOARD_RECENR_CALL_STATUS 
(
  P_VEND_CD IN NUMBER, 
  P_RESULT_CURSOR OUT SYS_REFCURSOR 
) AS 
    P_FROMDATE DATE;
    P_TODATE DATE;
BEGIN
    P_FROMDATE := GET_FINANCIAL_YEAR_START_DATE();
    P_TODATE := GET_FINANCIAL_YEAR_END_DATE(); --SYSDATE
    
    OPEN P_RESULT_CURSOR FOR
    SELECT t17.Case_No,
           t17.Call_Recv_Dt,
           t17.Call_Sno,           
            NVL((
                select RAILWAY Client from T91_RAILWAYS where RLY_CD = t13.RLY_CD and t13.RLY_NONRLY = 'R' 
                union
                select distinct BPO_ORGN Client from T12_BILL_PAYING_OFFICER where BPO_RLY = t13.RLY_CD and t13.RLY_NONRLY <> 'R' and rownum <= 1
            ),'Other')  Client_Name,
           t09.IE_NAME,
           t09.IE_PHONE_NO,
           t08.CO_NAME,
           t08.CO_PHONE_NO,
           T21.CALL_STATUS_DESC CALL_STATUS
    FROM T17_CALL_REGISTER t17
    JOIN T13_PO_MASTER t13 ON t17.CASE_NO = t13.CASE_NO
    JOIN T09_IE t09 ON t17.IE_CD = t09.IE_CD
    JOIN T08_IE_CONTROLL_OFFICER t08 ON t09.IE_CO_CD = t08.CO_CD
    JOIN T21_CALL_STATUS_CODES T21 ON t17.CALL_STATUS = T21.CALL_STATUS_CD
    WHERE t17.MFG_CD = P_VEND_CD
    AND t17.CALL_RECV_DT BETWEEN P_FROMDATE AND P_TODATE
    ORDER BY t17.CALL_RECV_DT DESC;
END;
/

create or replace PROCEDURE GET_VENDOR_DASHBOARD_RECENT_PO 
(
  P_VENDCD IN NUMBER ,
  P_RESULT_CURSOR OUT SYS_REFCURSOR
) AS 
    P_FROMDATE DATE;
    P_TODATE DATE;
BEGIN
    P_FROMDATE := GET_FINANCIAL_YEAR_START_DATE();
    P_TODATE := GET_FINANCIAL_YEAR_END_DATE(); --SYSDATE
    
    OPEN P_RESULT_CURSOR FOR
    SELECT  t17.CASE_NO,
            t17.CALL_RECV_DT,
            t13.PO_NO,
            t13.PO_DT,
            t13.RECV_DT,
            t13.PO_OR_LETTER,
            NVL((
                SELECT RAILWAY Client FROM T91_RAILWAYS WHERE RLY_CD = t13.RLY_CD AND t13.RLY_NONRLY = 'R' 
                UNION
                SELECT DISTINCT BPO_ORGN Client FROM T12_BILL_PAYING_OFFICER WHERE BPO_RLY = t13.RLY_CD AND t13.RLY_NONRLY <> 'R' AND ROWNUM <= 1
            ),'Other')  CLIENT_NAME,            
            t21.CALL_STATUS_DESC CALL_STATUS
    FROM T17_CALL_REGISTER t17
    JOIN T13_PO_MASTER t13 ON t17.CASE_NO = t13.CASE_NO
    join T21_CALL_STATUS_CODES t21 on TRIM(t17.CALL_STATUS) = TRIM(t21.CALL_STATUS_CD)
    WHERE t17.MFG_CD = P_VENDCD --'84086'
    AND t17.CALL_RECV_DT BETWEEN P_FROMDATE AND P_TODATE
    ORDER BY t17.CALL_RECV_DT DESC;
END GET_VENDOR_DASHBOARD_RECENT_PO;
----------------------------------------------------- END VENDOR DASHBOARD SP -----------------------------------------------------

----------------------------------------------------- START IE DASHBOARD SP -----------------------------------------------------
create or replace PROCEDURE GET_IE_DASHBOARD
(
  P_IECD IN NUMBER ,
  P_RESULT_CURSOR OUT SYS_REFCURSOR,
  P_RESULT_CURSOR1 OUT SYS_REFCURSOR
) AS
    P_FROMDATE DATE;
    P_TODATE DATE;
BEGIN
    P_FROMDATE := GET_FINANCIAL_YEAR_START_DATE();
    P_TODATE := GET_FINANCIAL_YEAR_END_DATE();
    
    OPEN P_RESULT_CURSOR FOR
    SELECT  IE_CD,
            SUM(TOTAL_CALL) TOTAL_CALL,
            SUM(PENDING_CALL) PENDING_CALL,
            SUM(ACCEPTED_CALL) ACCEPTED_CALL,
            SUM(CANCELLED_CALL) CANCELLED_CALL, 
            SUM(UNDER_LAB_TESTING) UNDER_LAB_TESTING, 
            SUM(STILL_UNDER_INSPECTION) STILL_UNDER_INSPECTION, 
            SUM(STAGE_REJECTION) STAGE_REJECTION,   
            SUM(TOTAL_NO_OF_NC_ISSUE) TOTAL_NO_OF_NC_ISSUE,
            SUM(IC_ISSUE_BUT_NOT_RECEIVE_OFFICE) IC_ISSUE_BUT_NOT_RECEIVE_OFFICE,
            SUM(TOTAL_CONSIGNEE_COMPLAINT) TOTAL_CONSIGNEE_COMPLAINT,
            TO_CHAR(IE.DSC_EXPIRY_DT,'DD/MM/YYYY') DSC_EXPIRY_DT
    FROM (
        SELECT  P_IECD IE_CD,
                COUNT(t17.CASE_NO) AS TOTAL_CALL,
                SUM (CASE WHEN t17.CALL_STATUS = 'M' THEN 1 else 0 end) PENDING_CALL,
                0 ACCEPTED_CALL,
                SUM (CASE WHEN t17.CALL_STATUS = 'C' THEN 1 else 0 end) CANCELLED_CALL, 
                SUM (CASE WHEN t17.CALL_STATUS = 'U' THEN 1 else 0 end) UNDER_LAB_TESTING, 
                SUM (CASE WHEN t17.CALL_STATUS = 'S' THEN 1 else 0 end) STILL_UNDER_INSPECTION, 
                SUM (CASE WHEN t17.CALL_STATUS = 'T' THEN 1 else 0 end) STAGE_REJECTION,
                0 TOTAL_NO_OF_NC_ISSUE,
                0 IC_ISSUE_BUT_NOT_RECEIVE_OFFICE,
                0 TOTAL_CONSIGNEE_COMPLAINT,
                t09.DSC_EXPIRY_DT
        FROM T17_CALL_REGISTER t17
        LEFT JOIN T09_IE t09 ON t17.IE_CD = t09.IE_CD
        WHERE t17.IE_CD = P_IECD --670  
        AND t17.CALL_RECV_DT BETWEEN P_FROMDATE AND P_TODATE
        GROUP BY t17.IE_CD,t09.DSC_EXPIRY_DT
        UNION ALL
        SELECT  P_IECD IE_CD,
                0 TOTAL_CALL,
                0 PENDING_CALL,
                COUNT(t17.CASE_NO) ACCEPTED_CALL,
                0 CANCELLED_CALL, 
                0 UNDER_LAB_TESTING, 
                0 STILL_UNDER_INSPECTION, 
                0 STAGE_REJECTION,
                0 TOTAL_NO_OF_NC_ISSUE,
                0 IC_ISSUE_BUT_NOT_RECEIVE_OFFICE,
                0 TOTAL_CONSIGNEE_COMPLAINT,
                t09.DSC_EXPIRY_DT
--        FROM T47_IE_WORK_PLAN t47
        FROM T17_CALL_REGISTER t17 --ON t47.CASE_NO = t17.CASE_NO AND t47.CALL_RECV_DT = t17.CALL_RECV_DT AND t47.CALL_SNO = t17.CALL_SNO
        LEFT JOIN T09_IE t09 ON t17.IE_CD = t09.IE_CD
        WHERE TRIM(t17.CALL_STATUS) = 'A'
        AND t17.CALL_RECV_DT BETWEEN P_FROMDATE AND P_TODATE
        AND t17.IE_CD = P_IECD --670
        GROUP BY t17.IE_CD,t09.DSC_EXPIRY_DT
        UNION ALL
        SELECT  P_IECD IE_CD,
                0 TOTAL_CALL,
                0 PENDING_CALL,
                0 ACCEPTED_CALL,
                0 CANCELLED_CALL, 
                0 UNDER_LAB_TESTING, 
                0 STILL_UNDER_INSPECTION, 
                0 STAGE_REJECTION,
                COUNT(t41.CASE_NO) TOTAL_NO_OF_NC_ISSUE,
                0 IC_ISSUE_BUT_NOT_RECEIVE_OFFICE,
                0 TOTAL_CONSIGNEE_COMPLAINT,
                t09.DSC_EXPIRY_DT
        FROM T41_NC_MASTER t41
        LEFT JOIN T09_IE t09 ON t41.IE_CD = t09.IE_CD
        WHERE t41.IE_CD = P_IECD
        AND t41.CALL_RECV_DT BETWEEN P_FROMDATE AND P_TODATE
        GROUP BY t41.IE_CD,t09.DSC_EXPIRY_DT
        UNION ALL
        SELECT  IC.IECD IE_CD,
                0 TOTAL_CALL,
                0 PENDING_CALL,
                0 ACCEPTED_CALL,
                0 CANCELLED_CALL, 
                0 UNDER_LAB_TESTING, 
                0 STILL_UNDER_INSPECTION, 
                0 STAGE_REJECTION,
                0 TOTAL_NO_OF_NC_ISSUE,
                COUNT(*) IC_ISSUE_BUT_NOT_RECEIVE_OFFICE,
                0 TOTAL_CONSIGNEE_COMPLAINT,
                t09.DSC_EXPIRY_DT
        FROM (
            SELECT DISTINCT P_IECD IECD, t20.* FROM T20_IC t20
            JOIN T30_IC_RECEIVED t30 ON t20.BK_NO <> t30.BK_NO AND t20.SET_NO <> t30.SET_NO
            WHERE t20.IE_CD = P_IECD
            AND t20.CALL_RECV_DT BETWEEN P_FROMDATE AND P_TODATE
        ) IC
        LEFT JOIN T09_IE t09 ON IC.IE_CD = t09.IE_CD
        GROUP BY IC.IECD,t09.DSC_EXPIRY_DT
        UNION ALL
        SELECT  P_IECD IE_CD,
                0 TOTAL_CALL,
                0 PENDING_CALL,
                0 ACCEPTED_CALL,
                0 CANCELLED_CALL, 
                0 UNDER_LAB_TESTING, 
                0 STILL_UNDER_INSPECTION, 
                0 STAGE_REJECTION,
                0 TOTAL_NO_OF_NC_ISSUE,
                0 IC_ISSUE_BUT_NOT_RECEIVE_OFFICE,
                COUNT(*) TOTAL_CONSIGNEE_COMPLAINT,
                t09.DSC_EXPIRY_DT
        FROM T40_CONSIGNEE_COMPLAINTS t40
        LEFT JOIN T09_IE t09 ON t40.IE_CD = t09.IE_CD
        WHERE t40.IE_CD = P_IECD
        AND t40.COMPLAINT_DT BETWEEN P_FROMDATE AND P_TODATE
        GROUP BY t40.IE_CD,t09.DSC_EXPIRY_DT
    ) IE
    GROUP BY IE.IE_CD, IE.DSC_EXPIRY_DT;
    
    -- get Pending Call Data
    OPEN P_RESULT_CURSOR1 FOR
    SELECT  t17.Case_No,
            TO_CHAR(t17.Call_Recv_Dt,'DD/MM/YYYY') Call_Recv_Dt,
            t17.Call_Sno,
            TO_CHAR(t17.DT_INSP_DESIRE,'DD/MM/YYYY') Insp_Desire_Dt,
            NVL((
                select RAILWAY Client from T91_RAILWAYS where RLY_CD = t13.RLY_CD and t13.RLY_NONRLY = 'R' 
                union
                select distinct BPO_ORGN Client from T12_BILL_PAYING_OFFICER where BPO_RLY = t13.RLY_CD and t13.RLY_NONRLY <> 'R' and rownum <= 1
            ),'Other')  Client_Name,
            t05.VEND_NAME Vend_Name,
            t05.VEND_CONTACT_PER_1 Contact_Per,
            t05.VEND_CONTACT_TEL_1 Contact_No
    FROM T17_CALL_REGISTER t17
    JOIN T13_PO_MASTER t13 ON t17.CASE_NO = t13.CASE_NO
    JOIN T05_VENDOR t05 ON t17.MFG_CD = t05.VEND_CD
    WHERE t17.IE_CD = P_IECD
    AND t17.CALL_STATUS = 'M'
    AND t17.CALL_RECV_DT BETWEEN P_FROMDATE AND P_TODATE
    ORDER BY t17.CALL_RECV_DT DESC;
END GET_IE_DASHBOARD;

create or replace PROCEDURE GET_IE_DASHBOARD_PENDING_CALL 
(
  P_IECD IN NUMBER ,
  P_RESULT_CURSOR OUT SYS_REFCURSOR
) AS 
    P_FROMDATE DATE;
    P_TODATE DATE;
BEGIN
    P_FROMDATE := GET_FINANCIAL_YEAR_START_DATE();
    P_TODATE := GET_FINANCIAL_YEAR_END_DATE();
    
    OPEN P_RESULT_CURSOR FOR
    SELECT  t17.Case_No,
            TO_CHAR(t17.Call_Recv_Dt,'DD/MM/YYYY') Call_Recv_Dt,
            t17.Call_Sno,
            TO_CHAR(t17.DT_INSP_DESIRE,'DD/MM/YYYY') Insp_Desire_Dt,
            NVL((
                select RAILWAY Client from T91_RAILWAYS where RLY_CD = t13.RLY_CD and t13.RLY_NONRLY = 'R' 
                union
                select distinct BPO_ORGN Client from T12_BILL_PAYING_OFFICER where BPO_RLY = t13.RLY_CD and t13.RLY_NONRLY <> 'R' and rownum <= 1
            ),'Other')  Client_Name,
            t05.VEND_NAME Vend_Name,
            t05.VEND_CONTACT_PER_1 Contact_Per,
            t05.VEND_CONTACT_TEL_1 Contact_No
    FROM T17_CALL_REGISTER t17
    JOIN T13_PO_MASTER t13 ON t17.CASE_NO = t13.CASE_NO
    JOIN T05_VENDOR t05 ON t17.MFG_CD = t05.VEND_CD
    WHERE t17.IE_CD = P_IECD
    AND t17.CALL_RECV_DT BETWEEN P_FROMDATE AND P_TODATE;
END GET_IE_DASHBOARD_PENDING_CALL;
----------------------------------------------------- END IE DASHBOARD SP -----------------------------------------------------


----------------------------------------------------- START Receipt of book set in Inspection Office PAGE -----------------------------------------------------
create or replace PROCEDURE SP_GET_IC_RECEIPT 
(
  P_BK_NO IN VARCHAR2,
  P_SET_NO IN VARCHAR2,
  P_IE_CD IN VARCHAR2,
  P_REGION IN VARCHAR2,
  P_RESULT_CURSOR OUT SYS_REFCURSOR
) AS 
BEGIN
    OPEN P_RESULT_CURSOR FOR
    
    Select  t30.BK_NO,
            t30.SET_NO,
            t09.IE_NAME,
            to_char(t30.IC_SUBMIT_DT,'dd/mm/yyyy') IC_SUBMIT_DT 
    From T30_IC_RECEIVED t30, T09_IE t09 
    WHERE t30.IE_CD = t09.IE_CD
    AND ((P_BK_NO IS NOT NULL AND upper(trim(t30.BK_NO)) LIKE upper(P_BK_NO)) OR (P_BK_NO IS NULL))
    AND ((P_SET_NO IS NOT NULL AND trim(t30.SET_NO) = P_SET_NO) OR (P_SET_NO IS NULL))
    AND ((P_IE_CD IS NOT NULL AND trim(t30.IE_CD) = P_IE_CD) OR (P_IE_CD IS NULL))    
    AND BILL_NO IS NULL 
    AND REGION = P_REGION 
    AND t30.IsDeleted = 0
    ORDER BY t30.BK_NO ,t30.SET_NO;    
END;

create or replace PROCEDURE SP_GET_SELECTED_IC_RECEIPT 
(
  P_BK_NO IN VARCHAR2,
  P_SET_NO IN VARCHAR2,
  P_REGION IN VARCHAR2,
  P_RESULT_CURSOR OUT SYS_REFCURSOR
) AS 
BEGIN
    OPEN P_RESULT_CURSOR FOR
    
    SELECT  REGION,
            BK_NO,
            SET_NO,
            IE_CD,
            to_char(IC_SUBMIT_DT,'dd/mm/yyyy') SUBMIT_DT,
            REMARKS,
            to_char(REMARKS_DT,'dd/mm/yyyy') REMARKS_DATE 
    FROM T30_IC_RECEIVED 
    WHERE UPPER(TRIM(BK_NO))= upper(TRIM(P_BK_NO)) 
    AND UPPER(TRIM(SET_NO)) = upper(TRIM(P_SET_NO)) 
    AND REGION = P_REGION 
    AND BILL_NO is null
    AND NVL(ISDELETED,0) = 0;
END;

create or replace PROCEDURE SP_GET_UNBILLED_IC 
(
    P_FROMDATE IN VARCHAR2, 
    P_TODATE IN VARCHAR2,
    P_REGION IN VARCHAR2,
    P_RESULT_CURSOR OUT SYS_REFCURSOR
) AS 
BEGIN
    OPEN P_RESULT_CURSOR FOR
    
    SELECT  TO_CHAR(IC_SUBMIT_DATE,'DD/MM/YYYY') SUBMIT_DATE, 
            IC_SUBMIT_DATE, 
            IE_NAME, 
            BK_NO, 
            SET_NO, 
            CLIENT_TYPE, 
            REMARKS, 
            REMARKS_DATE, 
            IC_DATE 
    FROM ( 
        SELECT  T30.IC_SUBMIT_DT IC_SUBMIT_DATE,
                T09.IE_NAME,
                T30.BK_NO,
                T30.SET_NO,
                DECODE(T12.BPO_TYPE,'R','RAILWAY','NON RAILWAY') CLIENT_TYPE,
                T30.REMARKS, 
                to_char(T30.REMARKS_DT,'dd/mm/yyyy')REMARKS_DATE, 
                TO_CHAR(IC.DATETIME,'DD/MM/YYYY') IC_DATE 
        FROM T30_IC_RECEIVED T30 
        LEFT JOIN T16_IC_CANCEL T16 ON (T30.BK_NO=T16.BK_NO and T30.SET_NO=T16.SET_NO and T30.REGION= T16.REGION) , T09_IE T09, IC_INTERMEDIATE IC, T14_PO_BPO T14, T12_BILL_PAYING_OFFICER T12 
        WHERE (T16.BK_NO IS NULL and T16.SET_NO IS NULL and T16.REGION IS NULL) 
        and T30.IE_CD=T09.IE_CD 
        AND IC.BK_NO=T30.BK_NO 
        AND IC.SET_NO=T30.SET_NO 
        AND IC.CASE_NO=T14.CASE_NO 
        AND IC.CONSIGNEE_CD=T14.CONSIGNEE_CD 
        AND T14.BPO_CD=T12.BPO_CD 
        and (T30.IC_SUBMIT_DT between to_date(P_FROMDATE,'dd/mm/yyyy') and to_date(P_TODATE,'dd/mm/yyyy')) 
        and T30.REGION='N' 
        AND SUBSTR(IC.CASE_NO,1,1) = P_REGION
        and BILL_NO is null         
        UNION ALL 
        select  T30.IC_SUBMIT_DT IC_SUBMIT_DATE,
                T09.IE_NAME,
                T30.BK_NO,
                T30.SET_NO,
                DECODE(T13.RLY_NONRLY,'R','RAILWAY','NON RAILWAY') CLIENT_TYPE,
                T30.REMARKS, 
                to_char(T30.REMARKS_DT,'dd/mm/yyyy')REMARKS_DATE, 
                TO_CHAR(T17.CALL_STATUS_DT,'DD/MM/YYYY') IC_DATE 
        FROM T30_IC_RECEIVED T30 
        LEFT JOIN T16_IC_CANCEL T16 on (T30.BK_NO=T16.BK_NO and T30.SET_NO=T16.SET_NO and T30.REGION= T16.REGION) , T09_IE T09, T17_CALL_REGISTER T17, T13_PO_MASTER T13 
        WHERE (T16.BK_NO IS NULL and T16.SET_NO IS NULL and T16.REGION IS NULL) 
        AND T30.IE_CD=T09.IE_CD 
        AND T17.BK_NO=T30.BK_NO 
        AND T17.SET_NO=T30.SET_NO 
        AND T17.CASE_NO=T13.CASE_NO 
        and (T30.IC_SUBMIT_DT between to_date(P_FROMDATE,'dd/mm/yyyy') and to_date(P_TODATE,'dd/mm/yyyy')) 
        and T30.REGION = P_REGION
        AND NOT REGEXP_LIKE(SUBSTR(T30.BK_NO,1,1), '[0-9]+') AND BILL_NO is null  
    ) 
    GROUP BY TO_CHAR(IC_SUBMIT_DATE,'DD/MM/YYYY'), IC_SUBMIT_DATE, IE_NAME,BK_NO, SET_NO, CLIENT_TYPE, REMARKS, REMARKS_DATE, IC_DATE 
    ORDER BY IC_SUBMIT_DATE,IE_NAME,BK_NO,SET_NO;
END SP_GET_UNBILLED_IC;

create or replace PROCEDURE SP_GET_IC_ISSUED_BY_IE 
(
  P_FROMDATE IN VARCHAR2, 
  P_TODATE IN VARCHAR2, 
  P_REGION IN VARCHAR2,
--  P_USERNAME IN VARCHAR2,
  P_IE_CD IN VARCHAR2,
  P_RESULT_CURSOR OUT SYS_REFCURSOR
) AS 
BEGIN
    OPEN P_RESULT_CURSOR FOR
    
    SELECT  to_char(CALL_STATUS_DT,'dd/mm/yyyy') IC_ISSUED_DT,
            a.BK_NO,
            a.SET_NO,
            a.IE_NAME,
            a.CO_NAME,
            a.CASE_NO,
            a.PO_SOURCE,
            a.PO_YR,
            a.PO_NO,
            a.IMMS_RLY_CD, 
            a.RLY_NONRLY 
    FROM ( 
        SELECT  T17.CASE_NO,
                T17.CALL_STATUS_DT,
                'dd/mm/yyyy',
                T17.BK_NO,
                T17.SET_NO,
                T09.IE_NAME,
                T08.CO_NAME,
                PO_SOURCE,
                TO_CHAR(PO_DT,'YYYY') PO_YR, 
                PO_NO, 
                NVL((SELECT IMMS_RLY_CD FROM T91_RAILWAYS T91 WHERE T13.RLY_CD=T91.RLY_CD),'') IMMS_RLY_CD, 
                RLY_NONRLY 
        FROM T17_CALL_REGISTER T17 
        LEFT JOIN T30_IC_RECEIVED T30 ON (T17.BK_NO = T30.BK_NO and T17.SET_NO=T30.SET_NO and T17.REGION_CODE=T30.REGION), T09_IE T09, T08_IE_CONTROLL_OFFICER T08, T13_PO_MASTER T13 
        WHERE (T30.BK_NO is null and T30.SET_NO is null and T30.REGION is null) 
        and T17.IE_CD=T09.IE_CD 
        and T09.IE_CO_CD=T08.CO_CD 
        AND T17.CASE_NO=T13.CASE_NO 
        AND substr(T17.CASE_NO,1,1) = P_REGION
        and (P_IE_CD IS NULL OR T17.IE_CD = P_IE_CD)
        and T17.CALL_STATUS in ('A','R','G','T') 
        and (T17.CALL_STATUS_DT between to_date(P_FROMDATE,'dd/mm/yyyy') and to_date(P_TODATE,'dd/mm/yyyy') ) 
    ) a 
    left join T20_IC T20 on (a.BK_NO=T20.BK_NO and a.SET_NO=T20.SET_NO and a.CASE_NO=T20.CASE_NO) 
    where (T20.BK_NO is null and T20.SET_NO is null and T20.CASE_NO is null) 
    Order by a.CO_NAME,a.CALL_STATUS_DT,a.BK_NO,a.SET_NO;        
END SP_GET_IC_ISSUED_BY_IE;

create or replace PROCEDURE SP_GET_IC_STATUS 
(
    P_FROMDATE IN VARCHAR2,
    P_TODATE IN VARCHAR2,
    P_REGION IN VARCHAR2,
    P_IECD IN VARCHAR2,
    P_RESULT_CURSOR OUT SYS_REFCURSOR
) AS 
BEGIN
    OPEN P_RESULT_CURSOR FOR
  
    SELECT  to_char(T30.IC_SUBMIT_DT,'dd/mm/yyyy') IC_SUBMIT_DT,
            T09.IE_NAME,
            T30.BK_NO,
            T30.SET_NO,
            NVL(T30.BILL_NO,'Un-Billed IC') BILL_NO 
    FROM T30_IC_RECEIVED T30, T09_IE T09 
    WHERE T30.IE_CD=T09.IE_CD 
    and (T30.IC_SUBMIT_DT between to_date(P_FROMDATE,'dd/mm/yyyy') and to_date(P_TODATE,'dd/mm/yyyy')) 
    AND REGION = P_REGION
    AND (P_IECD IS NULL OR T30.IE_CD = P_IECD)
    ORDER BY T30.IC_SUBMIT_DT,T09.IE_CD,T30.BK_NO,T30.SET_NO;
END SP_GET_IC_STATUS;
----------------------------------------------------- END Receipt of book set in Inspection Office PAGE -----------------------------------------------------


----------------------------------------------------- START CONTRACT ENTRTY -----------------------------------------------------

ALTER TABLE T100_CONTRACT ADD CLIENTCODE VARCHAR2(50) DEFAULT null;

----------------------------------------------------- END CONTRACT ENTRTY -----------------------------------------------------

----------------------------------------------------- START Holiday Master -----------------------------------------------------
CREATE TABLE T111_HOLIDAY_MASTER (
    ID NUMBER(6,0) GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    FINANCIAL_YEAR VARCHAR2(20),
    FY_FROM_DT DATE,
    FY_TO_DT DATE,
    USER_ID CHAR(8),
    CREATEDBY  NUMBER(6,0),
    CREATEDDATE DATE,
    UPDATEDBY  NUMBER(6,0),
    UPDATEDDATE DATE,
    ISDELETED NUMBER(2,0)
);

CREATE TABLE T112_HOLIDAY_DETAIL (
    ID NUMBER(6,0) GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    HOLIDAY_ID VARCHAR2(20),
    HOLIDAY_DT DATE,
    HOLIDAY_DESC VARCHAR2(500),
    USER_ID CHAR(8),
    CREATEDBY  NUMBER(6,0),
    CREATEDDATE DATE,
    UPDATEDBY  NUMBER(6,0),
    UPDATEDDATE DATE,
    ISDELETED NUMBER(2,0)
);

--- Hold This Report --- 
create or replace PROCEDURE SP_GET_IC_ISSUED_HOLIDAY
(
  P_FROMDATE IN VARCHAR2, 
  P_TODATE IN VARCHAR2, 
  P_REGION IN VARCHAR2,
  P_IE_CD IN VARCHAR2,
  P_RESULT_CURSOR OUT SYS_REFCURSOR
) AS 
BEGIN
    OPEN P_RESULT_CURSOR FOR

    SELECT  to_char(CALL_STATUS_DT,'dd/mm/yyyy') IC_ISSUED_DT,
            a.BK_NO,
            a.SET_NO,
            a.IE_NAME,
            a.CO_NAME,
            a.CASE_NO,
            a.PO_SOURCE,
            a.PO_YR,
            a.PO_NO,
            a.IMMS_RLY_CD, 
            a.RLY_NONRLY ,
            a.DT_DIFF TOTAL_DAYS,
            a.Working_days WORKING_DAYS
    FROM ( 
        SELECT  T17.CASE_NO,
                T17.CALL_STATUS_DT,                
                T17.BK_NO,
                T17.SET_NO,
                T09.IE_NAME,
                T08.CO_NAME,
                PO_SOURCE,
                TO_CHAR(PO_DT,'YYYY') PO_YR, 
                PO_NO, 
                NVL((SELECT IMMS_RLY_CD FROM T91_RAILWAYS T91 WHERE T13.RLY_CD=T91.RLY_CD),'') IMMS_RLY_CD, 
                RLY_NONRLY,
--                (T17.call_status_dt - T17.call_recv_dt)+1  DT_DIFF,
                (SYSDATE - T17.call_status_dt) + 1  DT_DIFF,
                (
                    select count(*) Working_days 
                    from (
                        SELECT  TRUNC(T17.CALL_STATUS_DT) + LEVEL - 1 AS date_in_series,
                                to_char(TRUNC(T17.CALL_STATUS_DT) + LEVEL - 1,'Day') date_day
                        FROM dual 
                        CONNECT BY TRUNC(T17.CALL_STATUS_DT) + LEVEL - 1 <= SYSDATE
                    ) T
                    where trim(T.date_day) not in ('Sunday')
                ) Working_days
        FROM T17_CALL_REGISTER T17, 
--        LEFT JOIN T30_IC_RECEIVED T30 ON (T17.BK_NO = T30.BK_NO and T17.SET_NO=T30.SET_NO and T17.REGION_CODE=T30.REGION), 
        T09_IE T09, 
        T08_IE_CONTROLL_OFFICER T08, 
        T13_PO_MASTER T13 
        WHERE --(T30.BK_NO is null and T30.SET_NO is null and T30.REGION is null) 
        T17.IE_CD = T09.IE_CD 
        and T09.IE_CO_CD = T08.CO_CD 
        AND T17.CASE_NO = T13.CASE_NO 
        AND substr(T17.CASE_NO,1,1) = P_REGION
        and (P_IE_CD IS NULL OR T17.IE_CD = P_IE_CD)
        and T17.CALL_STATUS in ('A','R','G','T') 
        and (T17.CALL_STATUS_DT between to_date(P_FROMDATE,'dd/mm/yyyy') and to_date(P_TODATE,'dd/mm/yyyy') ) 
        AND NOT EXISTS (SELECT * FROM T30_IC_RECEIVED T30 WHERE T30.BK_NO = T17.BK_NO AND T30.SET_NO = T17.SET_NO)
    ) a 
    left join T20_IC T20 on (a.BK_NO=T20.BK_NO and a.SET_NO=T20.SET_NO and a.CASE_NO=T20.CASE_NO) 
    where (T20.BK_NO is null and T20.SET_NO is null and T20.CASE_NO is null) 
    Order by a.CO_NAME,a.CALL_STATUS_DT,a.BK_NO,a.SET_NO;        
END;
----------------------------------------------------- END Holiday Master -----------------------------------------------------

----------------------------------------------------- START CHAT BOARD -----------------------------------------------------
CREATE TABLE T113_CHAT_MASTER (
    ID NUMBER(6,0) GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    CONNECTION_ID VARCHAR2(20),
    MSG_SEND_ID NUMBER(6,0),
    MSG_RECV_ID NUMBER(6,0),
    MESSAGE VARCHAR2(500),        
    SEND_MSG_DATE TIMESTAMP(6) WITH TIME ZONE,
    ISDELETED NUMBER(2,0)
);
----------------------------------------------------- END CHAT BOARD -----------------------------------------------------


----------------------------------------------------- * START MOBILE APP API * -----------------------------------------------------
create or replace PROCEDURE GET_VENDOR_PENDINGINSPECTION_API 
(
  P_VEND_CD IN NUMBER, 
  P_FROMDATE IN VARCHAR2, 
  P_TODATE IN VARCHAR2,
  P_RESULT_CURSOR OUT SYS_REFCURSOR 
) AS 
BEGIN
    -- Get last three months Pending data to current date
    OPEN P_RESULT_CURSOR FOR
    SELECT  ROW_NUMBER() OVER(ORDER BY t17.Case_No) ROWNO,
            t17.Case_No,
            t17.Call_Recv_Dt,
            t17.Call_Sno,
            NVL(sum(t18.qty_to_insp),0) Qty,
            t13.PO_NO,
            t13.PO_DT,
            t13.RLY_NONRLY,
            t13.RLY_CD,
            NVL((
                select RAILWAY Client from T91_RAILWAYS where RLY_CD = t13.RLY_CD and t13.RLY_NONRLY = 'R' 
                union
                select distinct BPO_ORGN Client from T12_BILL_PAYING_OFFICER where BPO_RLY = t13.RLY_CD and t13.RLY_NONRLY <> 'R' and ROWNUM <= 1
            ),'Other')  Client_Name,
            t09.IE_NAME,
            t05.VEND_NAME,
            t21.CALL_STATUS_DESC Status
    FROM T17_CALL_REGISTER t17 
    LEFT JOIN T18_CALL_DETAILS t18 on t18.case_no = t17.Case_No and  t18.Call_Recv_Dt = t17.Call_Recv_Dt and t18.Call_Sno = t17.Call_Sno 
    LEFT JOIN T13_PO_MASTER t13 on t17.Case_No = t13.Case_No
    LEFT JOIN T09_IE t09 on t17.IE_CD = t09.IE_CD
    LEFT JOIN T05_VENDOR t05 on t17.mfg_cd = t05.VEND_CD
    LEFT JOIN T21_CALL_STATUS_CODES t21 on TRIM(t17.CALL_STATUS) = TRIM(t21.CALL_STATUS_CD)
    WHERE t17.mfg_cd = P_VEND_CD--19148 --84086
    AND t17.Call_Status IN ('M', 'U', 'S', 'W')
    AND TO_DATE(t17.CALL_RECV_DT) BETWEEN TO_DATE(P_FROMDATE,'DD/MM/YYYY') AND TO_DATE(P_TODATE,'DD/MM/YYYY')
--    AND TO_DATE(TO_CHAR(t17.CALL_RECV_DT,'DD/MM/YYYY'),'DD/MM/YYYY') >= To_Date(P_FROMDATE,'dd/mm/yyyy') --'01/08/2019'
--    AND TO_DATE(TO_CHAR(t17.CALL_RECV_DT,'DD/MM/YYYY'),'DD/MM/YYYY') <= To_Date(P_TODATE,'dd/mm/yyyy') --'07/11/2023'
    GROUP BY t17.Case_No,
             t17.Call_Recv_Dt,
             t17.Call_Sno,
             t13.PO_NO,
             t13.PO_DT,
             t13.RLY_NONRLY,
             t13.RLY_CD,
             t09.IE_NAME,
             t05.VEND_NAME,
             t21.CALL_STATUS_DESC
    ORDER BY t17.Case_No,
             t17.Call_Recv_Dt,
             t17.Call_Sno;
END GET_VENDOR_PENDINGINSPECTION_API;


create or replace PROCEDURE GET_VENDOR_PENDING_PO_FOR_CALL_API (
    P_VEND_CD       IN NUMBER,
    P_FROMDATE      IN VARCHAR2,
    P_TODATE        IN VARCHAR2,
    P_RESULT_CURSOR OUT SYS_REFCURSOR
) AS
BEGIN
    -- Get last three months Pending data to current date
    OPEN P_RESULT_CURSOR FOR 
    SELECT  ROW_NUMBER() OVER(ORDER BY t13.Case_No) ROWNO,
            t13.Case_No,
            t17.Call_Recv_Dt,
            t17.Call_Sno,
            t13.PO_NO,
            t13.PO_DT,
            t09.IE_NAME,
            NVL(
                    (
                        SELECT RAILWAY Client 
                        FROM T91_RAILWAYS 
                        WHERE RLY_CD = t13.RLY_CD AND t13.RLY_NONRLY = 'R'
                        UNION ALL
                        SELECT DISTINCT BPO_ORGN Client 
                        FROM T12_BILL_PAYING_OFFICER 
                        WHERE BPO_RLY = t13.RLY_CD AND t13.RLY_NONRLY <> 'R' AND ROWNUM <= 1
                    ),
                    'Other'
            ) AS Client_Name,
            decode(t17.call_status, 
                'M', 'Pending', 
                'A', 'Accepted',
                'R', 'Rejection', 
                'C', 'Cancelled', 
                'U', 'Under Lab Testing', 
                'S', 'Still Under Inspection', 
                'G', 'Stage Inspection Accepted',
                'W', 'Withheld', 
                'B', 'Accepted and Billed', 
                'T', 'Stage Rejection', 
                'PR', 'Partially Passed and Rejected', 
                'PRB', 'Partially Passed and Rejected and Billed',
                'CB', 'Cancelled and Billed', 
                'RB', 'Rejected and Billed',
                'PO Accepted'
            ) AS Status
    FROM t13_po_master t13
    LEFT JOIN t17_call_register t17 ON t13.case_no = t17.case_no AND t17.CALL_STATUS IN ('A', 'R', 'C', 'G','B','T','PR','PRB','CB','RB')
    LEFT JOIN t09_ie t09 ON t17.IE_CD = t09.IE_CD
    JOIN t05_vendor t05 ON t13.VEND_CD = t05.VEND_CD
    WHERE t13.vend_cd = P_VEND_CD
    AND t13.po_dt BETWEEN TO_DATE(P_FROMDATE,'DD/MM/YYYY') AND TO_DATE(P_TODATE,'DD/MM/YYYY')
    ORDER BY ROWNO,t13.po_dt DESC;
END GET_VENDOR_PENDING_PO_FOR_CALL_API;

create or replace PROCEDURE GET_CLIENT_PENDINGINSPECTION_API 
(
  P_RLY_CD IN VARCHAR2, 
  P_RLY_NONTYPE IN VARCHAR2, 
  P_FROMDATE IN VARCHAR2,
  P_TODATE IN VARCHAR2,
  P_RESULT_CURSOR OUT SYS_REFCURSOR  
) AS 
BEGIN
    -- Get last three months data till current date
    OPEN P_RESULT_CURSOR FOR
    SELECT  t17.Case_No,
            t17.Call_Recv_Dt,
            t17.Call_Sno,
            t13.PO_NO,
            t13.PO_DT,
            t05.Vend_Name,        
            t09.IE_Name,
            SUM(t18.qty_to_insp) Qty,
            t21.CALL_STATUS_DESC Status
    FROM T17_CALL_REGISTER t17
    LEFT JOIN T13_PO_MASTER t13 on t17.Case_No = t13.Case_No
    LEFT JOIN T18_CALL_DETAILS t18 ON t17.Case_No = t18.Case_No AND t17.Call_Recv_Dt = t18.Call_Recv_Dt AND t17.Call_Sno = t18.Call_Sno
    LEFT JOIN T09_IE t09 ON t17.IE_CD = t09.IE_CD
    LEFT JOIN T05_VENDOR t05 ON t17.MFG_CD = t05.VEND_CD
    LEFT JOIN T21_CALL_STATUS_CODES t21 ON TRIM(t17.CALL_STATUS) = TRIM(t21.CALL_STATUS_CD)
    WHERE t13.RLY_CD = P_RLY_CD 
        AND t13.RLY_NONRLY = P_RLY_NONTYPE
        AND t17.CALL_RECV_DT >= TO_DATE(P_FROMDATE, 'DD/MM/YYYY') 
        AND t17.CALL_RECV_DT <= TO_DATE(P_TODATE, 'DD/MM/YYYY')
        AND t17.CALL_STATUS IN ('M','U','S','W')
    GROUP BY t17.Case_No,
            t17.Call_Recv_Dt,
            t17.Call_Sno,
            t13.PO_NO,
            t13.PO_DT,
            t05.Vend_Name,
            t09.IE_Name,
            t21.CALL_STATUS_DESC
    ORDER BY t17.Call_Recv_Dt,t17.Case_No,t17.Call_Sno;
END GET_CLIENT_PENDINGINSPECTION_API;

create or replace PROCEDURE GET_CLIENT_REGION_WISE_PENDINGINSPECTION_API 
(
  P_RLY_CD IN VARCHAR2, 
  P_RLY_NONTYPE IN VARCHAR2, 
  P_FROMDATE IN VARCHAR2,
  P_TODATE IN VARCHAR2,
  P_PO_NO IN VARCHAR2,
  P_REGION IN VARCHAR2,
  P_RESULT_CURSOR OUT SYS_REFCURSOR  
) AS 
BEGIN  
    OPEN P_RESULT_CURSOR FOR
    SELECT  t17.Case_No,
            t17.Call_Recv_Dt,
            t17.Call_Sno,
            t13.PO_NO,
            t13.PO_DT,
            t05.Vend_Name,        
            T09.IE_NAME,
            SUM(t18.qty_to_insp) Qty,
            t21.CALL_STATUS_DESC Status
    FROM T17_CALL_REGISTER t17
    LEFT JOIN T13_PO_MASTER t13 on t17.Case_No = t13.Case_No
    LEFT JOIN T18_CALL_DETAILS T18 ON T17.CASE_NO = T18.CASE_NO AND T17.CALL_RECV_DT = T18.CALL_RECV_DT AND T17.CALL_SNO = T18.CALL_SNO
    LEFT JOIN T21_CALL_STATUS_CODES t21 ON TRIM(t17.CALL_STATUS) = TRIM(t21.CALL_STATUS_CD)
    LEFT JOIN T09_IE t09 ON t17.IE_CD = t09.IE_CD
    LEFT JOIN T05_VENDOR t05 ON t17.MFG_CD = t05.VEND_CD    
    WHERE t13.RLY_CD = P_RLY_CD 
        AND t13.RLY_NONRLY = P_RLY_NONTYPE 
        AND t17.CALL_RECV_DT >= TO_DATE(P_FROMDATE, 'DD/MM/YYYY') 
        AND T17.CALL_RECV_DT <= TO_DATE(P_TODATE, 'DD/MM/YYYY') 
        AND t17.CALL_STATUS IN ('M','U','S','W')
        AND (P_PO_NO IS NULL OR (P_PO_NO IS NOT NULL AND t13.PO_NO LIKE '%'|| P_PO_NO ||'%'))
        AND (P_REGION IS NULL OR SUBSTR(T17.CASE_NO,1,1) = P_REGION)        
    GROUP BY t17.Case_No,
            t17.Call_Recv_Dt,
            t17.Call_Sno,
            t13.PO_NO,
            t13.PO_DT,
            t05.Vend_Name,
            T09.IE_NAME,
            T21.CALL_STATUS_DESC
    ORDER BY t17.Call_Recv_Dt DESC,t17.Case_No,t17.Call_Sno;
END GET_CLIENT_REGION_WISE_PENDINGINSPECTION_API;

create or replace PROCEDURE GET_CM_RECENTINSPECTION_API 
(
  P_VISITDATE IN VARCHAR2, 
  P_CO_CD IN NUMBER, 
  P_IE_CD IN NUMBER,
  P_RESULT_CURSOR OUT SYS_REFCURSOR 
) AS 
BEGIN
    OPEN P_RESULT_CURSOR FOR
    select  t17.Case_No,
            t17.Call_Recv_Dt,
            t17.Call_Sno,
            sum(t18.qty_to_insp) Qty,
            t13.PO_NO,
            t13.PO_DT,
            t09.IE_NAME,
            t05.VEND_NAME,
            t21.CALL_STATUS_DESC Status
    FROM t47_ie_work_plan t47
    JOIN T17_CALL_REGISTER t17 on t47.case_no = t17.Case_No and  t47.Call_Recv_Dt = t17.Call_Recv_Dt and t47.Call_Sno = t17.Call_Sno 
    LEFT JOIN T18_CALL_DETAILS t18 on t18.case_no = t17.Case_No and  t18.Call_Recv_Dt = t17.Call_Recv_Dt and t18.Call_Sno = t17.Call_Sno 
    LEFT JOIN T13_PO_MASTER t13 on t17.Case_No = t13.Case_No
    LEFT JOIN T09_IE t09 on t17.IE_CD = t09.IE_CD
    LEFT JOIN T05_VENDOR t05 on t17.mfg_cd = t05.VEND_CD
    LEFT JOIN T21_CALL_STATUS_CODES t21 on TRIM(t17.CALL_STATUS) = TRIM(t21.CALL_STATUS_CD)
    WHERE t47.VISIT_DT = TO_DATE(P_VISITDATE,'DD/MM/YYYY')--'06-11-23'
    AND t17.CO_CD = P_CO_CD --126
    AND (P_IE_CD = 0 OR (P_IE_CD <> 0 AND t17.IE_CD = P_IE_CD))
    GROUP BY t17.Case_No,
            t17.Call_Recv_Dt,
            t17.Call_Sno,
            t13.PO_NO,
            t13.PO_DT,
            t09.IE_NAME,
            t05.VEND_NAME,
            t21.CALL_STATUS_DESC
    ORDER BY t17.Case_No,
            t17.Call_Recv_Dt,
            t17.Call_Sno;
END GET_CM_RECENTINSPECTION_API;

create or replace PROCEDURE GET_IE_COMPLETED_INSPECTION_API 
(
  P_IECD IN NUMBER,
--  P_TODAYDATE IN VARCHAR2,
  P_RESULT_CURSOR OUT SYS_REFCURSOR 
) AS 
BEGIN
    OPEN P_RESULT_CURSOR FOR
    SELECT
        t17.Case_No,
        t17.Call_Recv_Dt,
        t17.Call_Sno,
        t13.PO_NO,
        t13.PO_DT,
        t05.Vend_Name,        
        SUM(t18.Qty_To_Insp) AS Qty,
        t21.Call_Status_Desc AS Status,
        t17.DATETIME
    FROM T17_CALL_REGISTER t17 --T47_IE_WORK_PLAN t47 JOIN T17_CALL_REGISTER t17        
--    ON t47.Case_No = t17.Case_No AND t47.Call_Recv_Dt = t17.Call_Recv_Dt AND t47.Call_Sno = t17.Call_Sno
    LEFT JOIN T18_CALL_DETAILS t18 ON t17.Case_No = t18.Case_No AND t17.Call_Recv_Dt = t18.Call_Recv_Dt AND t17.Call_Sno = t18.Call_Sno
    LEFT JOIN T13_PO_MASTER t13 ON t13.Case_No = t17.Case_No
    LEFT JOIN T05_VENDOR t05 ON t17.Mfg_Cd = t05.Vend_Cd
    LEFT JOIN T03_CITY t03 ON t05.Vend_City_Cd = t03.City_Cd
    LEFT JOIN T21_CALL_STATUS_CODES t21 ON TRIM(t17.CALL_STATUS) = TRIM(t21.CALL_STATUS_CD) --t17.Call_Status = t21.Call_Status_Cd
    WHERE t17.Ie_Cd = P_IECD --670
    AND t17.Call_Status IN ('A','R','C','G','B','T','PR','PRB','CB','RB')
--    AND t17.DATETIME = TO_DATE(P_TODAYDATE, 'DD/MM/YYYY')
    GROUP BY 
        t17.Case_No,
        t17.Call_Recv_Dt,
        t17.Call_Sno,
        t13.PO_NO,
        t13.PO_DT,
        t05.Vend_Name,    
        t21.Call_Status_Desc,
        t17.DATETIME
    ORDER BY
        t17.DATETIME DESC;
END GET_IE_COMPLETED_INSPECTION_API;

create or replace PROCEDURE GET_DATE_WISE_RECENT_INSPECTION_API 
(
  P_FROMDATE IN VARCHAR2, 
  P_TODATE IN VARCHAR2,
  P_IECD IN VARCHAR2,
  P_RESULT_CURSOR OUT SYS_REFCURSOR 
) AS 
BEGIN
    OPEN P_RESULT_CURSOR FOR
    SELECT  t47.Case_No,
            t47.Call_Recv_Dt,
            t47.Call_Sno,
            t13.PO_NO,
            t13.PO_DT,
            t05.Vend_Name,        
            SUM(t18.Qty_To_Insp) AS Qty,
            t21.Call_Status_Desc AS Status
    FROM T47_IE_WORK_PLAN t47
    JOIN T17_CALL_REGISTER t17 ON t47.Case_No = t17.Case_No AND t47.Call_Recv_Dt = t17.Call_Recv_Dt AND t47.Call_Sno = t17.Call_Sno
    LEFT JOIN T18_CALL_DETAILS t18 ON t47.Case_No = t18.Case_No AND t47.Call_Recv_Dt = t18.Call_Recv_Dt AND t47.Call_Sno = t18.Call_Sno
    LEFT JOIN T13_PO_MASTER t13 ON t13.Case_No = t47.Case_No
    LEFT JOIN T05_VENDOR t05 ON t47.Mfg_Cd = t05.Vend_Cd
    LEFT JOIN T03_CITY t03 ON t05.Vend_City_Cd = t03.City_Cd
    LEFT JOIN T21_CALL_STATUS_CODES t21 ON TRIM(t17.CALL_STATUS) = TRIM(t21.CALL_STATUS_CD) --t17.Call_Status = t21.Call_Status_Cd
    WHERE t47.Ie_Cd = P_IECD --670
    AND t47.Visit_Dt >= TO_DATE(P_FROMDATE, 'DD/MM/YYYY')
    AND t47.Visit_Dt <= TO_DATE(P_TODATE, 'DD/MM/YYYY')
    GROUP BY 
        t47.Case_No,
        t47.Call_Recv_Dt,
        t47.Call_Sno,
        t13.PO_NO,
        t13.PO_DT,
        t05.Vend_Name,    
        t21.Call_Status_Desc
    ORDER BY
        t05.Vend_Name,
        t47.Case_No,
        t47.Call_Recv_Dt,
        t47.Call_Sno;
END GET_DATE_WISE_RECENT_INSPECTION_API;

create or replace PROCEDURE GET_IE_PENDING_INSPECTION_API 
(
  P_IECD IN VARCHAR2 
, P_DATE IN VARCHAR2 
, P_RESULT_CURSOR OUT SYS_REFCURSOR 
) AS 
BEGIN
    OPEN P_RESULT_CURSOR FOR
    SELECT
        t17.Case_No,
        t17.Call_Recv_Dt,
        t17.Call_Sno,
        t05.Vend_Name,
        SUM(t18.Qty_To_Insp) as Qty,
        t13.PO_NO,
        t13.PO_DT,
        t13.RLY_NONRLY,
        t13.RLY_CD,
        NVL((
            select RAILWAY Client from T91_RAILWAYS where RLY_CD = t13.RLY_CD and t13.RLY_NONRLY = 'R' 
            union
            select distinct BPO_ORGN Client from T12_BILL_PAYING_OFFICER where BPO_RLY = t13.RLY_CD and t13.RLY_NONRLY <> 'R' and ROWNUM <= 1
        ),'Other')  Client_Name,
        CASE
            WHEN t17.Call_Status = 'M' THEN 'Pending'
            WHEN t17.Call_Status = 'U' THEN 'Under Lab Testing'
            WHEN t17.Call_Status = 'S' THEN 'Still Under Inspection'
            WHEN t17.Call_Status = 'G' THEN 'Stage Inspection'
            WHEN t17.Call_Status = 'W' THEN 'Withheld'
            ELSE ''
        END AS Status,
        t03.City
    FROM T17_CALL_REGISTER t17
    LEFT JOIN T13_PO_MASTER t13 ON t17.Case_No = t13.Case_No
    LEFT JOIN T18_CALL_DETAILS t18 ON t17.Case_No = t18.Case_No AND t17.Call_Recv_Dt = t18.Call_Recv_Dt AND t17.Call_Sno = t18.Call_Sno
    LEFT JOIN T05_VENDOR t05 ON t17.Mfg_Cd = t05.Vend_Cd
    LEFT JOIN T03_CITY t03 ON t05.Vend_City_Cd = t03.City_Cd
    WHERE
        SUBSTR(t17.Case_No, 1, 1) = 'N'
        AND t17.IE_CD = P_IECD --670
        AND t17.Call_Status IN ('M', 'U', 'S', 'W')
        AND NOT EXISTS (
            SELECT 1
            FROM T47_IE_WORK_PLAN t47
            WHERE
                t17.Case_No = t47.Case_No
                AND t17.Call_Recv_Dt = t47.Call_Recv_Dt
                AND t17.Call_Sno = t47.Call_Sno
                --AND t47.Visit_Dt = TO_DATE(P_DATE, 'DD/MM/YYYY')
                and TO_DATE(t47.VISIT_DT,'DD-MM-YY') = TO_DATE(P_DATE,'DD-MM-YY')
        )
    GROUP BY
        t17.Case_No,
        t17.Call_Recv_Dt,
        t17.Call_Sno,
        t05.Vend_Name,
        t13.PO_NO,
        t13.PO_DT,
        t13.RLY_NONRLY,
        t13.RLY_CD,
        t17.Call_Status,
        t03.City
    ORDER BY 
        t03.City;
END GET_IE_PENDING_INSPECTION_API;


create or replace PROCEDURE GET_IE_TODAY_INSPECTION_API 
(
  P_IECD IN VARCHAR2 
, P_TODAYDATE IN VARCHAR2 
, P_RESULT_CURSOR OUT SYS_REFCURSOR 
) AS 
BEGIN
    OPEN P_RESULT_CURSOR FOR
    SELECT
        t47.Case_No,
        t47.Call_Recv_Dt,
        t47.Call_Sno,
        t47.VISIT_DT AS PlanDt,
        t13.PO_NO,
        t13.PO_DT, 
        t13.RLY_NONRLY,
        t13.RLY_CD,
        t05.Vend_Name,
        NVL((
            select RAILWAY Client from T91_RAILWAYS where RLY_CD = t13.RLY_CD and t13.RLY_NONRLY = 'R' 
            union
            select distinct BPO_ORGN Client from T12_BILL_PAYING_OFFICER where BPO_RLY = t13.RLY_CD and t13.RLY_NONRLY <> 'R' and ROWNUM <= 1
        ),'Other')  Client_Name,
        SUM(t18.Qty_To_Insp) AS Qty,
        t21.Call_Status_Desc AS Status
    FROM T47_IE_WORK_PLAN t47
    JOIN T17_CALL_REGISTER t17 ON  t47.Case_No = t17.Case_No AND t47.Call_Recv_Dt = t17.Call_Recv_Dt AND t47.Call_Sno = t17.Call_Sno
    LEFT JOIN T18_CALL_DETAILS t18 ON t47.Case_No = t18.Case_No AND t47.Call_Recv_Dt = t18.Call_Recv_Dt AND t47.Call_Sno = t18.Call_Sno
    LEFT JOIN T13_PO_MASTER t13 ON t13.Case_No = t47.Case_No
    LEFT JOIN T05_VENDOR t05 ON t47.Mfg_Cd = t05.Vend_Cd
    LEFT JOIN T03_CITY t03 ON t05.Vend_City_Cd = t03.City_Cd
    LEFT JOIN T21_CALL_STATUS_CODES t21 ON TRIM(t17.CALL_STATUS) = TRIM(t21.CALL_STATUS_CD) --t17.Call_Status = t21.Call_Status_Cd
    WHERE t47.Ie_Cd = P_IECD --670
--    AND t47.Visit_Dt = TO_DATE(P_TODAYDATE, 'DD/MM/YYYY')
        AND TO_DATE(t47.VISIT_DT,'DD-MM-YY') = TO_DATE(P_TODAYDATE,'DD-MM-YY')
    GROUP BY 
        t47.Case_No,
        t47.Call_Recv_Dt,
        t47.Call_Sno,
        t47.VISIT_DT,
        t13.PO_NO,
        t13.PO_DT,
        t13.RLY_NONRLY,
        t13.RLY_CD,
        t05.Vend_Name,    
        t21.Call_Status_Desc
    ORDER BY
        t05.Vend_Name,
        t47.Case_No,
        t47.Call_Recv_Dt,
        t47.Call_Sno;
END GET_IE_TODAY_INSPECTION_API;


create or replace PROCEDURE GET_IE_TOMORROW_INSPECTION_API
(
  P_IECD IN VARCHAR2 
, P_TOMORROWDATE IN VARCHAR2 
, P_RESULT_CURSOR OUT SYS_REFCURSOR 
) AS 
BEGIN
    OPEN P_RESULT_CURSOR FOR
    SELECT
        t47.Case_No,
        t47.Call_Recv_Dt,
        t47.Call_Sno,
        t47.VISIT_DT AS PlanDt,
        t13.PO_NO,
        t13.PO_DT, --t13.PO_DT,
        t13.RLY_NONRLY,
        t13.RLY_CD,
        t05.Vend_Name, 
        NVL((
            select RAILWAY Client from T91_RAILWAYS where RLY_CD = t13.RLY_CD and t13.RLY_NONRLY = 'R' 
            union
            select distinct BPO_ORGN Client from T12_BILL_PAYING_OFFICER where BPO_RLY = t13.RLY_CD and t13.RLY_NONRLY <> 'R' and ROWNUM <= 1
        ),'Other')  Client_Name,
        SUM(t18.Qty_To_Insp) AS Qty,
        t21.Call_Status_Desc AS Status
    FROM T47_IE_WORK_PLAN t47
    JOIN T17_CALL_REGISTER t17 ON  t47.Case_No = t17.Case_No AND t47.Call_Recv_Dt = t17.Call_Recv_Dt AND t47.Call_Sno = t17.Call_Sno
    LEFT JOIN T18_CALL_DETAILS t18 ON t47.Case_No = t18.Case_No AND t47.Call_Recv_Dt = t18.Call_Recv_Dt AND t47.Call_Sno = t18.Call_Sno
    LEFT JOIN T13_PO_MASTER t13 ON t13.Case_No = t47.Case_No
    LEFT JOIN T05_VENDOR t05 ON t47.Mfg_Cd = t05.Vend_Cd
    LEFT JOIN T03_CITY t03 ON t05.Vend_City_Cd = t03.City_Cd
    LEFT JOIN T21_CALL_STATUS_CODES t21 ON TRIM(t17.CALL_STATUS) = TRIM(t21.CALL_STATUS_CD) --t17.Call_Status = t21.Call_Status_Cd
    WHERE t47.Ie_Cd = P_IECD --670
        --AND t47.Visit_Dt = TO_DATE(P_TOMORROWDATE, 'DD/MM/YYYY')
        AND TO_DATE(t47.VISIT_DT,'DD-MM-YY') = TO_DATE(P_TOMORROWDATE,'DD-MM-YY')
    GROUP BY 
        t47.Case_No,
        t47.Call_Recv_Dt,
        t47.Call_Sno,
        t47.VISIT_DT,
        t13.PO_NO,
        t13.PO_DT,
        t13.RLY_NONRLY,
        t13.RLY_CD,
        t05.Vend_Name,    
        t21.Call_Status_Desc
    ORDER BY
        t05.Vend_Name,
        t47.Case_No,
        t47.Call_Recv_Dt,
        t47.Call_Sno;
END GET_IE_TOMORROW_INSPECTION_API;