=========================================================================================================

ALTER TABLE USERROLES ADD USER_MASTER_ID	NUMBER(13,0)

=========================================================================================================


INSERT INTO ROLES(ROLENAME, ROLEDESCRIPTION, ISSYSADMIN, ISACTIVE, ISDELETED, CREATEDDATE, CREATEDBY, UPDATEDDATE, UPDATEDBY)
SELECT ROLENAME, ROLEDESCRIPTION, ISSYSADMIN, ISACTIVE, ISDELETED, CREATEDDATE, CREATEDBY, UPDATEDDATE, UPDATEDBY FROM IBSDEV.ROLES ORDER BY 1;
 
========================================================================================================= 

CREATE TABLE USER_MASTER (
  ID          NUMBER(13,0),
  USER_ID     VARCHAR2(100),
  NAME        VARCHAR2(100),
  USER_TYPE    VARCHAR2(20),
  CREATEDDATE TIMESTAMP(6) WITH TIME ZONE,
  CREATEDBY   NUMBER(6,0)
);


=========================================================================================================

CREATE SEQUENCE USER_MASTER_seq START WITH 1 INCREMENT BY 1 CACHE 20;
UPDATE USER_MASTER SET ID = USER_MASTER_SEQ.NEXTVAL;
ALTER TABLE USER_MASTER MODIFY ID NUMBER(13,0) DEFAULT USER_MASTER_SEQ.NEXTVAL;
ALTER TABLE USER_MASTER ADD CONSTRAINT USER_MASTER_pk  PRIMARY KEY (ID);

=========================================================================================================

CREATE TABLE USER_MASTER_TEMP (
  ROLEID          NUMBER(13,0),
  MASTERID          NUMBER(13,0)
);

=========================================================================================================

create or replace 
PROCEDURE USER_MASTER_INSERT
AS
BEGIN
  
  EXECUTE IMMEDIATE 'TRUNCATE TABLE USER_MASTER';
  
  EXECUTE IMMEDIATE 'ALTER SEQUENCE USER_MASTER_SEQ RESTART START WITH 1';
    
  INSERT INTO USER_MASTER(USER_ID, NAME, USER_TYPE, CREATEDDATE, CREATEDBY)
  SELECT USER_ID, USER_NAME, 'USERS', SYSDATE, 1 FROM T02_USERS WHERE MIGTYPE IS NULL;
  
  INSERT INTO USER_MASTER(USER_ID, NAME, USER_TYPE, CREATEDDATE, CREATEDBY)
  SELECT USER_ID, USER_NAME, 'USERS', SYSDATE, 1 FROM T02_USERS WHERE MIGTYPE = 'CM';

  INSERT INTO USER_MASTER(USER_ID, NAME, USER_TYPE, CREATEDDATE, CREATEDBY)
  SELECT IE_EMP_NO, IE_NAME, 'IE', SYSDATE, 1 FROM T09_IE WHERE IE_EMP_NO IS NOT NULL AND IE_STATUS IS NULL;

  INSERT INTO USER_MASTER(USER_ID, NAME, USER_TYPE, CREATEDDATE, CREATEDBY)
  SELECT VEND_CD, VEND_NAME, 'VENDOR', SYSDATE, 1 FROM T05_VENDOR;

  INSERT INTO USER_MASTER(USER_ID, NAME, USER_TYPE, CREATEDDATE, CREATEDBY)
  SELECT MOBILE, USER_NAME, 'CLIENT_LOGIN', SYSDATE, 1 FROM T32_CLIENT_LOGIN;

  INSERT INTO USER_MASTER(USER_ID, NAME, USER_TYPE, CREATEDDATE, CREATEDBY)
  SELECT MOBILE, LO_NAME, 'LO_LOGIN', SYSDATE, 1 FROM T105_LO_LOGIN;

  DBMS_OUTPUT.PUT_LINE('Data Inserted Successfully!');
  
  COMMIT; -- Commit the transaction
  
  EXCEPTION WHEN OTHERS THEN ROLLBACK;
  RAISE;
  
END;

=========================================================================================================

--Admin 

INSERT INTO USERROLES(ROLE_ID, USER_ID, CREATEDBY, CREATEDDATE, UPDATEDBY, UPDATEDDATE, ISDELETED, USER_MASTER_ID)
SELECT 1 ROLE_ID, U.USER_ID, 1 CREATEDBY, sysdate CREATEDDATE, NULL UPDATEDBY, NULL UPDATEDDATE, 0 ISDELETED, NULL USER_MASTER_ID
FROM T02_USERS U INNER JOIN USER_MASTER UM ON TRIM(UM.USER_ID) = TRIM(U.USER_ID) AND UM.USER_TYPE = 'USERS' WHERE AUTH_LEVL IN (1, 4);

--DEO-Call Entry

INSERT INTO USERROLES(ROLE_ID, USER_ID, CREATEDBY, CREATEDDATE, UPDATEDBY, UPDATEDDATE, ISDELETED, USER_MASTER_ID)
SELECT 8 ROLE_ID, U.USER_ID, 1 CREATEDBY, sysdate CREATEDDATE, NULL UPDATEDBY, NULL UPDATEDDATE, 0 ISDELETED, NULL USER_MASTER_ID
FROM T02_USERS U INNER JOIN USER_MASTER UM ON TRIM(UM.USER_ID) = TRIM(U.USER_ID) AND UM.USER_TYPE = 'USERS' WHERE AUTH_LEVL IN (2);

-- Lab Users

INSERT INTO USERROLES(ROLE_ID, USER_ID, CREATEDBY, CREATEDDATE, UPDATEDBY, UPDATEDDATE, ISDELETED, USER_MASTER_ID)
SELECT 16 ROLE_ID, U.USER_ID, 1 CREATEDBY, SYSDATE CREATEDDATE, NULL UPDATEDBY, NULL UPDATEDDATE, 0 ISDELETED, NULL USER_MASTER_ID
FROM T02_USERS U INNER JOIN USER_MASTER UM ON TRIM(UM.USER_ID) = TRIM(U.USER_ID) AND UM.USER_TYPE = 'USERS' WHERE AUTH_LEVL IN (5, 6, 7, 8);


-- Inspection Engineer (IE)

INSERT INTO USERROLES(ROLE_ID, USER_ID, CREATEDBY, CREATEDDATE, UPDATEDBY, UPDATEDDATE, ISDELETED, USER_MASTER_ID)
SELECT 14, USER_ID, 1, SYSDATE, NULL, NULL, 0, NULL FROM USER_MASTER WHERE USER_TYPE = 'IE';

--Liasioning Officer (LO)

INSERT INTO USERROLES(ROLE_ID, USER_ID, CREATEDBY, CREATEDDATE, UPDATEDBY, UPDATEDDATE, ISDELETED, USER_MASTER_ID)
SELECT 17, USER_ID, 1, SYSDATE, NULL, NULL, 0, NULL FROM USER_MASTER WHERE USER_TYPE = 'LO_LOGIN';

--Vendor

INSERT INTO USERROLES(ROLE_ID, USER_ID, CREATEDBY, CREATEDDATE, UPDATEDBY, UPDATEDDATE, ISDELETED, USER_MASTER_ID)
SELECT 18, USER_ID, 1, SYSDATE, NULL, NULL, 0, NULL FROM USER_MASTER WHERE USER_TYPE = 'VENDOR';

--Client

INSERT INTO USERROLES(ROLE_ID, USER_ID, CREATEDBY, CREATEDDATE, UPDATEDBY, UPDATEDDATE, ISDELETED, USER_MASTER_ID)
SELECT 7, USER_ID, 1, SYSDATE, NULL, NULL, 0, NULL FROM USER_MASTER WHERE USER_TYPE = 'CLIENT_LOGIN';

=========================================================================================================

INSERT INTO USER_MASTER_TEMP(ROLEID, MASTERID)
SELECT DISTINCT U.ID AS RoleID, M.ID AS MasterID
FROM USERROLES U
INNER JOIN USER_MASTER M ON TRIM(M.USER_ID) = TRIM(U.USER_ID);

=========================================================================================================

create or replace 
PROCEDURE UPDATE_RECORDS_USER_MASTER_ID
AS
  -- Declare a cursor to select records for update
  V_ROLEID   NUMBER (13, 0);
  V_MASTERID NUMBER (13, 0);
  
  CURSOR RECORDS_CURSOR
  IS
    SELECT ROLEID, MASTERID FROM USER_MASTER_TEMP;
BEGIN
  -- Open the cursor
  OPEN RECORDS_CURSOR;
   
  -- Fetch and update records in a loop
  LOOP FETCH RECORDS_CURSOR INTO V_ROLEID, V_MASTERID;
  
  EXIT WHEN RECORDS_CURSOR%NOTFOUND;
  
  UPDATE USERROLES SET USER_MASTER_ID = V_MASTERID WHERE ID = V_ROLEID;
  
  END LOOP;
  -- Close the cursor
  CLOSE records_cursor;
  -- Commit the changes
  COMMIT;
END;