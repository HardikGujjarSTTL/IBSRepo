
Scaffold-DbContext "Data Source=(DESCRIPTION=(ADDRESS_LIST= (ADDRESS=(COMMUNITY=tcpcom.world)(PROTOCOL=tcp)(HOST=192.168.0.215)(PORT=1521)))(CONNECT_DATA=(SID=orcl))); User ID=IBSDev;Password=IBSDev" Oracle.EntityFrameworkCore -OutputDir DataAccess -Force

=============================================================================================================================================
By Neha Gehlot
=============================================================================================================================================
create or replace PROCEDURE GetConsigneeDetails (
    p_case_no IN VARCHAR2,
    p_bk_no IN VARCHAR2,
    p_set_no IN VARCHAR2,
    p_result_cursor OUT SYS_REFCURSOR
)
IS
BEGIN
    OPEN p_result_cursor FOR
  SELECT 
           TRIM(t13.PO_NO) || '   dated- ' || TO_CHAR(t13.PO_DT, 'dd/mm/yyyy') AS PO,
           t13.RLY_CD,
           t20.CONSIGNEE_CD,
           TO_CHAR(t20.IC_DT, 'dd/mm/yyyy') AS IC_DT,
           v06.CONSIGNEE,
           t13.VEND_CD,
           v05.VENDOR,
           t20.case_no,
           t20.bk_no,
           t20.set_no,
           t20.ic_no,
           t09.ie_name,
           v05.vendor,
           t13.region_code,
           t08.co_name
    FROM T13_PO_MASTER t13
    --JOIN t40_consignee_complaints t40 ON t09.IE_CD = t40.ie_cd
    JOIN T20_IC t20 ON t13.CASE_NO = t20.CASE_NO
    JOin T09_IE t09 ON t20.ie_cd = t09.ie_cd
    JOIN V06_CONSIGNEE v06 ON t20.CONSIGNEE_CD = v06.CONSIGNEE_CD
    JOIN V05_VENDOR v05 ON t13.VEND_CD = v05.VEND_CD
    JOIN T08_IE_CONTROLL_OFFICER t08 ON t20.co_cd = t08.co_cd
    WHERE t20.CASE_NO = p_case_no
      AND t20.BK_NO = p_bk_no
      AND t20.SET_NO = p_set_no;

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
END;

===============================================================================================================================================
create or replace PROCEDURE GetFilteredConsigneeComplaints (
    p_po_no_param IN VARCHAR2,
     p_po_date_param IN VARCHAR2,
    p_result_cursor OUT SYS_REFCURSOR
)
IS
BEGIN
    OPEN p_result_cursor FOR
    SELECT CASE_NO, PO_NO, PO_DT, RLY_CD, VEND_NAME, CONSIGNEE, BK_NO, SET_NO, IC_NO, IC_DATE
    FROM (
        SELECT m.CASE_NO, m.PO_NO, m.PO_DT, (DECODE(m.RLY_NONRLY, 'R', 'Railway', 'P', 'Private', 'S', 'State Government', 'F', 'Foreign Railways', 'U', 'PSU') || '(' || m.RLY_CD || ')') RLY_CD,
               (v.VEND_NAME || '(' || NVL2(t.LOCATION, t.LOCATION || ' : ' || t.CITY, t.CITY) || ')') VEND_NAME, c.CONSIGNEE, i.BK_NO, i.SET_NO, i.IC_NO, i.IC_DT IC_DATE
        FROM T13_PO_MASTER m, T05_VENDOR v, V06_CONSIGNEE c, T03_CITY t, T20_IC i
        WHERE m.VEND_CD = v.VEND_CD AND v.VEND_CITY_CD = t.CITY_CD
        AND i.CONSIGNEE_CD = c.CONSIGNEE_CD(+) AND m.CASE_NO = i.CASE_NO
        AND (p_po_no_param IS NULL OR UPPER(TRIM(PO_NO)) LIKE '%' || UPPER(TRIM(p_po_no_param)) || '%')
          --AND (p_po_date_param IS NULL OR TO_DATE(TO_CHAR(PO_DT, 'YYYY-MM-DD'), 'YYYY-MM-DD') = p_po_date_param)
        AND (p_po_date_param IS NULL OR m.PO_DT = TO_DATE(p_po_date_param, 'dd-MM-yy'))
        -- Adjust the date comparison
        MINUS
        SELECT m.CASE_NO, m.PO_NO, m.PO_DT, (DECODE(m.RLY_NONRLY, 'R', 'Railway', 'P', 'Private', 'S', 'State Government', 'F', 'Foreign Railways', 'U', 'PSU') || '(' || m.RLY_CD || ')') RLY_CD,
               (v.VEND_NAME || '(' || NVL2(t.LOCATION, t.LOCATION || ' : ' || t.CITY, t.CITY) || ')') VEND_NAME, c.CONSIGNEE, i.BK_NO, i.SET_NO, i.IC_NO, i.IC_DT AS IC_DATE
        FROM T13_PO_MASTER m, T05_VENDOR v, V06_CONSIGNEE c, T03_CITY t, T20_IC i, T40_CONSIGNEE_COMPLAINTS comp
        WHERE m.VEND_CD = v.VEND_CD AND v.VEND_CITY_CD = t.CITY_CD
        AND i.CONSIGNEE_CD = c.CONSIGNEE_CD(+) AND m.CASE_NO = i.CASE_NO
        AND i.CASE_NO = comp.CASE_NO AND i.BK_NO = comp.BK_NO AND i.SET_NO = comp.SET_NO
        AND (p_po_no_param IS NULL OR UPPER(TRIM(PO_NO)) LIKE '%' || UPPER(TRIM(p_po_no_param)) || '%')
        AND (p_po_date_param IS NULL OR m.PO_DT = TO_DATE(p_po_date_param, 'dd-MM-yy'))
         --AND (p_po_date_param IS NULL OR TO_DATE(TO_CHAR(PO_DT, 'YYYY-MM-DD'), 'YYYY-MM-DD') = p_po_date_param)
         
    )
    ORDER BY CASE_NO, BK_NO, SET_NO,IC_DATE;
END;

===============================================================================================================================================

create or replace PROCEDURE GetFilterNCR(
    ---p_case_no IN VARCHAR2,
    --p_nc_no IN VARCHAR2,
    p_lstIE_no IN VARCHAR2,
    p_frmDt_dt IN DATE DEFAULT NULL,
    p_toDt_dt IN DATE DEFAULT NULL,
    p_result_cursor OUT SYS_REFCURSOR
)
IS
BEGIN
    OPEN p_result_cursor FOR
    SELECT
        T41.NC_NO AS NC_NO,
        T20.CASE_NO AS CASE_NO,
        T20.BK_NO AS BK_NO,
        T20.SET_NO AS SET_NO,
        TO_CHAR(T17.CALL_RECV_DT, 'dd/mm/yyyy') AS CALL_RECV_DATE,
        T17.CALL_SNO AS CALL_SNO,
        T09.IE_SNAME AS IE_SNAME,
        (T06.CONSIGNEE_CD || '-' || NVL2(TRIM(T06.CONSIGNEE_DESIG), TRIM(T06.CONSIGNEE_DESIG) || '/', '') || NVL2(TRIM(T06.CONSIGNEE_DEPT), TRIM(T06.CONSIGNEE_DEPT) || '/', '') || NVL2(TRIM(T06.CONSIGNEE_FIRM), TRIM(T06.CONSIGNEE_FIRM) || '/', '') || NVL2(TRIM(T06.CONSIGNEE_ADD1), TRIM(T06.CONSIGNEE_ADD1) || '/', '') || NVL2(TRIM(T03.LOCATION), TRIM(T03.LOCATION) || ' : ' || TRIM(T03.CITY), TRIM(T03.CITY))) AS CONSIGNEE
       FROM
        T17_CALL_REGISTER T17
        JOIN T20_IC T20 ON T20.CASE_NO = T17.CASE_NO AND T20.CALL_RECV_DT = T17.CALL_RECV_DT AND T20.CALL_SNO = T17.CALL_SNO
        JOIN T09_IE T09 ON T17.IE_CD = T09.IE_CD
        JOIN T06_CONSIGNEE T06 ON T20.CONSIGNEE_CD = T06.CONSIGNEE_CD
        JOIN T03_CITY T03 ON T06.CONSIGNEE_CITY = T03.CITY_CD
        JOIN T41_NC_MASTER T41 ON T20.BK_NO = T41.BK_NO AND T20.SET_NO = T41.SET_NO AND T20.CONSIGNEE_CD = T41.CONSIGNEE_CD
    WHERE
       -- (p_case_no IS NULL OR UPPER(T17.CASE_NO) = UPPER(p_case_no))
        --AND (p_nc_no IS NULL OR UPPER(T41.NC_NO) = UPPER(p_nc_no))
         (p_lstIE_no IS NULL OR UPPER(T17.IE_CD) = UPPER(p_lstIE_no))
        AND (p_frmDt_dt IS NULL OR p_toDt_dt IS NULL OR (T17.CALL_RECV_DT BETWEEN p_frmDt_dt AND p_toDt_dt))
    ORDER BY CALL_RECV_DATE, CASE_NO, BK_NO, SET_NO;

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
END GetFilterNCR;
===============================================================================================================================================

create or replace PROCEDURE GetForAction_M_NCR (
    p_nc_no IN VARCHAR2,
    p_result_cursor OUT SYS_REFCURSOR
)
IS
BEGIN
    OPEN p_result_cursor FOR
    SELECT
        T41.NC_NO,
        TO_CHAR(T41.NC_DT, 'dd/mm/yyyy') AS NC_DATE,
        T41.CONSIGNEE_CD,
        (TRIM(T06.CONSIGNEE_DESIG) || '/' || TRIM(T06.CONSIGNEE_DEPT) || '/' || TRIM(T06.CONSIGNEE_FIRM) || '/' || T031.CITY) AS CONSIGNEE,
        T05.VEND_NAME || ',' || T03.CITY AS VENDOR,
        T41.VEND_CD,
        T41.PO_NO,
        TO_CHAR(T41.PO_DT, 'dd/mm/yyyy') AS PO_DT,
        T41.BK_NO,
        T41.SET_NO,
        T41.CASE_NO,
        TO_CHAR(T41.CALL_RECV_DT, 'dd/mm/yyyy') AS CALL_RECV_DT,
        T41.CALL_SNO,
        T41.IE_CD,
        T41.IC_NO,
        TO_CHAR(T41.IC_DT, 'dd/mm/yyyy') AS IC_DATE,
        T09.IE_NAME,
        T41.ITEM_DESC_PO,
        T41.ITEM_SRNO_PO,
        T09.user_id,
        T41.QTY_PASSED,
        t41.region_code
    FROM
        T41_NC_MASTER T41
        JOIN T05_VENDOR T05 ON T41.VEND_CD = T05.VEND_CD
        JOIN T03_CITY T03 ON T05.VEND_CITY_CD = T03.CITY_CD
        JOIN T06_CONSIGNEE T06 ON T41.CONSIGNEE_CD = T06.CONSIGNEE_CD
        JOIN T03_CITY T031 ON T06.CONSIGNEE_CITY = T031.CITY_CD
        JOIN T09_IE T09 ON T41.IE_CD = T09.IE_CD
    WHERE
        T41.NC_NO = p_nc_no;

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
END GetForAction_M_NCR;

===============================================================================================================================================

create or replace PROCEDURE GetForAction_A_NCR (
    p_case_no IN VARCHAR2,
    p_bk_no IN VARCHAR2,
    p_set_no IN VARCHAR2,
    p_result_cursor OUT SYS_REFCURSOR
)
IS
BEGIN
    OPEN p_result_cursor FOR
    SELECT
        T06.CONSIGNEE_CD,
        (TRIM(T06.CONSIGNEE_DESIG) || '/' || TRIM(T06.CONSIGNEE_DEPT) || '/' || TRIM(T06.CONSIGNEE_FIRM) || '/' || T031.CITY) AS CONSIGNEE,
        T05.VEND_NAME || ',' || T03.CITY AS VENDOR,
        T13.VEND_CD,
        T13.PO_NO,
        TO_CHAR(T13.PO_DT, 'dd/mm/yyyy') AS PO_DT,
        T20.BK_NO,
        T20.SET_NO,
        T20.CASE_NO,
        TO_CHAR(T20.CALL_RECV_DT, 'dd/mm/yyyy') AS CALL_RECV_DT,
        T20.CALL_SNO,
        T20.IE_CD,
        T20.IC_NO,
        TO_CHAR(T20.IC_DT, 'dd/mm/yyyy') AS IC_DATE,
        T09.IE_NAME,
        T09.user_id,
        t17.region_code
    FROM
        T13_PO_MASTER T13
        JOIN T17_CALL_REGISTER T17 ON T13.CASE_NO = T17.CASE_NO
        JOIN T20_IC T20 ON T20.CASE_NO = T17.CASE_NO AND T20.CALL_RECV_DT = T17.CALL_RECV_DT AND T20.CALL_SNO = T17.CALL_SNO
        JOIN T05_VENDOR T05 ON T13.VEND_CD = T05.VEND_CD
        JOIN T03_CITY T03 ON T05.VEND_CITY_CD = T03.CITY_CD
        JOIN T06_CONSIGNEE T06 ON T20.CONSIGNEE_CD = T06.CONSIGNEE_CD
        JOIN T03_CITY T031 ON T06.CONSIGNEE_CITY = T031.CITY_CD
        JOIN T09_IE T09 ON T20.IE_CD = T09.IE_CD
    WHERE
        T20.CASE_NO = p_case_no
        AND T20.BK_NO = p_bk_no
        AND T20.SET_NO = p_set_no;

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
END GetForAction_A_NCR;

=====================================================================================================================================================================

create or replace PROCEDURE GET_NCR_Email
(
    p_NC_NO IN VARCHAR2,
    p_cursor OUT SYS_REFCURSOR
)
AS
BEGIN
    OPEN p_cursor FOR
    SELECT
        T41.IC_NO,
        TO_CHAR(T41.IC_DT, 'dd/mm/yyyy') AS IC_DATE,
        T41.NC_NO,
        TO_CHAR(NC_DT, 'dd/mm/yyyy') AS NC_DT,
        T41.CASE_NO,
        T41.BK_NO,
        T41.SET_NO,
        T41.PO_NO,
        TO_CHAR(T41.PO_DT, 'dd/mm/yyyy') AS PO_DATE,
        T41.ITEM_SRNO_PO,
        T41.ITEM_DESC_PO,
        T41.IE_CD,
        T41.USER_ID,
        T42.NC_CD,
        T42.IE_ACTION1,
        CO_FINAL_REMARKS1,
        NVL2(
            T42.NC_DESC_OTHERS,
            T69.NC_DESC || '-' || T42.NC_DESC_OTHERS,
            T69.NC_DESC
        ) AS NC_DESC,
        T69.NC_CLASS,
        T09.IE_NAME,
        T08.CO_NAME,
        T09.IE_EMAIL || ';' || T08.CO_EMAIL AS EMAIL
    FROM
        T41_NC_MASTER T41,
        T42_NC_DETAIL T42,
        T69_NC_CODES T69,
        T09_IE T09,
        T08_IE_CONTROLL_OFFICER T08
    WHERE
        T41.NC_NO = T42.NC_NO
        AND T42.NC_CD = T69.NC_CD
        AND T41.IE_CD = T09.IE_CD
        AND T41.CO_CD = T08.CO_CD
        AND T41.NC_NO = p_NC_NO;
END GET_NCR_Email;

==========================================================================================================================================================

create or replace PROCEDURE GENERATE_NC_NO_New(
    IN_REGION_CD IN VARCHAR2,
    IN_NC_DT IN VARCHAR2,
    p_result_cursor OUT SYS_REFCURSOR
) AS
    w_ctr VARCHAR2(100) := NULL;
    w_sno CHAR(100) := NULL;
    W_ERR_CD NUMBER := -1;
    w_NC_NO VARCHAR2(500) := NULL;
    my_exception EXCEPTION;

BEGIN
    w_ctr := IN_REGION_CD || SUBSTR(IN_NC_DT, 9, 2);

    -- Get the next sequence number for the given region and NC_DT


    SELECT lpad(nvl(max(to_number(nvl(substr(NC_NO,5,8),0))),0)+1,4,'0')
    INTO w_sno
    FROM T41_NC_MASTER
    WHERE SUBSTR(NC_NO, 1, 3) = w_ctr;
    w_NC_NO := TRIM(w_NC_NO);
    -- Construct the generated case number
    w_NC_NO := w_ctr || '-' || w_sno;
   
    IF LENGTH(w_NC_NO) <> 8 THEN
        W_ERR_CD := -2;
        
    END IF;

    -- Open the ref cursor and fetch the result set
    OPEN p_result_cursor FOR
    SELECT w_NC_NO AS w_NC_NO, W_ERR_CD AS W_ERR_CD FROM DUAL;


END;

===================================================================================================================================
ALTER TABLE T41_NC_MASTER 
    MODIFY ITEM_SRNO_PO  NUMBER(6,0);
    
ALTER TABLE T41_NC_MASTER 
    MODIFY IE_CD  NUMBER(6,0);
    
ALTER TABLE T41_NC_MASTER 
    MODIFY CO_CD  NUMBER(6,0);

 ALTER TABLE TEMP_ONLINE_COMPLAINTS ADD (
  CONSTRAINT TEMP_ONLINE_COMPLAINTS_pk PRIMARY KEY (TEMP_COMPLAINT_ID));

  INSERT INTO menu_master (ID, parentid, controllername, actionname, title, menudescription, role_id, iconcssclass, isactive, sortorder, iconpath)
VALUES (163, 98, 'ComplaintApproval', 'Index', 'Online Complaint Approval', '', '', '', 1, 12, '');

ALTER TABLE temp_online_complaints 
    MODIFY IE_CD  NUMBER(6,0);
    
ALTER TABLE temp_online_complaints 
    MODIFY CO_CD  NUMBER(6,0);

    ALTER TABLE T40_Consignee_Complaints 
    MODIFY IE_CD  NUMBER(6,0);
    
    ALTER TABLE T40_Consignee_Complaints 
    MODIFY IE_CO_CD  NUMBER(6,0);
    
    ALTER TABLE T40_Consignee_Complaints 
    MODIFY UOM_CD  NUMBER(6,0);
    
    ALTER TABLE T40_Consignee_Complaints 
    MODIFY JI_IE_CD  NUMBER(6,0);

    ALTER TABLE t32_client_login
    ADD ID NUMBER(6,0);

    MERGE INTO T32_CLIENT_LOGIN t
    USING (
      SELECT ROW_NUMBER() OVER (ORDER BY user_name) AS RowNo, mobile
      FROM T32_CLIENT_LOGIN
    ) subquery
    ON (t.mobile = subquery.mobile)
    WHEN MATCHED THEN
      UPDATE SET t.id = subquery.RowNo;


========================================================================================================================================

create or replace PROCEDURE GENERATE_TEMP_COMPLAINT_NO(
    IN_TEMP_COMPLAINT_DT IN char,
    p_result_cursor OUT SYS_REFCURSOR
) IS
	w_ctr char(2) :=null;
	w_sno char(5) :=null;
     W_ERR_CD NUMBER := -1;
    w_compid varchar2(500) :=null;
	my_exception exception;
BEGIN
	W_ERR_CD := -1;
	---
	if to_number(substr(IN_TEMP_COMPLAINT_DT,4,2)) > 3 then
	   w_ctr := lpad(substr(IN_TEMP_COMPLAINT_DT,9,2),2,'0');
	else
	   w_ctr := lpad(substr(IN_TEMP_COMPLAINT_DT,9,2)-1,2,'0');
	end if;
	Select lpad(nvl(max(to_number(nvl(trim(substr(TEMP_COMPLAINT_ID,4,5)),'0'))),0)+1,5,'0') into w_sno
	From TEMP_ONLINE_COMPLAINTS where substr(TEMP_COMPLAINT_ID,1,2)=w_ctr;
	---
	w_compid:=trim(w_ctr||'-'||w_sno);
	if length(w_compid) <> 8 then
	   W_ERR_CD := -2;
	end if;
	---
	OPEN p_result_cursor FOR
 SELECT w_compid AS w_compid, W_ERR_CD AS W_ERR_CD FROM DUAL;
END;

=====================================================================================================================================

create or replace PROCEDURE GET_REJECTIONCOMPLAINT_DETAILS
(
    p_CaseNo IN VARCHAR2,
    p_BkNo IN VARCHAR2,
    p_SetNo IN VARCHAR2,
    p_TempComplaintId IN VARCHAR2,
    p_ResultCursor OUT SYS_REFCURSOR
)
IS
BEGIN
    OPEN p_ResultCursor FOR
        SELECT
            P.CASE_NO,
            P.PO_NO,
            TO_CHAR(P.PO_DT, 'dd/mm/yyyy') AS PO_DT,
            V.VENDOR,
            T20.BK_NO,
            T09.IE_NAME,
            T20.SET_NO,
            T20.IC_NO,
            TO_CHAR(T20.IC_DT, 'dd/mm/yyyy') AS IC_DATE,
            V06.CONSIGNEE,
            T.TEMP_COMPLAINT_ID,
            TO_CHAR(T.TEMP_COMPLAINT_DT, 'dd/mm/yyyy') AS TEMP_COMPLAINT_DATE,
            T.ITEM_DESC,
            T.QTY_OFFERED,
            T.QTY_REJECTED,
            T.REJECTION_VALUE,
            T.REJECTION_REASON,
            T.TEMP_COMPLAINT_ID
        FROM
            V05_VENDOR V,
            T13_PO_MASTER P,
            T20_IC T20,
            TEMP_ONLINE_COMPLAINTS T,
            V06_CONSIGNEE V06,
            T09_IE T09
        WHERE
            T.CASE_NO = P.CASE_NO
            AND P.VEND_CD = V.VEND_CD
            AND T20.CONSIGNEE_CD = V06.CONSIGNEE_CD
            AND T.BK_NO = T20.BK_NO
            AND T.SET_NO = T20.SET_NO
            AND T.CASE_NO = T20.CASE_NO
            AND T20.IE_CD = T09.IE_CD
            AND T.CASE_NO = p_CaseNo
            AND T.BK_NO = p_BkNo
            AND T.SET_NO = p_SetNo
            AND T.TEMP_COMPLAINT_ID = p_TempComplaintId;

    -- You can return the result cursor to the calling code
END GET_REJECTIONCOMPLAINT_DETAILS;

====================================================================================================================================

create or replace PROCEDURE GENERATE_JI_SNO(
   IN_INSP_REGION IN varchar2,
   IN_JI_REGION IN varchar2,
   IN_COMPLAINT_DT IN varchar2,
   p_result_cursor OUT SYS_REFCURSOR
) IS
	w_ctr char(9) :=null;
	w_sno char(4) :=null;
        W_ERR_CD NUMBER := -1;
        w_jisno varchar2(13) :=null;
	my_exception exception;
BEGIN
	W_ERR_CD := -1;
	---
	if to_number(substr(IN_COMPLAINT_DT,4,2)) > 3 then
	   w_ctr := IN_INSP_REGION||IN_JI_REGION||'/'||lpad(substr(IN_COMPLAINT_DT,9,2),2,'0')||'-'||lpad(substr(IN_COMPLAINT_DT,9,2)+1,2,'0')||'/';
	else
	   w_ctr := IN_INSP_REGION||IN_JI_REGION||'/'||lpad(substr(IN_COMPLAINT_DT,9,2)-1,2,'0')||'-'||lpad(substr(IN_COMPLAINT_DT,9,2),2,'0')||'/';
	end if;
	Select lpad(nvl(max(to_number(nvl(trim(substr(JI_SNO,10,4)),'0'))),0)+1,4,'0') into w_sno
	From T40_CONSIGNEE_COMPLAINTS where substr(JI_SNO,1,9)=w_ctr;
	---
	w_jisno := trim(w_ctr||w_sno);
	if length(w_jisno) <> 13 then
	    W_ERR_CD := -2;
	    raise my_exception;
	end if;
	---
	OPEN p_result_cursor FOR
 SELECT w_jisno AS w_jisno, W_ERR_CD AS W_ERR_CD FROM DUAL;
END;

===================================================================================================================================================

create or replace PROCEDURE GENERATE_COMPLAINT_NO(
      IN_REGION_CD IN varchar2,
      IN_COMPLAINT_DT IN varchar2,
     p_result_cursor OUT SYS_REFCURSOR
) IS
	w_ctr char(8) :=null;
	w_sno char(4) :=null;
	w_compid varchar2(12) :=null;   
	OUT_ERR_CD NUMBER := -1;
	my_exception exception;
BEGIN
	OUT_ERR_CD := -1;
	---
	if to_number(substr(IN_COMPLAINT_DT,4,2)) > 3 then
	   w_ctr := IN_REGION_CD||'/'||lpad(substr(IN_COMPLAINT_DT,9,2),2,'0')||'-'||lpad(substr(IN_COMPLAINT_DT,9,2)+1,2,'0')||'/';
	else
	   w_ctr :=   IN_REGION_CD||'/'||lpad(substr(IN_COMPLAINT_DT,9,2)-1,2,'0')||'-'||lpad(substr(IN_COMPLAINT_DT,9,2),2,'0')||'/';
	end if;
	Select lpad(nvl(max(to_number(nvl(trim(substr(COMPLAINT_ID,9,4)),'0'))),0)+1,4,'0') into w_sno
	From T40_CONSIGNEE_COMPLAINTS where substr(COMPLAINT_ID,1,8)=w_ctr;
   	---
	w_compid:=trim(w_ctr||w_sno);
	if length(w_compid) <> 12 then
	    OUT_ERR_CD := -2;
	    raise my_exception;
	end if;
	---
	OPEN p_result_cursor FOR
 SELECT w_compid AS w_compid, OUT_ERR_CD AS OUT_ERR_CD FROM DUAL;

END;

======================================================================================================================================

create or replace PROCEDURE GetConsigneeComplaint (
    p_PONo       VARCHAR2,
    p_PODate     VARCHAR2,
    p_ResultSet  OUT SYS_REFCURSOR
)
AS
BEGIN
    OPEN p_ResultSet FOR
    SELECT
        c.COMPLAINT_ID,
        c.JI_SNO,
        c.CASE_NO,
        c.BK_NO,
        c.SET_NO,
        m.PO_NO,
        m.PO_DT,
        c.IC_NO,
        c.IC_DT,
        c.REJ_MEMO_NO,
        c.REJ_MEMO_DT
    FROM T13_PO_MASTER m
    JOIN V40_CONSIGNEE_COMPLAINTS c ON m.CASE_NO = c.CASE_NO
    WHERE
        UPPER(TRIM(m.PO_NO)) LIKE UPPER(TRIM('%' || p_PONo || '%'))
        AND TO_CHAR(m.PO_DT, 'dd-mm-yyyy') = p_PODate
    ORDER BY c.CASE_NO, c.COMPLAINT_ID ASC;
END GetConsigneeComplaint;

====================================================================================================================================
create or replace PROCEDURE GetConsigneeComplaintDetails (
    p_complaint_id IN VARCHAR2,
    p_result OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_result FOR
         SELECT
      to_char(c.COMPLAINT_DT, 'dd/mm/yyyy') AS COMPLAINT_DATE,c.REJ_MEMO_NO,c.REJ_MEMO_DT,c.CASE_NO,c.BK_NO,c.SET_NO,trim(m.PO_NO) || ' dated - ' || to_char(m.PO_DT, 'dd/mm/yyyy') AS PO,
      m.RLY_CD,to_char(d.IC_DT, 'dd/mm/yyyy') AS IC_DT,m.region_code,c.IE_CO_CD,c.COMP_RECV_REGION,f.VEND_NAME,f.vend_cd,c.ITEM_SRNO_PO,c.ITEM_DESC,c.QTY_OFFERED,c.QTY_REJECTED,c.UOM_CD,m.USER_ID,
      c.RATE,c.REJECTION_VALUE,c.ROOT_CAUSE_ANALYSIS,c.TECH_REF,c.CHKSHEET_STATUS,c.ANY_OTHER,c.CAPA_STATUS,c.DANDAR_STATUS,c.REJECTION_REASON,c.STATUS,c.JI_REQUIRED,
      c.JI_REGION,c.NO_JI_REASON,c.JI_IE_CD,c.IE_CD,c.CONSIGNEE_CD,c.REMARKS,c.JI_SNO, to_char(c.JI_FIX_DT, 'dd/mm/yyyy') AS JI_FIX_DT,to_char(c.JI_DT, 'dd/mm/yyyy') AS JI_DT,e.consignee,um.UOM_CD,um.UOM_S_DESC,
      c.DEFECT_CD,c.JI_STATUS_CD,to_char(c.CONCLUSION_DT, 'dd/mm/yyyy') AS CONCLUSION_DT,c.ACTION_PROPOSED,to_char(c.ACTION_PROPOSED_DT, 'dd/mm/yyyy') AS ACTION_PROPOSED_DT,
      c.PENALTY_TYPE,to_char(c.PENALTY_DT, 'dd/mm/yyyy') AS PENALTY_DT,c.ACTION
    FROM T13_PO_MASTER m
    JOIN T20_IC d ON m.CASE_NO = d.CASE_NO
    JOIN T40_CONSIGNEE_COMPLAINTS c ON d.CASE_NO = c.CASE_NO
    JOIN V06_CONSIGNEE e ON c.CONSIGNEE_CD = e.CONSIGNEE_CD  
    JOIN T05_VENDOR f ON c.VEND_CD = f.VEND_CD  
    JOIN T04_UOM um ON c.uom_cd = um.uom_cd
        WHERE
            COMPLAINT_ID = p_complaint_id;
END GetConsigneeComplaintDetails;

==============================================================================================================================================

create or replace PROCEDURE CMWiseICDetail(
   p_region VARCHAR2,
   p_start_date VARCHAR2,
   p_end_date VARCHAR2,
   p_result OUT SYS_REFCURSOR
)
AS
BEGIN
 OPEN p_result FOR
      SELECT TO_CHAR(T17.CALL_STATUS_DT, 'dd/mm/yyyy') AS IC_ISSUED_DT,
                     T17.CASE_NO,
                      T17.BK_NO,
                      T17.SET_NO,
                      T09.IE_NAME,
                      T08.CO_NAME
                 FROM T17_CALL_REGISTER T17
                      LEFT JOIN T30_IC_RECEIVED T30 ON (T17.BK_NO = T30.BK_NO AND T17.SET_NO = T30.SET_NO AND T17.REGION_CODE = T30.REGION),
                      T09_IE T09,
                      T08_IE_CONTROLL_OFFICER T08
                WHERE (T30.BK_NO IS NULL AND T30.SET_NO IS NULL AND T30.REGION IS NULL)
                  AND T17.IE_CD = T09.IE_CD
                  AND T09.IE_CO_CD = T08.CO_CD
                  AND T17.CALL_STATUS IN ('A', 'R')
                 AND SUBSTR(T17.CASE_NO, 1, 1) = SUBSTR(p_region, 1, 1)
                  AND (T17.CALL_STATUS_DT BETWEEN TO_DATE(p_start_date, 'dd/mm/yyyy') AND TO_DATE(p_end_date, 'dd/mm/yyyy'));
                 
END;

=============================================================================================================================================

create or replace PROCEDURE GetClientInfo(
    p_clientname IN VARCHAR2,
     p_ResultSet  OUT SYS_REFCURSOR
)
AS
BEGIN
    OPEN p_ResultSet FOR
        select 
        ID as ClientId,USER_NAME,ORGANISATION,DESIGNATION,MOBILE,EMAIL,UNIT,ORGN_TYPE
        from t32_client_login
        WHERE  isdeleted = 0 OR isdeleted IS NULL
          AND UPPER(TRIM(USER_NAME)) LIKE UPPER(TRIM(p_clientname)) || '%';
END GetClientInfo;



