
Scaffold-DbContext "Data Source=(DESCRIPTION=(ADDRESS_LIST= (ADDRESS=(COMMUNITY=tcpcom.world)(PROTOCOL=tcp)(HOST=192.168.0.215)(PORT=1521)))(CONNECT_DATA=(SID=orcl))); User ID=IBSDev;Password=IBSDev" Oracle.EntityFrameworkCore -OutputDir DataAccess -Force

=============================================================================================================================================
By Hardik Gujjar
=============================================================================================================================================

ALTER TABLE T09_IE 
    MODIFY IE_PWD  VARCHAR2(8 BYTE);

ALTER TABLE T50_LAB_REGISTER 
ADD ID NUMBER(6,0) ;
CREATE SEQUENCE T50_LAB_REGISTER_seq
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
UPDATE T50_LAB_REGISTER
   SET ID = T50_LAB_REGISTER_seq.nextval;
ALTER TABLE T50_LAB_REGISTER
    MODIFY ID NUMBER(6,0) DEFAULT T50_LAB_REGISTER_seq.nextval;
ALTER TABLE T50_LAB_REGISTER
ADD CONSTRAINT T50_LAB_REGISTER_pk  PRIMARY KEY (ID);

-------------------------------

ALTER TABLE T51_LAB_REGISTER_DETAIL 
ADD ID NUMBER(6,0) ;
CREATE SEQUENCE T51_LAB_REGISTER_DETAIL_seq
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
UPDATE T51_LAB_REGISTER_DETAIL
   SET ID = T51_LAB_REGISTER_DETAIL_seq.nextval;
ALTER TABLE T51_LAB_REGISTER_DETAIL
    MODIFY ID NUMBER(6,0) DEFAULT T51_LAB_REGISTER_DETAIL_seq.nextval;
ALTER TABLE T51_LAB_REGISTER_DETAIL
ADD CONSTRAINT T51_LAB_REGISTER_DETAIL_pk  PRIMARY KEY (ID);
ALTER TABLE T51_LAB_REGISTER_DETAIL
MODIFY (SAMPLE_REG_NO VARCHAR2(9 BYTE) NOT NULL);

-------------------------------

ALTER TABLE T60_IE_POI_MAPPING 
ADD ID Int ;
CREATE SEQUENCE T60_IE_POI_MAPPING_seq
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
UPDATE T60_IE_POI_MAPPING
   SET ID = T60_IE_POI_MAPPING_seq.nextval;
ALTER TABLE T60_IE_POI_MAPPING
    MODIFY ID INT DEFAULT T60_IE_POI_MAPPING_seq.nextval;
ALTER TABLE T60_IE_POI_MAPPING
ADD CONSTRAINT T60_IE_POI_MAPPING_pk  PRIMARY KEY (ID);
ALTER TABLE T60_IE_POI_MAPPING
MODIFY (ID Int NOT NULL);
ALTER TABLE T60_IE_POI_MAPPING
MODIFY (IE_CD NUMBER(6,0) NOT NULL);
ALTER TABLE T09_IE 
MODIFY IE_CD NUMBER(6,0);
ALTER TABLE T09_IE
MODIFY (IE_CD NUMBER(6,0) NOT NULL);


ALTER TABLE T48_NI_IE_WORK_PLAN
MODIFY (IE_CD NUMBER(6,0) NOT NULL);

-------------------------------

ALTER TABLE T45_CLAIM_MASTER 
ADD NUMBER(6,0) Int ;
CREATE SEQUENCE T45_CLAIM_MASTER_seq
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
UPDATE T45_CLAIM_MASTER
   SET ID = T45_CLAIM_MASTER_seq.nextval;
ALTER TABLE T45_CLAIM_MASTER
    MODIFY NUMBER(6,0) INT DEFAULT T45_CLAIM_MASTER_seq.nextval;
ALTER TABLE T45_CLAIM_MASTER
ADD CONSTRAINT T45_CLAIM_MASTER_pk  PRIMARY KEY (ID);

-------------------------------

ALTER TABLE T46_CLAIM_DETAIL 
ADD NUMBER(6,0) Int ;
CREATE SEQUENCE T46_CLAIM_DETAIL_seq
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
UPDATE T46_CLAIM_DETAIL
   SET ID = T46_CLAIM_DETAIL_seq.nextval;
ALTER TABLE T46_CLAIM_DETAIL
    MODIFY ID NUMBER(6,0) DEFAULT T46_CLAIM_DETAIL_seq.nextval;

    ALTER TABLE T45_CLAIM_MASTER
MODIFY (CLAIM_NO VARCHAR2(11 BYTE) NOT NULL);

-------------------------------

ALTER TABLE T47_IE_WORK_PLAN 
ADD NUMBER(6,0) Int ;
CREATE SEQUENCE T47_IE_WORK_PLAN_seq
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
UPDATE T47_IE_WORK_PLAN
   SET ID = T47_IE_WORK_PLAN_seq.nextval;
ALTER TABLE T47_IE_WORK_PLAN
    MODIFY ID NUMBER(6,0) DEFAULT T47_IE_WORK_PLAN_seq.nextval;

    
    ALTER TABLE T47_IE_WORK_PLAN
MODIFY (CALL_SNO NUMBER(5,0) NOT NULL);

-------------------------------

    ALTER TABLE T09_IE
MODIFY (IE_CD NUMBER(6,0) NOT NULL);

 ALTER TABLE NO_IE_WORK_PLAN
MODIFY (IE_CD NUMBER(6,0) NOT NULL);


 ALTER TABLE T10_IC_BOOKSET
MODIFY (ISSUE_TO_IECD  NUMBER(6,0));

 ALTER TABLE T16_IC_CANCEL
MODIFY (ISSUE_TO_IECD  NUMBER(6,0));

 ALTER TABLE T17_CALL_REGISTER
MODIFY (IE_CD  NUMBER(6,0));

 ALTER TABLE T20_IC
MODIFY (IE_CD  NUMBER(6,0));

 ALTER TABLE T31_HOLOGRAM_ISSUED
MODIFY (HG_IECD  NUMBER(6,0));

 ALTER TABLE T45_CLAIM_MASTER
MODIFY (IE_CD  NUMBER(6,0));

 ALTER TABLE T47_IE_WORK_PLAN
MODIFY (IE_CD  NUMBER(6,0));

-------------------------------

ALTER TABLE T53_VIGILANCE_CASES_MASTER 
ADD ID NUMBER(6,0) ;
CREATE SEQUENCE T53_VIGILANCE_CASES_MASTER_seq
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
UPDATE T53_VIGILANCE_CASES_MASTER
   SET ID = T53_VIGILANCE_CASES_MASTER_seq.nextval;
ALTER TABLE T53_VIGILANCE_CASES_MASTER
    MODIFY ID NUMBER(6,0) DEFAULT T53_VIGILANCE_CASES_MASTER_seq.nextval;
ALTER TABLE T53_VIGILANCE_CASES_MASTER
ADD CONSTRAINT T53_VIGILANCE_CASES_MASTER_pk  PRIMARY KEY (ID);

-------------------------------

 ALTER TABLE T70_UNREGISTERED_CALLS
MODIFY (IE_CD  NUMBER(6,0));

-------------------------------
CREATE TABLE Roles (
  Role_Id    NUMBER(6,0) NOT NULL,
  RoleName  VARCHAR2(50),
  RoleDescription  VARCHAR2(500),
  IsSysAdmin  NUMBER(2,0),
  IsActive  NUMBER(2,0),
  IsDeleted  NUMBER(2,0),
  CreatedDate  DATE,
  CreatedBy  Int,
  UpdatedDate  DATE,
  UpdatedBy  Int
  );
ALTER TABLE Roles ADD (
  CONSTRAINT Roles_pk PRIMARY KEY (Role_Id));
CREATE SEQUENCE ROLES_seq
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
UPDATE ROLES
   SET Role_Id = ROLES_seq.nextval;
ALTER TABLE ROLES
    MODIFY Role_Id  NUMBER(6,0) DEFAULT ROLES_seq.nextval;

-------------------------------
    
ALTER TABLE t02_users 
ADD ID NUMBER(6,0) ;
CREATE SEQUENCE t02_users_seq
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
UPDATE t02_users
   SET ID = t02_users_seq.nextval;
ALTER TABLE t02_users
    MODIFY ID NUMBER(6,0) DEFAULT t02_users_seq.nextval;

 -------------------------------   

CREATE TABLE TblException (
  Id   NUMBER(6,0) NOT NULL,
  ControllerName  VARCHAR2(50),
  ActionName  VARCHAR2(50),
  ExceptionMessage  VARCHAR2(500),
  Exception  VARCHAR2(500),
  CreatedDate  DATE,
  CreatedBy  Int,
  CreateIp  VARCHAR2(50)
  );
ALTER TABLE TblException ADD (
  CONSTRAINT TblException_pk PRIMARY KEY (Id));
CREATE SEQUENCE TblException_seq
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
UPDATE TblException
   SET Id = TblException_seq.nextval;
ALTER TABLE TblException
    MODIFY Id NUMBER(6,0) DEFAULT TblException_seq.nextval;
    
-------------------------------


CREATE SEQUENCE T05_VENDOR_seq
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
ALTER TABLE T05_VENDOR
  MODIFY VEND_CD NUMBER(6,0) DEFAULT T05_VENDOR_seq.nextval;

-------------------------------

ALTER TABLE T03_CITY
MODIFY (CITY_CD  NUMBER(6,0));
ALTER TABLE T05_VENDOR
MODIFY (VEND_CITY_CD  NUMBER(6,0));
ALTER TABLE T06_CONSIGNEE
MODIFY (CONSIGNEE_CITY  NUMBER(6,0));

-------------------------------

ALTER TABLE T13_PO_MASTER 
ADD ID NUMBER(6,0) ;
CREATE SEQUENCE T13_PO_MASTER_seq
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
UPDATE T13_PO_MASTER
   SET ID = T13_PO_MASTER_seq.nextval;
ALTER TABLE T13_PO_MASTER
    MODIFY ID NUMBER(6,0) DEFAULT T13_PO_MASTER_seq.nextval;

-------------------------------

ALTER TABLE T13_PO_MASTER 
ADD ID NUMBER(6,0) ;
CREATE SEQUENCE T13_PO_MASTER_seq
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
UPDATE T13_PO_MASTER
   SET ID = T13_PO_MASTER_seq.nextval;
ALTER TABLE T13_PO_MASTER
    MODIFY ID NUMBER(6,0) DEFAULT T13_PO_MASTER_seq.nextval;

-------------------------------

CREATE TABLE IBS_Document(
	ID NUMBER(6,0)  NOT NULL,
	DocumentName Varchar2(500),
	DocumentCategory NUMBER(6,0),
	AllowedFileExtensions Varchar2(100) NOT NULL,
	MaxContentLengthInKB NUMBER(6,0),
	IsMandatory NUMBER(2,0) NOT NULL,
	IsVisible NUMBER(2,0) NOT NULL,
	VerifyDSC NUMBER(2,0) NOT NULL,
	StaticLink Nvarchar2(250),
	WorkflowStatusID NUMBER(6,0) ,
	IsDownloadTemplate NUMBER(2,0) ,
	FolderPath Varchar2(500) ,
	IsVideo NUMBER(2,0) NOT NULL
)

ALTER TABLE IBS_Document ADD (
  CONSTRAINT IBS_Document_pk PRIMARY KEY (ID));
  
CREATE SEQUENCE IBS_Document_seq
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
ALTER TABLE IBS_Document
    MODIFY ID  NUMBER(6,0) DEFAULT IBS_Document_seq.nextval;

-------------------------------
    
CREATE TABLE IBS_DocumentCategory(
	ID NUMBER(6,0)  NOT NULL,
	CategoryName Varchar2(50) NULL,
	GroupName Varchar2(50) NULL,
	grouplabel Varchar2(100) NULL,
	categorylabel Varchar2(100) NULL,
	ShowList NUMBER(2,0) NOT NULL,
	GroupId NUMBER(6,0) NULL
)

ALTER TABLE IBS_DocumentCategory ADD (
  CONSTRAINT IBS_DocumentCategory_pk PRIMARY KEY (ID));
  
CREATE SEQUENCE IBS_DocumentCategory_seq
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
   
ALTER TABLE IBS_DocumentCategory
    MODIFY ID  NUMBER(6,0) DEFAULT IBS_DocumentCategory_seq.nextval;

-------------------------------
    
CREATE TABLE IBS_APPDocument(
	ID NUMBER(6,0)  NOT NULL,
	ApplicationID Varchar2(100) NULL,
	DocumentCategory NUMBER(6,0) NULL,
	DocumentID NUMBER(6,0) NULL,
	RelativePath Varchar2(1000) NULL,
	FileID Varchar2(100) NULL,
	Extension Varchar2(50) NULL,
	FileDisplayName Varchar2(1000) NULL,
	IsOtherDoc NUMBER(2,0) NULL,
	OtherDocumentName Varchar2(1000) NULL,
	IsDeleted NUMBER(2,0) NULL,
	Latitude Number(18, 6) NULL,
	Longitude Number(18, 6) NULL,
	Camera Varchar2(255) NULL,
	PhotoTakenDate DATE NULL,
	Maker Varchar2(255) NULL,
	Accuracy Number(18, 6) NULL,
	IsVideo NUMBER(2,0) NOT NULL,
	ThumnailPath Varchar2(500) NULL,
	ThumnailFileID Varchar2(100) NULL,
	ThumnailExtension Varchar2(50) NULL,
	CouchDBDocID Nvarchar2(50) NULL
)

ALTER TABLE IBS_APPDocument ADD (
  CONSTRAINT IBS_APPDocument_pk PRIMARY KEY (ID));
  
CREATE SEQUENCE IBS_APPDocument_seq
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
   
ALTER TABLE IBS_APPDocument
    MODIFY ID  NUMBER(6,0) DEFAULT IBS_APPDocument_seq.nextval;

ALTER TABLE IBS_APPDocument
ADD CONSTRAINT fk_GNR_APPDocument_GNR_Document
  FOREIGN KEY (DocumentID)
  REFERENCES IBS_Document(ID);


    
create View VIEW_POMASTERLIST
AS
select 
        m.VEND_CD,
        m.CASE_NO,
        m.PO_NO,
        to_char(m.PO_DT,'dd/mm/yyyy')PO_DT,
        (decode(m.RLY_NONRLY,'R','Railway','P','Private','S','State Government','F','Foreign Railways','U','PSU')||'('||m.RLY_CD||')')RLY_CD,
        m.REAL_CASE_NO,(v.VEND_NAME||'('||NVL2(t.LOCATION,t.LOCATION||' : '||t.CITY,t.CITY)||')')VEND_NAME,
        (nvl2(trim(c.CONSIGNEE_DESIG),trim(c.CONSIGNEE_DESIG)||'/','')||nvl2(trim(c.CONSIGNEE_DEPT),trim(c.CONSIGNEE_DEPT)||'/','')||trim(c.CONSIGNEE_FIRM)) CONSIGNEE_S_NAME,
        m.REMARKS ,
        m.Isdeleted,
        m.RLY_NONRLY
        from 
            T80_PO_MASTER m,
            T05_VENDOR v,
            T06_CONSIGNEE c, 
            T03_CITY t 
        where 
            m.VEND_CD=v.VEND_CD and 
            v.VEND_CITY_CD=t.CITY_CD And 
            m.PURCHASER_CD=c.CONSIGNEE_CD(+)


Create VIEW view_GetVendor
AS
    select VEND_CD,(trim(V.VEND_NAME)||'/'||trim(V.VEND_ADD1)||'/'||NVL2(C.LOCATION,C.LOCATION||' / '||C.CITY,C.CITY)) VEND_NAME 
    from T05_VENDOR V, 
        T03_CITY C 
    where 
        VEND_NAME is not null and 
        V.VEND_CITY_CD=C.CITY_CD 
        ORDER BY VEND_NAME


Create VIEW view_GetManufVEND
AS
    select VEND_CD,VEND_NAME,VEND_ADD1,VEND_CONTACT_PER_1,VEND_CONTACT_TEL_1,VEND_STATUS,to_char(VEND_STATUS_DT_FR,'dd/mm/yyyy')VEND_STATUS_FR,to_char(VEND_STATUS_DT_TO,'dd/mm/yyyy')VEND_STATUS_TO,VEND_EMAIL 
    from T05_VENDOR


Create View VIEW_POMASTERLIST
AS
select 
        m.VEND_CD,
        m.CASE_NO,
        m.PO_NO,
        to_char(m.PO_DT,'dd/mm/yyyy')PO_DT,
        (decode(m.RLY_NONRLY,'R','Railway','P','Private','S','State Government','F','Foreign Railways','U','PSU')||'('||m.RLY_CD||')')RLY_CD,
        m.REAL_CASE_NO,(v.VEND_NAME||'('||NVL2(t.LOCATION,t.LOCATION||' : '||t.CITY,t.CITY)||')')VEND_NAME,
        (nvl2(trim(c.CONSIGNEE_DESIG),trim(c.CONSIGNEE_DESIG)||'/','')||nvl2(trim(c.CONSIGNEE_DEPT),trim(c.CONSIGNEE_DEPT)||'/','')||trim(c.CONSIGNEE_FIRM)) CONSIGNEE_S_NAME,
        m.REMARKS ,
        m.Isdeleted,
        m.RLY_NONRLY,
        m.RLY_CD AS MAINRLY_CD
        from 
            T80_PO_MASTER m,
            T05_VENDOR v,
            T06_CONSIGNEE c, 
            T03_CITY t 
        where 
            m.VEND_CD=v.VEND_CD and 
            v.VEND_CITY_CD=t.CITY_CD And 
            m.PURCHASER_CD=c.CONSIGNEE_CD(+)


create or replace PROCEDURE GENERATE_VEND_CASE_NO(
    IN_REGION_CD IN VARCHAR2,
    IN_PO_DT IN VARCHAR2,
    p_result_cursor    OUT SYS_REFCURSOR
) AS
    w_ctr VARCHAR2(100) := NULL;
    w_sno CHAR(100) := NULL;
    w_region CHAR(100) := NULL;
    w_Case_No VARCHAR2(500) := NULL;

BEGIN
    w_ctr := IN_REGION_CD || SUBSTR(IN_PO_DT, 9, 2) || SUBSTR(IN_PO_DT, 4, 2);

    SELECT LPAD(NVL(MAX(TO_NUMBER(NVL(SUBSTR(CASE_NO, 6, 4), 0))), 0) + 1, 4, '0')
    INTO w_sno
    FROM T80_PO_MASTER
    WHERE REGION_CODE = IN_REGION_CD AND SUBSTR(CASE_NO, 1, 5) = w_ctr;

    w_Case_No := w_ctr || w_sno;

    --INSERT INTO T80_PO_MASTER(CASE_NO, REGION_CODE) VALUES (w_Case_No, IN_REGION_CD);
     --DBMS_OUTPUT.PUT_LINE(w_Case_No);
     --DBMS_OUTPUT.PUT_LINE(IN_REGION_CD);
    OPEN p_result_cursor FOR

    SELECT w_Case_No AS CaseNo, IN_REGION_CD AS IN_REGION_CD FROM DUAL;

END;


ALTER TABLE T05_VENDOR ADD CREATEDBY  NUMBER(6,0)
ALTER TABLE T05_VENDOR ADD CREATEDDATE TIMESTAMP(6) WITH TIME ZONE
ALTER TABLE T05_VENDOR ADD UPDATEDBY  NUMBER(6,0)
ALTER TABLE T05_VENDOR ADD UPDATEDDATE TIMESTAMP(6) WITH TIME ZONE
ALTER TABLE T05_VENDOR ADD ISDELETED NUMBER(2,0)

ALTER TABLE T82_PO_DETAIL ADD CREATEDBY  NUMBER(6,0)
ALTER TABLE T82_PO_DETAIL ADD CREATEDDATE TIMESTAMP(6) WITH TIME ZONE
ALTER TABLE T82_PO_DETAIL ADD UPDATEDBY  NUMBER(6,0)
ALTER TABLE T82_PO_DETAIL ADD UPDATEDDATE TIMESTAMP(6) WITH TIME ZONE
ALTER TABLE T82_PO_DETAIL ADD ISDELETED NUMBER(2,0)



CREATE OR REPLACE PROCEDURE GET_BPOS_BY_TYPE_RLY (
    p_BPO_TYPE IN VARCHAR2,
    p_client IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_Result FOR
        SELECT BPO_CD,
            (B.BPO_CD||'-'||B.BPO_NAME||'/'||B.BPO_RLY||'/'||NVL2(B.BPO_ADD,B.BPO_ADD||'/','')||NVL2(C.LOCATION,C.CITY||'/'||C.LOCATION,C.CITY)) BPO_NAME
        FROM T12_BILL_PAYING_OFFICER B
        JOIN T03_CITY C ON B.BPO_CITY_CD = C.CITY_CD
        WHERE BPO_TYPE = p_BPO_TYPE
        AND UPPER(TRIM(BPO_RLY)) = UPPER(TRIM(p_client))
        ORDER BY BPO_NAME;
END;

create or replace PROCEDURE GET_PO_DETAILS(
    p_case_no IN CHAR,
    p_Result OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_Result FOR
    SELECT
        p.CASE_NO,
        p.ITEM_SRNO,
        p.ITEM_DESC,
        CASE
            WHEN p.CONSIGNEE IS NOT NULL THEN
                (C.CONSIGNEE_CD || '-' || NVL2(TRIM(C.CONSIGNEE_DESIG), TRIM(C.CONSIGNEE_DESIG) || '/', '')
                || NVL2(TRIM(C.CONSIGNEE_DEPT), TRIM(C.CONSIGNEE_DEPT) || '/', '')
                || NVL2(TRIM(C.CONSIGNEE_FIRM), TRIM(C.CONSIGNEE_FIRM) || '/', '')
                || NVL2(TRIM(C.CONSIGNEE_ADD1), TRIM(C.CONSIGNEE_ADD1) || '/', '')
                || NVL2(TRIM(D.LOCATION), TRIM(D.LOCATION) || ' : ' || TRIM(D.CITY), TRIM(D.CITY)))
            ELSE
                (C.CONSIGNEE_CD || '-' || NVL2(TRIM(C.CONSIGNEE_DESIG), TRIM(C.CONSIGNEE_DESIG) || '/', '')
                || NVL2(TRIM(C.CONSIGNEE_DEPT), TRIM(C.CONSIGNEE_DEPT) || '/', '')
                || NVL2(TRIM(C.CONSIGNEE_FIRM), TRIM(C.CONSIGNEE_FIRM) || '/', '')
                || NVL2(TRIM(C.CONSIGNEE_ADD1), TRIM(C.CONSIGNEE_ADD1) || '/', '')
                || NVL2(TRIM(D.LOCATION), TRIM(D.LOCATION) || ' : ' || TRIM(D.CITY), TRIM(D.CITY)))
        END AS CONSIGNEE_NAME,
        p.QTY,
        p.RATE,
        p.VALUE AS DATAVALUE
    FROM
        T82_PO_DETAIL p
    JOIN T06_CONSIGNEE C ON p.CONSIGNEE_CD = C.CONSIGNEE_CD
    JOIN T03_CITY D ON C.CONSIGNEE_CITY = D.CITY_CD
    WHERE
        p.CASE_NO = p_case_no
    ORDER BY
        p.ITEM_SRNO;
END;

create or replace PROCEDURE SP_GetConsignee (
    p_RLY_NONRLY IN VARCHAR2,
    p_client IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR
)
AS
BEGIN
    IF p_RLY_NONRLY = 'P' THEN
        OPEN p_Result FOR
            SELECT A.CONSIGNEE_CD,
                   (A.CONSIGNEE_CD || '-' || NVL2(TRIM(A.CONSIGNEE_DESIG), TRIM(A.CONSIGNEE_DESIG) || '/', '') ||
                   NVL2(TRIM(A.CONSIGNEE_DEPT), TRIM(A.CONSIGNEE_DEPT) || '/', '') ||
                   NVL2(TRIM(A.CONSIGNEE_FIRM), TRIM(A.CONSIGNEE_FIRM) || '/', '') ||
                   NVL2(TRIM(A.CONSIGNEE_ADD1), TRIM(A.CONSIGNEE_ADD1) || '/', '') ||
                   NVL2(TRIM(B.LOCATION), TRIM(B.LOCATION) || ' : ' || TRIM(B.CITY), TRIM(B.CITY))) CONSIGNEE_NAME
            FROM T06_CONSIGNEE A, T03_CITY B
            WHERE A.CONSIGNEE_CITY = B.CITY_CD AND A.CONSIGNEE_TYPE = 'P'
            ORDER BY (NVL2(TRIM(A.CONSIGNEE_DESIG), TRIM(A.CONSIGNEE_DESIG) || '/', '') ||
                      NVL2(TRIM(A.CONSIGNEE_DEPT), TRIM(A.CONSIGNEE_DEPT) || '/', '') ||
                      NVL2(TRIM(A.CONSIGNEE_FIRM), TRIM(A.CONSIGNEE_FIRM) || '/', '') ||
                      NVL2(TRIM(A.CONSIGNEE_ADD1), TRIM(A.CONSIGNEE_ADD1) || '/', '') ||
                      NVL2(TRIM(B.LOCATION), TRIM(B.LOCATION) || ' : ' || TRIM(B.CITY), TRIM(B.CITY)));
    ELSE 
        IF p_client != '0' THEN
            OPEN p_Result FOR
            SELECT A.CONSIGNEE_CD,
                   (A.CONSIGNEE_CD || '-' || NVL2(TRIM(A.CONSIGNEE_DESIG), TRIM(A.CONSIGNEE_DESIG) || '/', '') ||
                   NVL2(TRIM(A.CONSIGNEE_DEPT), TRIM(A.CONSIGNEE_DEPT) || '/', '') ||
                   NVL2(TRIM(A.CONSIGNEE_FIRM), TRIM(A.CONSIGNEE_FIRM) || '/', '') ||
                   NVL2(TRIM(A.CONSIGNEE_ADD1), TRIM(A.CONSIGNEE_ADD1) || '/', '') ||
                   NVL2(TRIM(B.LOCATION), TRIM(B.LOCATION) || ' : ' || TRIM(B.CITY), TRIM(B.CITY))) CONSIGNEE_NAME
            FROM T06_CONSIGNEE A, T03_CITY B
            WHERE A.CONSIGNEE_CITY = B.CITY_CD AND UPPER(TRIM(A.CONSIGNEE_FIRM)) = UPPER(TRIM(p_client))
            ORDER BY (NVL2(TRIM(A.CONSIGNEE_DESIG), TRIM(A.CONSIGNEE_DESIG) || '/', '') ||
                      NVL2(TRIM(A.CONSIGNEE_DEPT), TRIM(A.CONSIGNEE_DEPT) || '/', '') ||
                      NVL2(TRIM(A.CONSIGNEE_FIRM), TRIM(A.CONSIGNEE_FIRM) || '/', '') ||
                      NVL2(TRIM(A.CONSIGNEE_ADD1), TRIM(A.CONSIGNEE_ADD1) || '/', '') ||
                      NVL2(TRIM(B.LOCATION), TRIM(B.LOCATION) || ' : ' || TRIM(B.CITY), TRIM(B.CITY)));
            ELSE
                OPEN p_Result FOR
                    SELECT A.CONSIGNEE_CD,
                           (A.CONSIGNEE_CD || '-' || NVL2(TRIM(A.CONSIGNEE_DESIG), TRIM(A.CONSIGNEE_DESIG) || '/', '') ||
                           NVL2(TRIM(A.CONSIGNEE_DEPT), TRIM(A.CONSIGNEE_DEPT) || '/', '') ||
                           NVL2(TRIM(A.CONSIGNEE_FIRM), TRIM(A.CONSIGNEE_FIRM) || '/', '') ||
                           NVL2(TRIM(A.CONSIGNEE_ADD1), TRIM(A.CONSIGNEE_ADD1) || '/', '') ||
                           NVL2(TRIM(B.LOCATION), TRIM(B.LOCATION) || ' : ' || TRIM(B.CITY), TRIM(B.CITY))) CONSIGNEE_NAME
                    FROM T06_CONSIGNEE A, T03_CITY B
                    WHERE A.CONSIGNEE_CITY = B.CITY_CD AND A.CONSIGNEE_CD = 0
                    ORDER BY (NVL2(TRIM(A.CONSIGNEE_DESIG), TRIM(A.CONSIGNEE_DESIG) || '/', '') ||
                              NVL2(TRIM(A.CONSIGNEE_DEPT), TRIM(A.CONSIGNEE_DEPT) || '/', '') ||
                              NVL2(TRIM(A.CONSIGNEE_FIRM), TRIM(A.CONSIGNEE_FIRM) || '/', '') ||
                              NVL2(TRIM(A.CONSIGNEE_ADD1), TRIM(A.CONSIGNEE_ADD1) || '/', '') ||
                              NVL2(TRIM(B.LOCATION), TRIM(B.LOCATION) || ' : ' || TRIM(B.CITY), TRIM(B.CITY)));
            END IF;
    END IF;
END;


==================================== Menu Role ========================
CREATE TABLE USERROLES (
    ID NUMBER(6) GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    ROLE_ID NUMBER(6) NOT NULL,
    USER_ID NUMBER(6) NOT NULL,
    USERTYPE VARCHAR2(20 BYTE)
);

CREATE TABLE Menu_Master (
    ID NUMBER(6) GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    ParentID NUMBER(6),
    ControllerName NVARCHAR2(50),
    ActionName VARCHAR2(50),
    Title NVARCHAR2(50),
    MenuDescription NVARCHAR2(250),
    Role_Id NUMBER(6),
    IconCssClass NVARCHAR2(50),
    IsActive NUMBER(1),
    SortOrder NUMBER(6),
    IconPath VARCHAR2(50)
);

ALTER TABLE Menu_Master
ADD CONSTRAINT DF_Menu_Master_IsActive DEFAULT 1 FOR IsActive;

ALTER TABLE Menu_Master
ADD CONSTRAINT FK_Menu_Master_Role_Id_ROLES FOREIGN KEY (Role_Id)
REFERENCES ROLES (Role_Id);

CREATE TABLE MenuRoleMapping (
    ID NUMBER(6) GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    RoleID NUMBER(6),
    MenuID NUMBER(6),
    IsActive NUMBER(1)
);


create or replace PROCEDURE SP_GetMenuMaster (
    p_RoleID IN NUMBER,
    p_Result OUT SYS_REFCURSOR
)
AS
BEGIN
    OPEN p_Result FOR
        SELECT c.ID AS MenuId,
               c.TITLE,
               c.PARENTID AS ParentId,
               c.Sortorder AS SortOrder,
               c.CONTROLLERNAME AS ControllerName,
               c.ACTIONNAME AS ActionName,
               c.ICONPATH AS IconPath,
               mrm.ROLEID AS Role_Id
        FROM Menu_Master c
        INNER JOIN MenuRoleMapping mrm ON mrm.MENUID = c.ID
        WHERE TO_CHAR(mrm.MENUID) = TO_CHAR(c.ID)
          AND mrm.ROLEID = p_RoleID
          AND c.ISACTIVE = 1
          AND mrm.ISACTIVE = 1
        ORDER BY c.SORTORDER;

END;




==============

ALTER TABLE T103_VEND_DOCS 
ADD ID NUMBER(6,0) ;
CREATE SEQUENCE T103_VEND_DOCS_seq
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
UPDATE T103_VEND_DOCS
   SET ID = T103_VEND_DOCS_seq.nextval;
ALTER TABLE T103_VEND_DOCS
    MODIFY ID NUMBER(6,0) DEFAULT T103_VEND_DOCS_seq.nextval;

    =================

create or replace PROCEDURE SP_GetVendorDocumentDetails (
p_VEND_CD IN VARCHAR2,
p_DOC_TYPE IN VARCHAR2,
p_Result OUT SYS_REFCURSOR
)
AS
BEGIN
    OPEN p_Result FOR
        SELECT VEND_CD,
               DOC_TYPE,
               EQUIP_MK_SL,
               CALIB_CERT_NO,
               EQUIP_CLBR_CERT_SNO,
               EQUIP_NAME,
               EQUIP_RANGE,
               CALIBRATED_BY,
               DT_OF_CALIB,
               NEXT_DT_CALIB,
               EQUIP_DESC,
               NABL_ACC_DET,
               'DOC/' || VEND_CD || '_||_' || DOC_TYPE || '.PDF' AS V_DOC
        FROM t104_vend_equip_clbr_cert
        WHERE VEND_CD = p_VEND_CD
          AND DOC_TYPE = p_DOC_TYPE
        ORDER BY DT_OF_CALIB;
END;
