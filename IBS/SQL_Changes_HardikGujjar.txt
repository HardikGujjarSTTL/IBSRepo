
Scaffold-DbContext "Data Source=(DESCRIPTION=(ADDRESS_LIST= (ADDRESS=(COMMUNITY=tcpcom.world)(PROTOCOL=tcp)(HOST=192.168.0.215)(PORT=1521)))(CONNECT_DATA=(SID=orcl))); User ID=IBSDev;Password=IBSDev" Oracle.EntityFrameworkCore -OutputDir DataAccess -Force

=============================================================================================================================================
By Hardik Gujjar
=============================================================================================================================================

ALTER TABLE T09_IE 
    MODIFY IE_PWD  VARCHAR2(8 BYTE);

ALTER TABLE T50_LAB_REGISTER 
ADD ID NUMBER(6,0) ;
CREATE SEQUENCE T50_LAB_REGISTER_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;

UPDATE T50_LAB_REGISTER
   SET ID = T50_LAB_REGISTER_seq.nextval;
ALTER TABLE T50_LAB_REGISTER
    MODIFY ID NUMBER(6,0) DEFAULT T50_LAB_REGISTER_seq.nextval;
ALTER TABLE T50_LAB_REGISTER
ADD CONSTRAINT T50_LAB_REGISTER_pk  PRIMARY KEY (ID);

-------------------------------

ALTER TABLE T51_LAB_REGISTER_DETAIL 
ADD ID NUMBER(6,0) ;
CREATE SEQUENCE T51_LAB_REGISTER_DETAIL_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;

UPDATE T51_LAB_REGISTER_DETAIL
   SET ID = T51_LAB_REGISTER_DETAIL_seq.nextval;
ALTER TABLE T51_LAB_REGISTER_DETAIL
    MODIFY ID NUMBER(6,0) DEFAULT T51_LAB_REGISTER_DETAIL_seq.nextval;
ALTER TABLE T51_LAB_REGISTER_DETAIL
ADD CONSTRAINT T51_LAB_REGISTER_DETAIL_pk  PRIMARY KEY (ID);
ALTER TABLE T51_LAB_REGISTER_DETAIL
MODIFY (SAMPLE_REG_NO VARCHAR2(9 BYTE) NOT NULL);

-------------------------------

ALTER TABLE T60_IE_POI_MAPPING 
ADD ID Int ;
CREATE SEQUENCE T60_IE_POI_MAPPING_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;
  
UPDATE T60_IE_POI_MAPPING
   SET ID = T60_IE_POI_MAPPING_seq.nextval;
ALTER TABLE T60_IE_POI_MAPPING
    MODIFY ID INT DEFAULT T60_IE_POI_MAPPING_seq.nextval;
ALTER TABLE T60_IE_POI_MAPPING
ADD CONSTRAINT T60_IE_POI_MAPPING_pk  PRIMARY KEY (ID);
ALTER TABLE T60_IE_POI_MAPPING
MODIFY (ID Int NOT NULL);
ALTER TABLE T60_IE_POI_MAPPING
MODIFY (IE_CD NUMBER(6,0) NOT NULL);
ALTER TABLE T09_IE 
MODIFY IE_CD NUMBER(6,0);
ALTER TABLE T09_IE
MODIFY (IE_CD NUMBER(6,0) NOT NULL);


ALTER TABLE T48_NI_IE_WORK_PLAN
MODIFY (IE_CD NUMBER(6,0) NOT NULL);

-------------------------------

ALTER TABLE T45_CLAIM_MASTER 
ADD ID NUMBER(6,0) ;
CREATE SEQUENCE T45_CLAIM_MASTER_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;
UPDATE T45_CLAIM_MASTER
   SET ID = T45_CLAIM_MASTER_seq.nextval;
ALTER TABLE T45_CLAIM_MASTER
    MODIFY ID NUMBER(6,0) DEFAULT T45_CLAIM_MASTER_seq.nextval;
ALTER TABLE T45_CLAIM_MASTER
ADD CONSTRAINT T45_CLAIM_MASTER_pk  PRIMARY KEY (ID);

-------------------------------

ALTER TABLE T46_CLAIM_DETAIL 
ADD NUMBER(6,0) Int ;
CREATE SEQUENCE T46_CLAIM_DETAIL_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;
UPDATE T46_CLAIM_DETAIL
   SET ID = T46_CLAIM_DETAIL_seq.nextval;
ALTER TABLE T46_CLAIM_DETAIL
    MODIFY ID NUMBER(6,0) DEFAULT T46_CLAIM_DETAIL_seq.nextval;

    ALTER TABLE T45_CLAIM_MASTER
MODIFY (CLAIM_NO VARCHAR2(11 BYTE) NOT NULL);

-------------------------------

ALTER TABLE T47_IE_WORK_PLAN 
ADD NUMBER(6,0) Int ;
CREATE SEQUENCE T47_IE_WORK_PLAN_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;
UPDATE T47_IE_WORK_PLAN
   SET ID = T47_IE_WORK_PLAN_seq.nextval;
ALTER TABLE T47_IE_WORK_PLAN
    MODIFY ID NUMBER(6,0) DEFAULT T47_IE_WORK_PLAN_seq.nextval;

    
    ALTER TABLE T47_IE_WORK_PLAN
MODIFY (CALL_SNO NUMBER(5,0) NOT NULL);

-------------------------------

    ALTER TABLE T09_IE
MODIFY (IE_CD NUMBER(6,0) NOT NULL);

 ALTER TABLE NO_IE_WORK_PLAN
MODIFY (IE_CD NUMBER(6,0) NOT NULL);


 ALTER TABLE T10_IC_BOOKSET
MODIFY (ISSUE_TO_IECD  NUMBER(6,0));

 ALTER TABLE T16_IC_CANCEL
MODIFY (ISSUE_TO_IECD  NUMBER(6,0));

 ALTER TABLE T17_CALL_REGISTER
MODIFY (IE_CD  NUMBER(6,0));

 ALTER TABLE T20_IC
MODIFY (IE_CD  NUMBER(6,0));

 ALTER TABLE T31_HOLOGRAM_ISSUED
MODIFY (HG_IECD  NUMBER(6,0));

 ALTER TABLE T45_CLAIM_MASTER
MODIFY (IE_CD  NUMBER(6,0));

 ALTER TABLE T47_IE_WORK_PLAN
MODIFY (IE_CD  NUMBER(6,0));

-------------------------------

ALTER TABLE T53_VIGILANCE_CASES_MASTER 
ADD ID NUMBER(6,0) ;
CREATE SEQUENCE T53_VIGILANCE_CASES_MASTER_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;
UPDATE T53_VIGILANCE_CASES_MASTER
   SET ID = T53_VIGILANCE_CASES_MASTER_seq.nextval;
ALTER TABLE T53_VIGILANCE_CASES_MASTER
    MODIFY ID NUMBER(6,0) DEFAULT T53_VIGILANCE_CASES_MASTER_seq.nextval;
ALTER TABLE T53_VIGILANCE_CASES_MASTER
ADD CONSTRAINT T53_VIGILANCE_CASES_MASTER_pk  PRIMARY KEY (ID);

-------------------------------

 ALTER TABLE T70_UNREGISTERED_CALLS
MODIFY (IE_CD  NUMBER(6,0));

-------------------------------
CREATE TABLE Roles (
  Role_Id    NUMBER(6,0) NOT NULL,
  RoleName  VARCHAR2(50),
  RoleDescription  VARCHAR2(500),
  IsSysAdmin  NUMBER(2,0),
  IsActive  NUMBER(2,0),
  IsDeleted  NUMBER(2,0),
  CreatedDate  DATE,
  CreatedBy  Int,
  UpdatedDate  DATE,
  UpdatedBy  Int
  );
ALTER TABLE Roles ADD (
  CONSTRAINT Roles_pk PRIMARY KEY (Role_Id));
CREATE SEQUENCE ROLES_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;
UPDATE ROLES
   SET Role_Id = ROLES_seq.nextval;
ALTER TABLE ROLES
    MODIFY Role_Id  NUMBER(6,0) DEFAULT ROLES_seq.nextval;

-------------------------------
    
ALTER TABLE t02_users 
ADD ID NUMBER(6,0) ;
CREATE SEQUENCE t02_users_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;
UPDATE t02_users
   SET ID = t02_users_seq.nextval;
ALTER TABLE t02_users
    MODIFY ID NUMBER(6,0) DEFAULT t02_users_seq.nextval;

 -------------------------------   

CREATE TABLE TblException (
  Id   NUMBER(6,0) NOT NULL,
  ControllerName  VARCHAR2(50),
  ActionName  VARCHAR2(50),
  ExceptionMessage  VARCHAR2(500),
  Exception  VARCHAR2(500),
  CreatedDate  TIMESTAMP(6) WITH TIME ZONE,
  CreatedBy  Int,
  CreateIp  VARCHAR2(50)
  );
ALTER TABLE TblException ADD (
  CONSTRAINT TblException_pk PRIMARY KEY (Id));
CREATE SEQUENCE TblException_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;
   
ALTER TABLE TblException
    MODIFY ID NUMBER(6,0) DEFAULT TblException_seq.nextval;
    
-------------------------------


CREATE SEQUENCE T05_VENDOR_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;
  
ALTER TABLE T05_VENDOR
  MODIFY VEND_CD NUMBER(6,0) DEFAULT T05_VENDOR_seq.nextval;

-------------------------------

ALTER TABLE T03_CITY
MODIFY (CITY_CD  NUMBER(6,0));
ALTER TABLE T05_VENDOR
MODIFY (VEND_CITY_CD  NUMBER(6,0));
ALTER TABLE T06_CONSIGNEE
MODIFY (CONSIGNEE_CITY  NUMBER(6,0));

-------------------------------

ALTER TABLE T13_PO_MASTER 
ADD ID NUMBER(6,0) ;
CREATE SEQUENCE T13_PO_MASTER_seq
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
UPDATE T13_PO_MASTER
   SET ID = T13_PO_MASTER_seq.nextval;
ALTER TABLE T13_PO_MASTER
    MODIFY ID NUMBER(6,0) DEFAULT T13_PO_MASTER_seq.nextval;

-------------------------------

ALTER TABLE T13_PO_MASTER 
ADD ID NUMBER(6,0) ;
CREATE SEQUENCE T13_PO_MASTER_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;
UPDATE T13_PO_MASTER
   SET ID = T13_PO_MASTER_seq.nextval;
ALTER TABLE T13_PO_MASTER
    MODIFY ID NUMBER(6,0) DEFAULT T13_PO_MASTER_seq.nextval;

-------------------------------

CREATE TABLE IBS_Document(
	ID NUMBER(6,0)  NOT NULL,
	DocumentName Varchar2(500),
	DocumentCategory NUMBER(6,0),
	AllowedFileExtensions Varchar2(100) NOT NULL,
	MaxContentLengthInKB NUMBER(6,0),
	IsMandatory NUMBER(2,0) NOT NULL,
	IsVisible NUMBER(2,0) NOT NULL,
	VerifyDSC NUMBER(2,0) NOT NULL,
	StaticLink Nvarchar2(250),
	WorkflowStatusID NUMBER(6,0) ,
	IsDownloadTemplate NUMBER(2,0) ,
	FolderPath Varchar2(500) ,
	IsVideo NUMBER(2,0) NOT NULL
)

ALTER TABLE IBS_Document ADD (
  CONSTRAINT IBS_Document_pk PRIMARY KEY (ID));
  
CREATE SEQUENCE IBS_Document_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;
  
   
ALTER TABLE T16_Ic_Cancel
    MODIFY ID NUMBER(6,0) DEFAULT IBS_Document_seq.nextval;

-------------------------------
    
CREATE TABLE IBS_DocumentCategory(
	ID NUMBER(6,0)  NOT NULL,
	CategoryName Varchar2(50) NULL,
	GroupName Varchar2(50) NULL,
	grouplabel Varchar2(100) NULL,
	categorylabel Varchar2(100) NULL,
	ShowList NUMBER(2,0) NOT NULL,
	GroupId NUMBER(6,0) NULL
)

ALTER TABLE IBS_DocumentCategory ADD (
  CONSTRAINT IBS_DocumentCategory_pk PRIMARY KEY (ID));
  
CREATE SEQUENCE IBS_DOCUMENTCATEGORY_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;
  
   
ALTER TABLE IBS_DOCUMENTCATEGORY
    MODIFY ID NUMBER(6,0) DEFAULT IBS_DOCUMENTCATEGORY_seq.nextval;

-------------------------------
    
CREATE TABLE IBS_APPDocument(
	ID NUMBER(6,0)  NOT NULL,
	ApplicationID Varchar2(100) NULL,
	DocumentCategory NUMBER(6,0) NULL,
	DocumentID NUMBER(6,0) NULL,
	RelativePath Varchar2(1000) NULL,
	FileID Varchar2(100) NULL,
	Extension Varchar2(50) NULL,
	FileDisplayName Varchar2(1000) NULL,
	IsOtherDoc NUMBER(2,0) NULL,
	OtherDocumentName Varchar2(1000) NULL,
	IsDeleted NUMBER(2,0) NULL,
	Latitude Number(18, 6) NULL,
	Longitude Number(18, 6) NULL,
	Camera Varchar2(255) NULL,
	PhotoTakenDate DATE NULL,
	Maker Varchar2(255) NULL,
	Accuracy Number(18, 6) NULL,
	IsVideo NUMBER(2,0) NOT NULL,
	ThumnailPath Varchar2(500) NULL,
	ThumnailFileID Varchar2(100) NULL,
	ThumnailExtension Varchar2(50) NULL,
	CouchDBDocID Nvarchar2(50) NULL
)

ALTER TABLE IBS_APPDocument ADD (
  CONSTRAINT IBS_APPDocument_pk PRIMARY KEY (ID));
  
CREATE SEQUENCE IBS_APPDocument_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;
   
ALTER TABLE IBS_APPDocument
    MODIFY ID  NUMBER(6,0) DEFAULT IBS_APPDocument_seq.nextval;

ALTER TABLE IBS_APPDocument
ADD CONSTRAINT fk_GNR_APPDocument_GNR_Document
  FOREIGN KEY (DocumentID)
  REFERENCES IBS_Document(ID);


    
create or replace View VIEW_POMASTERLIST
AS
select 
        m.VEND_CD,
        m.CASE_NO,
        m.PO_NO,
        to_char(m.PO_DT,'dd/mm/yyyy')PO_DT,
        (decode(m.RLY_NONRLY,'R','Railway','P','Private','S','State Government','F','Foreign Railways','U','PSU')||'('||m.RLY_CD||')')RLY_CD,
        m.REAL_CASE_NO,(v.VEND_NAME||'('||NVL2(t.LOCATION,t.LOCATION||' : '||t.CITY,t.CITY)||')')VEND_NAME,
        (nvl2(trim(c.CONSIGNEE_DESIG),trim(c.CONSIGNEE_DESIG)||'/','')||nvl2(trim(c.CONSIGNEE_DEPT),trim(c.CONSIGNEE_DEPT)||'/','')||trim(c.CONSIGNEE_FIRM)) CONSIGNEE_S_NAME,
        m.REMARKS ,
        m.Isdeleted,
        m.RLY_NONRLY,
        m.RLY_CD AS MAINRLY_CD
        from 
            T80_PO_MASTER m,
            T05_VENDOR v,
            T06_CONSIGNEE c, 
            T03_CITY t 
        where 
            m.VEND_CD=v.VEND_CD and 
            v.VEND_CITY_CD=t.CITY_CD And 
            m.PURCHASER_CD=c.CONSIGNEE_CD(+)
        Order by m.datetime desc;


Create VIEW view_GetVendor
AS
    select VEND_CD,(trim(V.VEND_NAME)||'/'||trim(V.VEND_ADD1)||'/'||NVL2(C.LOCATION,C.LOCATION||' / '||C.CITY,C.CITY)) VEND_NAME 
    from T05_VENDOR V, 
        T03_CITY C 
    where 
        VEND_NAME is not null and 
        V.VEND_CITY_CD=C.CITY_CD 
        ORDER BY VEND_NAME


Create VIEW view_GetManufVEND
AS
    select VEND_CD,VEND_NAME,VEND_ADD1,VEND_CONTACT_PER_1,VEND_CONTACT_TEL_1,VEND_STATUS,to_char(VEND_STATUS_DT_FR,'dd/mm/yyyy')VEND_STATUS_FR,to_char(VEND_STATUS_DT_TO,'dd/mm/yyyy')VEND_STATUS_TO,VEND_EMAIL 
    from T05_VENDOR


Create View VIEW_POMASTERLIST
AS
select 
        m.VEND_CD,
        m.CASE_NO,
        m.PO_NO,
        to_char(m.PO_DT,'dd/mm/yyyy')PO_DT,
        (decode(m.RLY_NONRLY,'R','Railway','P','Private','S','State Government','F','Foreign Railways','U','PSU')||'('||m.RLY_CD||')')RLY_CD,
        m.REAL_CASE_NO,(v.VEND_NAME||'('||NVL2(t.LOCATION,t.LOCATION||' : '||t.CITY,t.CITY)||')')VEND_NAME,
        (nvl2(trim(c.CONSIGNEE_DESIG),trim(c.CONSIGNEE_DESIG)||'/','')||nvl2(trim(c.CONSIGNEE_DEPT),trim(c.CONSIGNEE_DEPT)||'/','')||trim(c.CONSIGNEE_FIRM)) CONSIGNEE_S_NAME,
        m.REMARKS ,
        m.Isdeleted,
        m.RLY_NONRLY,
        m.RLY_CD AS MAINRLY_CD
        from 
            T80_PO_MASTER m,
            T05_VENDOR v,
            T06_CONSIGNEE c, 
            T03_CITY t 
        where 
            m.VEND_CD=v.VEND_CD and 
            v.VEND_CITY_CD=t.CITY_CD And 
            m.PURCHASER_CD=c.CONSIGNEE_CD(+)


create or replace PROCEDURE GENERATE_VEND_CASE_NO(
    IN_REGION_CD IN VARCHAR2,
    IN_PO_DT IN VARCHAR2,
    p_result_cursor    OUT SYS_REFCURSOR
) AS
    w_ctr VARCHAR2(100) := NULL;
    w_sno CHAR(100) := NULL;
    w_region CHAR(100) := NULL;
    w_Case_No VARCHAR2(500) := NULL;

BEGIN
    w_ctr := IN_REGION_CD || SUBSTR(IN_PO_DT, 9, 2) || SUBSTR(IN_PO_DT, 4, 2);

    SELECT LPAD(NVL(MAX(TO_NUMBER(NVL(SUBSTR(CASE_NO, 6, 4), 0))), 0) + 1, 4, '0')
    INTO w_sno
    FROM T80_PO_MASTER
    WHERE REGION_CODE = IN_REGION_CD AND SUBSTR(CASE_NO, 1, 5) = w_ctr;

    w_Case_No := w_ctr || w_sno;

    --INSERT INTO T80_PO_MASTER(CASE_NO, REGION_CODE) VALUES (w_Case_No, IN_REGION_CD);
     --DBMS_OUTPUT.PUT_LINE(w_Case_No);
     --DBMS_OUTPUT.PUT_LINE(IN_REGION_CD);
    OPEN p_result_cursor FOR

    SELECT w_Case_No AS CaseNo, IN_REGION_CD AS IN_REGION_CD FROM DUAL;

END;


ALTER TABLE T05_VENDOR ADD CREATEDBY  NUMBER(6,0)
ALTER TABLE T05_VENDOR ADD CREATEDDATE TIMESTAMP(6) WITH TIME ZONE
ALTER TABLE T05_VENDOR ADD UPDATEDBY  NUMBER(6,0)
ALTER TABLE T05_VENDOR ADD UPDATEDDATE TIMESTAMP(6) WITH TIME ZONE
ALTER TABLE T05_VENDOR ADD ISDELETED NUMBER(2,0)

ALTER TABLE T82_PO_DETAIL ADD CREATEDBY  NUMBER(6,0)
ALTER TABLE T82_PO_DETAIL ADD CREATEDDATE TIMESTAMP(6) WITH TIME ZONE
ALTER TABLE T82_PO_DETAIL ADD UPDATEDBY  NUMBER(6,0)
ALTER TABLE T82_PO_DETAIL ADD UPDATEDDATE TIMESTAMP(6) WITH TIME ZONE
ALTER TABLE T82_PO_DETAIL ADD ISDELETED NUMBER(2,0)



CREATE OR REPLACE PROCEDURE GET_BPOS_BY_TYPE_RLY (
    p_BPO_TYPE IN VARCHAR2,
    p_client IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_Result FOR
        SELECT BPO_CD,
            (B.BPO_CD||'-'||B.BPO_NAME||'/'||B.BPO_RLY||'/'||NVL2(B.BPO_ADD,B.BPO_ADD||'/','')||NVL2(C.LOCATION,C.CITY||'/'||C.LOCATION,C.CITY)) BPO_NAME
        FROM T12_BILL_PAYING_OFFICER B
        JOIN T03_CITY C ON B.BPO_CITY_CD = C.CITY_CD
        WHERE BPO_TYPE = p_BPO_TYPE
        AND UPPER(TRIM(BPO_RLY)) = UPPER(TRIM(p_client))
        ORDER BY BPO_NAME;
END;

create or replace PROCEDURE GET_PO_DETAILS(
    p_case_no IN CHAR,
    p_Result OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_Result FOR
    SELECT
        p.CASE_NO,
        p.ITEM_SRNO,
        p.ITEM_DESC,
        CASE
            WHEN p.CONSIGNEE IS NOT NULL THEN
                (C.CONSIGNEE_CD || '-' || NVL2(TRIM(C.CONSIGNEE_DESIG), TRIM(C.CONSIGNEE_DESIG) || '/', '')
                || NVL2(TRIM(C.CONSIGNEE_DEPT), TRIM(C.CONSIGNEE_DEPT) || '/', '')
                || NVL2(TRIM(C.CONSIGNEE_FIRM), TRIM(C.CONSIGNEE_FIRM) || '/', '')
                || NVL2(TRIM(C.CONSIGNEE_ADD1), TRIM(C.CONSIGNEE_ADD1) || '/', '')
                || NVL2(TRIM(D.LOCATION), TRIM(D.LOCATION) || ' : ' || TRIM(D.CITY), TRIM(D.CITY)))
            ELSE
                (C.CONSIGNEE_CD || '-' || NVL2(TRIM(C.CONSIGNEE_DESIG), TRIM(C.CONSIGNEE_DESIG) || '/', '')
                || NVL2(TRIM(C.CONSIGNEE_DEPT), TRIM(C.CONSIGNEE_DEPT) || '/', '')
                || NVL2(TRIM(C.CONSIGNEE_FIRM), TRIM(C.CONSIGNEE_FIRM) || '/', '')
                || NVL2(TRIM(C.CONSIGNEE_ADD1), TRIM(C.CONSIGNEE_ADD1) || '/', '')
                || NVL2(TRIM(D.LOCATION), TRIM(D.LOCATION) || ' : ' || TRIM(D.CITY), TRIM(D.CITY)))
        END AS CONSIGNEE_NAME,
        p.QTY,
        p.RATE,
        p.VALUE AS DATAVALUE
    FROM
        T82_PO_DETAIL p
    JOIN T06_CONSIGNEE C ON p.CONSIGNEE_CD = C.CONSIGNEE_CD
    JOIN T03_CITY D ON C.CONSIGNEE_CITY = D.CITY_CD
    WHERE
        p.CASE_NO = p_case_no
        AND NVL(p.IsDeleted ,0) =0
    ORDER BY
        p.ITEM_SRNO;
END;

create or replace PROCEDURE SP_GetConsignee (
    p_RLY_NONRLY IN VARCHAR2,
    p_client IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR
)
AS
BEGIN
    IF p_RLY_NONRLY = 'P' THEN
        OPEN p_Result FOR
            SELECT A.CONSIGNEE_CD,
                   (A.CONSIGNEE_CD || '-' || NVL2(TRIM(A.CONSIGNEE_DESIG), TRIM(A.CONSIGNEE_DESIG) || '/', '') ||
                   NVL2(TRIM(A.CONSIGNEE_DEPT), TRIM(A.CONSIGNEE_DEPT) || '/', '') ||
                   NVL2(TRIM(A.CONSIGNEE_FIRM), TRIM(A.CONSIGNEE_FIRM) || '/', '') ||
                   NVL2(TRIM(A.CONSIGNEE_ADD1), TRIM(A.CONSIGNEE_ADD1) || '/', '') ||
                   NVL2(TRIM(B.LOCATION), TRIM(B.LOCATION) || ' : ' || TRIM(B.CITY), TRIM(B.CITY))) CONSIGNEE_NAME
            FROM T06_CONSIGNEE A, T03_CITY B
            WHERE A.CONSIGNEE_CITY = B.CITY_CD AND A.CONSIGNEE_TYPE = 'P'
            ORDER BY (NVL2(TRIM(A.CONSIGNEE_DESIG), TRIM(A.CONSIGNEE_DESIG) || '/', '') ||
                      NVL2(TRIM(A.CONSIGNEE_DEPT), TRIM(A.CONSIGNEE_DEPT) || '/', '') ||
                      NVL2(TRIM(A.CONSIGNEE_FIRM), TRIM(A.CONSIGNEE_FIRM) || '/', '') ||
                      NVL2(TRIM(A.CONSIGNEE_ADD1), TRIM(A.CONSIGNEE_ADD1) || '/', '') ||
                      NVL2(TRIM(B.LOCATION), TRIM(B.LOCATION) || ' : ' || TRIM(B.CITY), TRIM(B.CITY)));
    ELSE 
        IF p_client != '0' THEN
            OPEN p_Result FOR
            SELECT A.CONSIGNEE_CD,
                   (A.CONSIGNEE_CD || '-' || NVL2(TRIM(A.CONSIGNEE_DESIG), TRIM(A.CONSIGNEE_DESIG) || '/', '') ||
                   NVL2(TRIM(A.CONSIGNEE_DEPT), TRIM(A.CONSIGNEE_DEPT) || '/', '') ||
                   NVL2(TRIM(A.CONSIGNEE_FIRM), TRIM(A.CONSIGNEE_FIRM) || '/', '') ||
                   NVL2(TRIM(A.CONSIGNEE_ADD1), TRIM(A.CONSIGNEE_ADD1) || '/', '') ||
                   NVL2(TRIM(B.LOCATION), TRIM(B.LOCATION) || ' : ' || TRIM(B.CITY), TRIM(B.CITY))) CONSIGNEE_NAME
            FROM T06_CONSIGNEE A, T03_CITY B
            WHERE A.CONSIGNEE_CITY = B.CITY_CD AND UPPER(TRIM(A.CONSIGNEE_FIRM)) = UPPER(TRIM(p_client))
            ORDER BY (NVL2(TRIM(A.CONSIGNEE_DESIG), TRIM(A.CONSIGNEE_DESIG) || '/', '') ||
                      NVL2(TRIM(A.CONSIGNEE_DEPT), TRIM(A.CONSIGNEE_DEPT) || '/', '') ||
                      NVL2(TRIM(A.CONSIGNEE_FIRM), TRIM(A.CONSIGNEE_FIRM) || '/', '') ||
                      NVL2(TRIM(A.CONSIGNEE_ADD1), TRIM(A.CONSIGNEE_ADD1) || '/', '') ||
                      NVL2(TRIM(B.LOCATION), TRIM(B.LOCATION) || ' : ' || TRIM(B.CITY), TRIM(B.CITY)));
            ELSE
                OPEN p_Result FOR
                    SELECT A.CONSIGNEE_CD,
                           (A.CONSIGNEE_CD || '-' || NVL2(TRIM(A.CONSIGNEE_DESIG), TRIM(A.CONSIGNEE_DESIG) || '/', '') ||
                           NVL2(TRIM(A.CONSIGNEE_DEPT), TRIM(A.CONSIGNEE_DEPT) || '/', '') ||
                           NVL2(TRIM(A.CONSIGNEE_FIRM), TRIM(A.CONSIGNEE_FIRM) || '/', '') ||
                           NVL2(TRIM(A.CONSIGNEE_ADD1), TRIM(A.CONSIGNEE_ADD1) || '/', '') ||
                           NVL2(TRIM(B.LOCATION), TRIM(B.LOCATION) || ' : ' || TRIM(B.CITY), TRIM(B.CITY))) CONSIGNEE_NAME
                    FROM T06_CONSIGNEE A, T03_CITY B
                    WHERE A.CONSIGNEE_CITY = B.CITY_CD AND A.CONSIGNEE_CD = 0
                    ORDER BY (NVL2(TRIM(A.CONSIGNEE_DESIG), TRIM(A.CONSIGNEE_DESIG) || '/', '') ||
                              NVL2(TRIM(A.CONSIGNEE_DEPT), TRIM(A.CONSIGNEE_DEPT) || '/', '') ||
                              NVL2(TRIM(A.CONSIGNEE_FIRM), TRIM(A.CONSIGNEE_FIRM) || '/', '') ||
                              NVL2(TRIM(A.CONSIGNEE_ADD1), TRIM(A.CONSIGNEE_ADD1) || '/', '') ||
                              NVL2(TRIM(B.LOCATION), TRIM(B.LOCATION) || ' : ' || TRIM(B.CITY), TRIM(B.CITY)));
            END IF;
    END IF;
END;


==================================== Menu Role ========================

CREATE TABLE USERROLES (
    ID NUMBER(6) PRIMARY KEY,
    ROLE_ID NUMBER(6,0) NOT NULL,
    USER_ID NUMBER(6,0) ,
    USERTYPE VARCHAR2(20 BYTE),
    CREATEDBY  NUMBER(6,0),
    CREATEDDATE TIMESTAMP(6) WITH TIME ZONE,
    UPDATEDBY  NUMBER(6,0),
    UPDATEDDATE TIMESTAMP(6) WITH TIME ZONE,
    ISDELETED NUMBER(2,0)
);

CREATE SEQUENCE USERROLESSeq
    START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;

ALTER TABLE USERROLES
    MODIFY ID NUMBER(6,0) DEFAULT USERROLESSeq.nextval;


CREATE TABLE Menu_Master (
    ID NUMBER(6) GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    ParentID NUMBER(6),
    ControllerName NVARCHAR2(50),
    ActionName VARCHAR2(50),
    Title NVARCHAR2(50),
    MenuDescription NVARCHAR2(250),
    Role_Id NUMBER(6),
    IconCssClass NVARCHAR2(50),
    IsActive NUMBER(1),
    SortOrder NUMBER(6),
    IconPath VARCHAR2(50),
    IsDisplay NUMBER(1)
);

ALTER TABLE Menu_Master
ADD CONSTRAINT DF_Menu_Master_IsActive DEFAULT 1 FOR IsActive;

ALTER TABLE Menu_Master
ADD CONSTRAINT FK_Menu_Master_Role_Id_ROLES FOREIGN KEY (Role_Id)
REFERENCES ROLES (Role_Id);


CREATE TABLE MenuRoleMapping (
    ID NUMBER(6,0) GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    RoleID NUMBER(6,0),
    MenuID NUMBER(6,0),
    IsActive NUMBER(1),
    CREATEDBY  NUMBER(6,0),
    CREATEDDATE TIMESTAMP(6) WITH TIME ZONE,
    UPDATEDBY  NUMBER(6,0),
    UPDATEDDATE TIMESTAMP(6) WITH TIME ZONE,
    ISDELETED NUMBER(2,0),
    IsAdd NUMBER(1),
    IsEdit NUMBER(1),
    IsDelete NUMBER(1),
    IsView NUMBER(1)
);


create or replace PROCEDURE SP_GetMenuMaster (
    p_RoleID IN NUMBER,
    p_Result OUT SYS_REFCURSOR
)
AS
BEGIN
    OPEN p_Result FOR
        SELECT c.ID AS MenuId,
               c.TITLE,
               c.PARENTID AS ParentId,
               c.Sortorder AS SortOrder,
               c.CONTROLLERNAME AS ControllerName,
               c.ACTIONNAME AS ActionName,
               c.ICONPATH AS IconPath,
               mrm.ROLEID AS Role_Id,
               COALESCE(mrm.IsAdd, 0) AS IsAdd,
                COALESCE(mrm.IsEdit, 0) AS IsEdit,
                COALESCE(mrm.PIsDelete, 0) AS PIsDelete,
                COALESCE(mrm.IsView, 0) AS IsView
        FROM Menu_Master c
        INNER JOIN MenuRoleMapping mrm ON mrm.MENUID = c.ID
        WHERE TO_CHAR(mrm.MENUID) = TO_CHAR(c.ID)
          AND mrm.ROLEID = p_RoleID
          AND c.ISACTIVE = 1
          AND mrm.ISACTIVE = 1
          AND(mrm.ISDELETED =0 or mrm.ISDELETED is null) 
        ORDER BY c.SORTORDER;

END;


==============

ALTER TABLE T103_VEND_DOCS 
ADD ID NUMBER(6,0) ;
CREATE SEQUENCE T103_VEND_DOCS_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;
UPDATE T103_VEND_DOCS
   SET ID = T103_VEND_DOCS_seq.nextval;
ALTER TABLE T103_VEND_DOCS
    MODIFY ID NUMBER(6,0) DEFAULT T103_VEND_DOCS_seq.nextval;

    =================

create or replace PROCEDURE SP_GetVendorDocumentDetails (
p_VEND_CD IN VARCHAR2,
p_DOC_TYPE IN VARCHAR2,
p_Result OUT SYS_REFCURSOR
)
AS
BEGIN
    OPEN p_Result FOR
        SELECT VEND_CD,
               DOC_TYPE,
               EQUIP_MK_SL,
               CALIB_CERT_NO,
               EQUIP_CLBR_CERT_SNO,
               EQUIP_NAME,
               EQUIP_RANGE,
               CALIBRATED_BY,
               DT_OF_CALIB,
               NEXT_DT_CALIB,
               EQUIP_DESC,
               NABL_ACC_DET,
               'DOC/' || VEND_CD || '_||_' || DOC_TYPE || '.PDF' AS V_DOC
        FROM t104_vend_equip_clbr_cert
        WHERE VEND_CD = p_VEND_CD
          AND DOC_TYPE = p_DOC_TYPE
        ORDER BY DT_OF_CALIB;
END;


=====================


CREATE TABLE EmailConfiguration (
    Id NUMBER(6,0) PRIMARY KEY,
    Email VARCHAR2(255),
    DisplayName VARCHAR2(255),
    Host VARCHAR2(255),
    Port NUMBER(6,0),
    Username VARCHAR2(255),
    Password VARCHAR2(255),
    EnableSsl NUMBER(1),
    UseDefaultCredentials NUMBER(1)
);

CREATE SEQUENCE EmailConfigurationSeq
    START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;

 ==============================

    create or replace PROCEDURE GET_VENDOR_INFO
(
    IN_CASE_NO IN VARCHAR2, 
    p_Result OUT SYS_REFCURSOR
)
AS
    p_VEND_CD NUMBER;
    p_VEND_NAME VARCHAR2(255);
    p_VEND_ADDRESS VARCHAR2(255);
    p_VEND_EMAIL VARCHAR2(255);
BEGIN
    SELECT
        T13.VEND_CD,
        T05.VEND_NAME,
        NVL2(T05.VEND_ADD2, T05.VEND_ADD1 || '/' || T05.VEND_ADD2, T05.VEND_ADD1) || '/' || T03.CITY AS VEND_ADDRESS,
        T05.VEND_EMAIL
    INTO
        p_VEND_CD,
        p_VEND_NAME,
        p_VEND_ADDRESS,
        p_VEND_EMAIL
    FROM
        T13_PO_MASTER T13
    JOIN
        T05_VENDOR T05 ON T13.VEND_CD = T05.VEND_CD
    JOIN
        T03_CITY T03 ON T05.VEND_CITY_CD = T03.CITY_CD
    WHERE
        T13.CASE_NO = IN_CASE_NO;

    OPEN p_Result FOR
        SELECT VEND_EMAIL FROM T05_VENDOR WHERE VEND_CD = p_VEND_CD;
END;

==============================
CREATE OR REPLACE PROCEDURE GENERATE_REAL_CASE_NO
(
    IN_REGION_CD IN CHAR,
    IN_TEMP_CASE_NO IN CHAR,
    IN_TEMP_USER_ID IN CHAR,
    p_Result OUT SYS_REFCURSOR
)
IS
    CURSOR po_detail IS
    SELECT ITEM_SRNO, CONSIGNEE_CD, BPO_CD
    FROM T82_PO_DETAIL
    WHERE CASE_NO = IN_TEMP_CASE_NO;
    r1 po_detail%ROWTYPE;
    w_ctr CHAR(5) := NULL;
    w_sno CHAR(4) := NULL;
    w_Case_No CHAR(9) := NULL;
    w_Purchaser NUMBER(8) := NULL;
    w_Rly_Cd VARCHAR2(50) := NULL;
    my_exception EXCEPTION;
    OUT_ERR_CD NUMBER := 0;
    OUT_CASE_NO CHAR(9) := NULL;
    p_Result_Cursor SYS_REFCURSOR;
BEGIN
    ---
    SELECT PURCHASER_CD, TRIM(RLY_CD)
    INTO w_Purchaser, w_Rly_Cd
    FROM T80_PO_MASTER
    WHERE REGION_CODE = IN_REGION_CD AND CASE_NO = IN_TEMP_CASE_NO;

    IF (w_Purchaser = 0) OR (TRIM(w_Rly_Cd) = '0') OR (w_Purchaser IS NULL) OR (TRIM(w_Rly_Cd) IS NULL) THEN
        OUT_ERR_CD := 2;
        RAISE my_exception;
    END IF;
    ---
    FOR r1 IN po_detail LOOP
        IF r1.CONSIGNEE_CD = 0 OR TRIM(r1.BPO_CD) = '0' THEN
            OUT_ERR_CD := 3;
            RAISE my_exception;
            EXIT;
        END IF;
    END LOOP;
    ---
    SELECT REGION_CODE || TO_CHAR(PO_DT, 'YYMM')
    INTO w_ctr
    FROM T80_PO_MASTER
    WHERE REGION_CODE = IN_REGION_CD AND CASE_NO = IN_TEMP_CASE_NO;
    ---
    SELECT LPAD(NVL(MAX(TO_NUMBER(NVL(SUBSTR(CASE_NO, 6, 4), 0))), 0) + 1, 4, '0')
    INTO w_sno
    FROM T13_PO_MASTER
    WHERE REGION_CODE = IN_REGION_CD AND SUBSTR(CASE_NO, 1, 5) = w_ctr;
    ---
    OUT_ERR_CD := 4;
    OUT_CASE_NO := w_ctr || w_sno;

    -- Explicitly list the columns in the INSERT INTO statements
   Insert into T13_PO_MASTER(case_no,purchaser_cd,stock_nonstock,rly_nonrly,po_or_letter,po_no,l5no_po,po_dt,recv_dt,vend_cd,rly_cd,region_code,user_id,datetime,
   remarks,inspecting_agency,poi_cd,po_source,pending_charges) 
Select OUT_CASE_NO,PURCHASER_CD,STOCK_NONSTOCK,RLY_NONRLY,PO_OR_LETTER,PO_NO,
substr(PO_NO,LENGTH(PO_NO)-4,5),
PO_DT,RECV_DT,VEND_CD,RLY_CD,REGION_CODE,IN_TEMP_USER_ID,DATETIME,REMARKS,'R',POI_CD,'V',0 
From T80_PO_MASTER Where  REGION_CODE =IN_REGION_CD and CASE_NO=IN_TEMP_CASE_NO;


    ---
    OUT_ERR_CD := 5;
    INSERT INTO T14_PO_BPO
    (CASE_NO, CONSIGNEE_CD, BPO_CD)
    SELECT UNIQUE OUT_CASE_NO, CONSIGNEE_CD, BPO_CD
    FROM T82_PO_DETAIL
    WHERE CASE_NO = IN_TEMP_CASE_NO;
    ---
    OUT_ERR_CD := 6;
    
    Insert into T15_PO_DETAIL (case_no,item_srno,item_desc,consignee_cd,qty,rate,uom_cd,basic_value,sales_tax_per,
    sales_tax,excise_type,excise_per,excise,discount_type,discount_per,discount,other_charges,value,
    delv_dt,ext_delv_dt,user_id,datetime,ot_charge_type,ot_charge_per,item_cd,
    pl_no)
    Select OUT_CASE_NO,ITEM_SRNO,ITEM_DESC,CONSIGNEE_CD,QTY,RATE,UOM_CD,BASIC_VALUE,SALES_TAX_PER,SALES_TAX,EXCISE_TYPE,EXCISE_PER,EXCISE,DISCOUNT_TYPE,DISCOUNT_PER,DISCOUNT,OTHER_CHARGES,
    VALUE,DELV_DT,EXT_DELV_DT,IN_TEMP_USER_ID,DATETIME,OT_CHARGE_TYPE,OT_CHARGE_PER, ITEM_CD,PL_NO 
    From T82_PO_DETAIL Where CASE_NO=IN_TEMP_CASE_NO;

    ---
    OUT_ERR_CD := 7;
    UPDATE T80_PO_MASTER
    SET REAL_CASE_NO = OUT_CASE_NO
    WHERE CASE_NO = IN_TEMP_CASE_NO;
    ---
    OUT_ERR_CD := 0;
    COMMIT;

    -- Open the cursor for the result
    OPEN p_Result_Cursor FOR
    SELECT OUT_ERR_CD AS ERR_CD, OUT_CASE_NO AS CASE_NO
    FROM DUAL;
    p_Result := p_Result_Cursor;

EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        ROLLBACK;
    WHEN NO_DATA_FOUND THEN
        ROLLBACK;
    WHEN my_exception THEN
        ROLLBACK;
    WHEN OTHERS THEN
        ROLLBACK;
END;
/



=======================
ALTER TABLE T78_CENTRAL_QOI ADD CREATEDBY  NUMBER(6,0)
ALTER TABLE T78_CENTRAL_QOI ADD CREATEDDATE TIMESTAMP(6) WITH TIME ZONE
ALTER TABLE T78_CENTRAL_QOI ADD UPDATEDBY  NUMBER(6,0)
ALTER TABLE T78_CENTRAL_QOI ADD UPDATEDDATE TIMESTAMP(6) WITH TIME ZONE
ALTER TABLE T78_CENTRAL_QOI ADD ISDELETED NUMBER(2,0)


ALTER TABLE T79_CENTRAL_QOINSP ADD CREATEDBY  NUMBER(6,0)
ALTER TABLE T79_CENTRAL_QOINSP ADD CREATEDDATE TIMESTAMP(6) WITH TIME ZONE
ALTER TABLE T79_CENTRAL_QOINSP ADD UPDATEDBY  NUMBER(6,0)
ALTER TABLE T79_CENTRAL_QOINSP ADD UPDATEDDATE TIMESTAMP(6) WITH TIME ZONE
ALTER TABLE T79_CENTRAL_QOINSP ADD ISDELETED NUMBER(2,0)

===========================

ALTER TABLE T81_CR_REJ ADD ID  NUMBER(6,0) 
ALTER TABLE T81_CR_REJ ADD CREATEDBY  NUMBER(6,0)
ALTER TABLE T81_CR_REJ ADD CREATEDDATE TIMESTAMP(6) WITH TIME ZONE
ALTER TABLE T81_CR_REJ ADD UPDATEDBY  NUMBER(6,0)
ALTER TABLE T81_CR_REJ ADD UPDATEDDATE TIMESTAMP(6) WITH TIME ZONE
ALTER TABLE T81_CR_REJ ADD ISDELETED NUMBER(2,0)



CREATE SEQUENCE T81_CR_REJSeq
    START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;

UPDATE T81_CR_REJ
   SET ID = T81_CR_REJSeq.nextval;
   
   ALTER TABLE T81_CR_REJ
ADD CONSTRAINT T81_CR_REJ_pk PRIMARY KEY (ID);

ALTER TABLE T81_CR_REJ
    MODIFY ID NUMBER(6,0) DEFAULT T81_CR_REJSeq.nextval;

    ===============================

CREATE SEQUENCE T57_ONGOING_CONTRACTSSeq
    START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;

ALTER TABLE T57_ONGOING_CONTRACTS
    MODIFY CONTRACT_ID NUMBER(8,0) DEFAULT T57_ONGOING_CONTRACTSSeq.nextval;

    ===============================

    ALTER TABLE T63_EXP ADD CREATEDBY  NUMBER(6,0)
ALTER TABLE T63_EXP ADD CREATEDDATE TIMESTAMP(6) WITH TIME ZONE
ALTER TABLE T63_EXP ADD UPDATEDBY  NUMBER(6,0)
ALTER TABLE T63_EXP ADD UPDATEDDATE TIMESTAMP(6) WITH TIME ZONE
ALTER TABLE T63_EXP ADD ISDELETED NUMBER(2,0)

===============
  ALTER TABLE T66TechRef ADD CREATEDBY  NUMBER(6,0)
ALTER TABLE T66TechRef ADD CREATEDDATE TIMESTAMP(6) WITH TIME ZONE
ALTER TABLE T66TechRef ADD UPDATEDBY  NUMBER(6,0)
ALTER TABLE T66TechRef ADD UPDATEDDATE TIMESTAMP(6) WITH TIME ZONE
ALTER TABLE T66TechRef ADD ISDELETED NUMBER(2,0)

===============
ALTER TABLE T66_TECH_REF ADD ID  NUMBER(6,0)

CREATE SEQUENCE T66_TECH_REFSeq
    START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;

ALTER TABLE T66_TECH_REF
    MODIFY ID NUMBER(6,0) DEFAULT T66_TECH_REFSeq.nextval;

      UPDATE T66_TECH_REF
   SET ID = T66_TECH_REFSeq.nextval;

      ALTER TABLE T66_TECH_REF
ADD CONSTRAINT T66_TECH_REF_pk PRIMARY KEY (ID);

 =====================

 create or replace PROCEDURE GENERATE_TR_ID_New
(
    IN_TECH_DT IN varchar2, 
    IN_REGION_CD IN varchar2, 
    p_result_cursor OUT SYS_REFCURSOR
) AS
    w_YY VARCHAR2(500);
    w_ctr VARCHAR2(500);
    w_sno VARCHAR2(500) := null;
    my_exception exception;

BEGIN
    ---
    If to_number(substr(IN_TECH_DT, 3, 2)) < 4 then
        w_YY := lpad(to_number(substr(IN_TECH_DT, 7, 2)) - 1, 2, '0');
    Else
        w_YY := substr(IN_TECH_DT, 7, 2);
    End If;

    w_ctr := IN_REGION_CD || w_YY;

    OPEN p_result_cursor FOR   
        Select 
            w_ctr || '_' || lpad(nvl(max(to_number(nvl(substr(TECH_ID, 5, 3), 0))), 0) + 1, 3, '0') as OUT_TECH_ID,
            CASE WHEN length(w_ctr || '_' || lpad(nvl(max(to_number(nvl(substr(TECH_ID, 5, 3), 0))), 0) + 1, 3, '0')) <> 7 THEN -2 ELSE 0 END as OUT_ERR_CD
        From T66_TECH_REF 
        where substr(TECH_ID, 1, 3) = w_ctr;

END;

====================
create or replace PROCEDURE SP_GetMenuMapping
(
    p_cursor OUT SYS_REFCURSOR
)
AS
BEGIN
    OPEN p_cursor FOR
        SELECT
            mm.ROLEID,
            r.ROLENAME AS rolename,
            --LISTAGG(m.title, ',') WITHIN GROUP (ORDER BY m.title) AS titles
            '' AS titles
        FROM
            MenuRoleMapping mm 
            JOIN MENU_MASTER m ON mm.MENUID = m.ID
            JOIN ROLES r ON mm.ROLEID = r.ROLE_ID
            WHERE (mm.ISDELETED =0 or mm.ISDELETED is null) 
        GROUP BY
            mm.ROLEID,r.ROLENAME;
END;

================

//create or replace PROCEDURE SP_Get_Menu_Hierarchy_By_Using_RoleID
//(
//    p_ROLEID IN NUMBER,
//    p_cursor OUT SYS_REFCURSOR
//)
//AS
//BEGIN
//    OPEN p_cursor FOR
//        SELECT
//            CONNECT_BY_ROOT(m.ID) AS RootParentID,
//            m.ID AS ParentID,
//            NULL AS ChildID,
//            m.TITLE AS ParentTitle,
//            NULL AS ChildTitle,
//            m.ID AS ID,
//            CASE
//                WHEN (SELECT COUNT(*) FROM MenuRoleMapping WHERE (ISDELETED =0 or ISDELETED is null) and RoleID = p_ROLEID AND MENUID = m.ID) > 0 THEN 'True'
//                ELSE 'False'
//            END AS Selected,
//            (SELECT IsAdd FROM MenuRoleMapping WHERE(ISDELETED = 0 or ISDELETED is null) and RoleID = p_ROLEID AND MENUID = m.ID) As IsAdd,
//            (SELECT IsEdit FROM MenuRoleMapping WHERE(ISDELETED = 0 or ISDELETED is null) and RoleID = p_ROLEID AND MENUID = m.ID) As IsEdit,
//            (SELECT PIsDelete FROM MenuRoleMapping WHERE(ISDELETED = 0 or ISDELETED is null) and RoleID = p_ROLEID AND MENUID = m.ID) As PIsDelete,
//            (SELECT IsView FROM MenuRoleMapping WHERE(ISDELETED = 0 or ISDELETED is null) and RoleID = p_ROLEID AND MENUID = m.ID) As IsView
//        FROM MENU_MASTER m
//        WHERE m.PARENTID IS NULL
//        AND m.IsDisplay = 1
//        CONNECT BY PRIOR m.ID = m.PARENTID

//        UNION ALL

//        SELECT
//            CONNECT_BY_ROOT(p.ID) AS RootParentID,
//            p.PARENTID AS ParentID,
//            c.ID AS ChildID,
//            p.TITLE AS ParentTitle,
//            c.TITLE AS ChildTitle,
//            c.ID AS ID,
//            CASE
//                WHEN (SELECT COUNT(*) FROM MenuRoleMapping WHERE (ISDELETED =0 or ISDELETED is null) and RoleID = p_ROLEID AND MENUID = c.ID) > 0 THEN 'True'
//                ELSE 'False'
//            END AS Selected,
//            (SELECT IsAdd FROM MenuRoleMapping WHERE(ISDELETED = 0 or ISDELETED is null) and RoleID = p_ROLEID AND MENUID = c.ID) As IsAdd,
//            (SELECT IsEdit FROM MenuRoleMapping WHERE(ISDELETED = 0 or ISDELETED is null) and RoleID = p_ROLEID AND MENUID = c.ID) As IsEdit,
//            (SELECT PIsDelete FROM MenuRoleMapping WHERE(ISDELETED = 0 or ISDELETED is null) and RoleID = p_ROLEID AND MENUID = c.ID) As PIsDelete,
//            (SELECT IsView FROM MenuRoleMapping WHERE(ISDELETED = 0 or ISDELETED is null) and RoleID = p_ROLEID AND MENUID = c.ID) As IsView
//        FROM MENU_MASTER p
//        JOIN MENU_MASTER c ON p.ID = c.PARENTID
//        AND p.IsDisplay = 1
//        CONNECT BY PRIOR c.ID = c.PARENTID AND PRIOR p.ID = p.PARENTID

//        ORDER BY RootParentID, ParentID, ChildID NULLS FIRST;
//END;

create or replace PROCEDURE SP_Get_Menu_Hierarchy_By_Using_RoleID
(
    p_ROLEID IN NUMBER,
    p_cursor OUT SYS_REFCURSOR
)
AS
BEGIN
OPEN p_cursor FOR
WITH RecursiveMenu (id, parentid, controllername, actionname, title, menudescription, role_id, iconcssclass, isactive, sortorder, iconpath, isdisplay,
Selected,IsAdd,IsEdit,PIsDelete,IsView) AS (
    SELECT
        v.id,
        v.parentid,
        v.controllername,
        v.actionname,
        v.title,
        v.menudescription,
        v.role_id,
        v.iconcssclass,
        v.isactive,
        v.sortorder,
        v.iconpath,
        v.isdisplay,
        CASE
            WHEN (SELECT COUNT(*) FROM MenuRoleMapping WHERE (ISDELETED = 0 OR ISDELETED IS NULL) AND RoleID = p_ROLEID AND MENUID = v.id) > 0 THEN 'True'
            ELSE 'False'
        END AS Selected,
        (SELECT IsAdd FROM MenuRoleMapping WHERE (ISDELETED = 0 OR ISDELETED IS NULL) AND RoleID = p_ROLEID AND MENUID = v.id) AS IsAdd,
        (SELECT IsEdit FROM MenuRoleMapping WHERE (ISDELETED = 0 OR ISDELETED IS NULL) AND RoleID = p_ROLEID AND MENUID = v.id) AS IsEdit,
        (SELECT PIsDelete FROM MenuRoleMapping WHERE (ISDELETED = 0 OR ISDELETED IS NULL) AND RoleID = p_ROLEID AND MENUID = v.id) AS PIsDelete,
        (SELECT IsView FROM MenuRoleMapping WHERE (ISDELETED = 0 OR ISDELETED IS NULL) AND RoleID = p_ROLEID AND MENUID = v.id) AS IsView
    FROM
        menu_master v
    WHERE
        parentid IS NULL
    UNION ALL
    SELECT
        m.id,
        m.parentid,
        m.controllername,
        m.actionname,
        m.title,
        m.menudescription,
        m.role_id,
        m.iconcssclass,
        m.isactive,
        m.sortorder,
        m.iconpath,
        m.isdisplay,
        CASE
            WHEN (SELECT COUNT(*) FROM MenuRoleMapping WHERE (ISDELETED = 0 OR ISDELETED IS NULL) AND RoleID = p_ROLEID AND MENUID = m.id) > 0 THEN 'True'
            ELSE 'False'
        END AS Selected,
        (SELECT IsAdd FROM MenuRoleMapping WHERE (ISDELETED = 0 OR ISDELETED IS NULL) AND RoleID = p_ROLEID AND MENUID = m.id) AS IsAdd,
        (SELECT IsEdit FROM MenuRoleMapping WHERE (ISDELETED = 0 OR ISDELETED IS NULL) AND RoleID = p_ROLEID AND MENUID = m.id) AS IsEdit,
        (SELECT PIsDelete FROM MenuRoleMapping WHERE (ISDELETED = 0 OR ISDELETED IS NULL) AND RoleID = p_ROLEID AND MENUID = m.id) AS PIsDelete,
        (SELECT IsView FROM MenuRoleMapping WHERE (ISDELETED = 0 OR ISDELETED IS NULL) AND RoleID = p_ROLEID AND MENUID = m.id) AS IsView
    FROM
        menu_master m
    INNER JOIN
        RecursiveMenu rm ON m.parentid = rm.id
)


SELECT
    id,
    parentid,
    controllername,
    actionname,
    title,
    menudescription,
    role_id,
    iconcssclass,
    isactive,
    sortorder,
    iconpath,
    isdisplay,
    Selected,
    IsAdd,
    IsEdit,
    PIsDelete,
    IsView
FROM
    RecursiveMenu
START WITH
    parentid IS NULL
CONNECT BY
    PRIOR id = parentid
ORDER SIBLINGS BY
    parentid, id; 


END;

========================

SELECT
    id,
    parentid,
    controllername,
    actionname,
    title,
    menudescription,
    role_id,
    iconcssclass,
    isactive,
    sortorder,
    iconpath,
    isdisplay,
    Selected,
    IsAdd,
    IsEdit,
    PIsDelete,
    IsView
FROM
    RecursiveMenu
START WITH
    parentid IS NULL
CONNECT BY
    PRIOR id = parentid
ORDER SIBLINGS BY
    parentid, id; 


END;

====================
create or replace PROCEDURE SP_GET_Administrator_PO_DETAILS (
    p_cs_no VARCHAR2,
    p_po_no VARCHAR2,
    p_po_date VARCHAR2,
    p_vend_name VARCHAR2,
    p_region_code VARCHAR2,
    p_result_cursor OUT SYS_REFCURSOR
) AS
    str1 VARCHAR2(4000);
BEGIN
    str1 := 'SELECT m.CASE_NO, m.PO_NO, TO_CHAR(m.PO_DT, ''dd/mm/yyyy'') AS PO_DT, ' ||
            '(DECODE(m.RLY_NONRLY, ''R'', ''Railway'', ''P'', ''Private'', ''S'', ''State Government'', ''F'', ''Foreign Railways'', ''U'', ''PSU'') || ''('' || m.RLY_CD || '')'') AS RLY_CD, ' ||
            '(v.VEND_NAME || ''('' || NVL2(t.LOCATION, t.LOCATION || '' : '' || t.CITY, t.CITY) || '')'') AS VEND_NAME, ' ||
            '(NVL2(TRIM(c.CONSIGNEE_DESIG), TRIM(c.CONSIGNEE_DESIG) || ''/'', '''') || NVL2(TRIM(c.CONSIGNEE_DEPT), TRIM(c.CONSIGNEE_DEPT) || ''/'', '''') || TRIM(c.CONSIGNEE_FIRM)) AS CONSIGNEE_S_NAME, ' ||
            'DECODE(m.INSPECTING_AGENCY, ''C'', ''Consignee'', ''X'', ''PO Cancelled'', ''RITES'') AS INSPECTING_AGENCY, ' ||
            'DECODE(PO_SOURCE, ''V'', ''VENDOR'', ''M'', ''MANUAL'', ''C'', ''IREPS'', ''OTHER'') AS SOURCE, ' ||
            'TO_CHAR(PO_DT, ''YYYY'') AS PO_YR, ''CASE_NO/'' || m.CASE_NO || ''.TIF'' AS PO_DOC, ' ||
            '''CASE_NO/'' || m.CASE_NO || ''.PDF'' AS PO_DOC1 ' ||
            'FROM T13_PO_MASTER m, T05_VENDOR v, T06_CONSIGNEE c, T03_CITY t ' ||
            'WHERE m.VEND_CD = v.VEND_CD ' ||
            'AND v.VEND_CITY_CD = t.CITY_CD ' ||
            'AND m.PURCHASER_CD = c.CONSIGNEE_CD(+) ' ||
            'AND m.REGION_CODE = ''' || p_region_code || '''';

    IF p_cs_no IS NOT NULL THEN
        str1 := str1 || 'AND TRIM(CASE_NO) = ''' || p_cs_no || ''' ';
    END IF;

    IF p_po_no IS NOT NULL THEN
        str1 := str1 || 'AND UPPER(TRIM(PO_NO)) LIKE UPPER(''%' || p_po_no || '%'') ';
    END IF;

    IF p_po_date IS NOT NULL THEN
        str1 := str1 || 'AND TO_CHAR(PO_DT, ''dd/mm/yyyy'') = ''' || p_po_date || ''' ';
    END IF;

    IF p_vend_name IS NOT NULL THEN
        str1 := str1 || 'AND UPPER(TRIM(v.VEND_NAME)) LIKE UPPER(''' || p_vend_name || '%'') ';
    END IF;

    str1 := str1 || 'ORDER BY CASE_NO ASC';

    OPEN p_result_cursor FOR str1;
END;


===============================

create or replace PROCEDURE SP_GET_RAILWAY_CODES (
    p_bpo_type VARCHAR2,
    p_result_cursor OUT SYS_REFCURSOR
) AS
    str1 VARCHAR2(4000);
BEGIN
    IF p_bpo_type = 'R' THEN
        str1 := 'SELECT RLY_CD FROM T91_RAILWAYS WHERE RLY_CD <> ''CORE'' ORDER BY RLY_CD';
    ELSIF p_bpo_type = 'P' THEN
        str1 := 'SELECT DISTINCT(UPPER(TRIM(BPO_RLY))) RLY_CD FROM T12_BILL_PAYING_OFFICER WHERE BPO_TYPE = ''P'' ORDER BY RLY_CD';
    ELSIF p_bpo_type = 'F' THEN
        str1 := 'SELECT DISTINCT(UPPER(TRIM(BPO_RLY))) RLY_CD FROM T12_BILL_PAYING_OFFICER WHERE BPO_TYPE = ''F'' ORDER BY RLY_CD';
    ELSIF p_bpo_type = 'U' THEN
        str1 := 'SELECT DISTINCT(UPPER(TRIM(BPO_RLY))) RLY_CD FROM T12_BILL_PAYING_OFFICER WHERE BPO_TYPE = ''U'' ORDER BY RLY_CD';
    ELSIF p_bpo_type = 'S' THEN
        str1 := 'SELECT DISTINCT(UPPER(TRIM(BPO_RLY))) RLY_CD FROM T12_BILL_PAYING_OFFICER WHERE BPO_TYPE = ''S'' ORDER BY RLY_CD';
    ELSE
        -- Handle invalid input here, or provide a default query
        str1 := 'SELECT RLY_CD FROM T91_RAILWAYS WHERE RLY_CD <> ''CORE'' ORDER BY RLY_CD';
    END IF;

    OPEN p_result_cursor FOR str1;
END;


==============
CREATE OR REPLACE PROCEDURE GET_VENDOR_DETAILSForDropDown (
    p_vend_cd IN VARCHAR2,
    p_result_cursor OUT SYS_REFCURSOR
)
AS
BEGIN
    OPEN p_result_cursor FOR
    SELECT V.VEND_CD as Value,
           (TRIM(V.VEND_NAME) || '/' || TRIM(V.VEND_ADD1) || '/' || NVL2(C.LOCATION, C.LOCATION || ' / ' || C.CITY, C.CITY)) AS Text
    FROM T05_VENDOR V
    JOIN T03_CITY C ON V.VEND_CITY_CD = C.CITY_CD
    WHERE V.VEND_NAME IS NOT NULL
    AND (TRIM(V.VEND_CD) = p_vend_cd OR p_vend_cd IS NULL)
    ORDER BY VEND_NAME;
END;
/

=======================

create or replace PROCEDURE GENERATE_CASE_NO (
    IN_REGION_CD IN VARCHAR2,
    IN_PO_DT IN VARCHAR2,
    p_result_cursor OUT SYS_REFCURSOR
) IS
    w_ctr VARCHAR2(100) := NULL;
    w_sno VARCHAR2(100) := NULL;
    w_Case_No VARCHAR2(500) := NULL;
BEGIN
    ---
    w_ctr := IN_REGION_CD || SUBSTR(IN_PO_DT, 9, 2) || SUBSTR(IN_PO_DT, 4, 2);

    SELECT LPAD(NVL(MAX(TO_NUMBER(NVL(SUBSTR(CASE_NO, 6, 4), 0))), 0) + 1, 4, '0')
    INTO w_sno
    FROM T13_PO_MASTER
    WHERE REGION_CODE = IN_REGION_CD AND SUBSTR(CASE_NO, 1, 5) = w_ctr;

    w_Case_No := w_ctr || w_sno;

    OPEN p_result_cursor FOR
        SELECT w_Case_No AS CaseNo, 0 AS ERR_CD FROM DUAL;

END;


===================


CREATE OR REPLACE PROCEDURE GET_PO_BPO_DETAILS (
    p_case_no IN VARCHAR2,
    p_result_cursor OUT SYS_REFCURSOR
)
AS
BEGIN
    OPEN p_result_cursor FOR
    SELECT P.CASE_NO,
           P.CONSIGNEE_CD,
           P.BPO_CD,
           (C.CONSIGNEE_CD || '-' || NVL2(TRIM(C.CONSIGNEE_DESIG), TRIM(C.CONSIGNEE_DESIG) || '/', '') || NVL2(TRIM(C.CONSIGNEE_DEPT), TRIM(C.CONSIGNEE_DEPT) || '/', '') || NVL2(TRIM(C.CONSIGNEE_FIRM), TRIM(C.CONSIGNEE_FIRM) || '/', '') || NVL2(TRIM(C.CONSIGNEE_ADD1), TRIM(C.CONSIGNEE_ADD1) || '/', '') || NVL2(TRIM(D.LOCATION), TRIM(D.LOCATION) || ' : ' || TRIM(D.CITY), TRIM(D.CITY))) AS CONSIGNEE_NAME,
           (B.BPO_CD || ' - ' || B.BPO_NAME || '/' || B.BPO_RLY || '/' || NVL2(B.BPO_ADD, B.BPO_ADD || '/', '') || NVL2(E.LOCATION, E.CITY || '/' || E.LOCATION, E.CITY)) AS BPO_NAME
    FROM T14_PO_BPO P
    JOIN T06_CONSIGNEE C ON P.CONSIGNEE_CD = C.CONSIGNEE_CD
    JOIN T12_BILL_PAYING_OFFICER B ON P.BPO_CD = B.BPO_CD
    JOIN T03_CITY D ON C.CONSIGNEE_CITY = D.CITY_CD
    JOIN T03_CITY E ON B.BPO_CITY_CD = E.CITY_CD
    WHERE P.CASE_NO = p_case_no;
END;
/

=====================
create or replace PROCEDURE SP_GET_PO_DETAILSForAdministrator(
    p_case_no IN VARCHAR2,
    p_result_cursor OUT SYS_REFCURSOR
)
AS
BEGIN
    OPEN p_result_cursor FOR
    SELECT p.CASE_NO, p.ITEM_SRNO, p.ITEM_DESC,
           (C.CONSIGNEE_CD || '-' || nvl2(trim(C.CONSIGNEE_DESIG), trim(C.CONSIGNEE_DESIG) || '/', '') ||
           nvl2(trim(C.CONSIGNEE_DEPT), trim(C.CONSIGNEE_DEPT) || '/', '') ||
           nvl2(trim(C.CONSIGNEE_FIRM), trim(C.CONSIGNEE_FIRM) || '/', '') ||
           NVL2(trim(C.CONSIGNEE_ADD1), trim(C.CONSIGNEE_ADD1) || '/', '') ||
           NVL2(trim(D.LOCATION), trim(D.LOCATION) || ' : ' || trim(D.CITY), trim(D.CITY))) AS CONSIGNEE_NAME,
           p.QTY, p.RATE, p.VALUE as DATAVALUE
    FROM T15_PO_DETAIL p
    JOIN T06_CONSIGNEE C ON p.CONSIGNEE_CD = C.CONSIGNEE_CD
    JOIN T03_CITY D ON C.CONSIGNEE_CITY = D.CITY_CD
    WHERE (p.IsDeleted is null or p.IsDeleted =0)  and p.CASE_NO = p_case_no
    ORDER BY p.ITEM_SRNO;
END;


===================

ALTER TABLE Vendor_Feedback 
ADD ID NUMBER(6,0) ;

CREATE SEQUENCE Vendor_Feedback_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;

UPDATE Vendor_Feedback
   SET ID = Vendor_Feedback_seq.nextval;
   
ALTER TABLE Vendor_Feedback
    MODIFY ID NUMBER(6,0) DEFAULT Vendor_Feedback_seq.nextval;
    
ALTER TABLE Vendor_Feedback
ADD CONSTRAINT Vendor_Feedback_pk  PRIMARY KEY (ID);

======================

ALTER TABLE CLIENT_FEEDBACK 
ADD ID NUMBER(6,0) ;

CREATE SEQUENCE CLIENT_FEEDBACK_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;

UPDATE CLIENT_FEEDBACK
   SET ID = CLIENT_FEEDBACK_seq.nextval;
   
ALTER TABLE CLIENT_FEEDBACK
    MODIFY ID NUMBER(6,0) DEFAULT CLIENT_FEEDBACK_seq.nextval;
    
ALTER TABLE CLIENT_FEEDBACK
ADD CONSTRAINT CLIENT_FEEDBACK_pk  PRIMARY KEY (ID);

======================
create or replace PROCEDURE SP_Get_ICCancelData (
    p_BKNo IN VARCHAR2,
    p_SetNo IN VARCHAR2,
    p_ISSUE_TO_IECD IN NUMBER,
    p_Region IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR
) IS
BEGIN
    OPEN p_Result FOR
    SELECT IC.BK_NO,
           IC.SET_NO,
           IE.IE_NAME,
           CASE IC.IC_STATUS
               WHEN 'C' THEN 'Cancelled'
               WHEN 'M' THEN 'Missing'
               WHEN 'L' THEN 'Lost'
           END AS IC_STATUS,
           IC.IC_STATUS as STATUS,
           TO_CHAR(IC.STATUS_DT, 'dd/mm/yyyy') AS STATUS_DT,
           CASE IC.REGION
               WHEN 'N' THEN 'Northern'
               WHEN 'W' THEN 'Western'
               WHEN 'E' THEN 'Eastern'
               WHEN 'S' THEN 'South'
               WHEN 'C' THEN 'Central'
           END AS REGION,
           IC.REGION AS REGIONV,
           IC.REMARKS,
           IC.Status
    FROM T16_IC_CANCEL IC
    INNER JOIN T09_IE IE ON IC.ISSUE_TO_IECD = IE.IE_CD
    WHERE (IC.BK_NO = UPPER(TRIM(p_BKNo)) OR p_BKNo IS NULL)
      AND (IC.SET_NO = UPPER(TRIM(p_SetNo)) OR p_SetNo IS NULL)
      AND (IC.ISSUE_TO_IECD = p_ISSUE_TO_IECD OR p_ISSUE_TO_IECD = 0)
      AND IC.REGION = p_Region AND (IC.ISDELETED = 0 or IC.ISDELETED is null)    
    ORDER BY IC.BK_NO, IC.SET_NO;
END;

===============
ALTER TABLE T36_BILL ADD CREATEDBY  NUMBER(6,0)
ALTER TABLE T36_BILL ADD CREATEDDATE TIMESTAMP(6) WITH TIME ZONE
ALTER TABLE T36_BILL ADD UPDATEDBY  NUMBER(6,0)
ALTER TABLE T36_BILL ADD UPDATEDDATE TIMESTAMP(6) WITH TIME ZONE
ALTER TABLE T36_BILL ADD ISDELETED NUMBER(2,0)  

=============

CREATE OR REPLACE PROCEDURE SP_GetBillData (
    p_Region IN VARCHAR2,
    p_BillNo IN VARCHAR2,
    p_BillFromDate IN VARCHAR2,
    p_BillToDate IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR
) IS
    v_Query VARCHAR2(1000);
BEGIN
    v_Query := 'SELECT BILL_NO, TO_CHAR(BILL_DT, ''dd/mm/yyyy'') AS BILL_DT, IC_NO, TO_CHAR(IC_DT, ''dd/mm/yyyy'') AS IC_DT, BILL_AMOUNT , BPO ,INSP_FEE, NVL(SERVICE_TAX,0)+NVL(EDU_CESS,0)+NVL(SHE_CESS,0) TAX ' ||
               'FROM T36_BILL ' ||
               'WHERE REGION = ''' || p_Region || '''';

    IF p_BillNo IS NOT NULL THEN
        v_Query := v_Query || ' AND TRIM(BILL_NO) = ''' || p_BillNo || '''';
    END IF;
   
    IF p_BillFromDate IS NOT NULL AND p_BillToDate IS NOT NULL THEN
         v_Query := v_Query || ' AND TO_CHAR(BILL_DT, ''dd/mm/yyyy'') BETWEEN ''' || p_BillFromDate || ''' AND ''' || p_BillToDate || '''';
    END IF;

    v_Query := v_Query || ' AND (ISDELETED = 0 OR ISDELETED IS NULL)';
    
    OPEN p_Result FOR v_Query ;
END SP_GetBillData;



=======================


CREATE TABLE T34_CENTRAL_ITEM_MASTER (
    ID NUMBER(6, 0) NOT NULL,
    RAIL_CD VARCHAR2(50 BYTE),
    RAIL_DESC VARCHAR2(100 BYTE),
    RAIL_LENGTH_METER VARCHAR2(20 BYTE),
    USER_ID VARCHAR2(20 BYTE),
    CREATEDBY NUMBER(6, 0),
    CREATEDDATE TIMESTAMP(6),
    UPDATEDBY NUMBER(6, 0),
    UPDATEDDATE TIMESTAMP(6),
    ISDELETED NUMBER(2, 0)
  );
ALTER TABLE T34_CENTRAL_ITEM_MASTER ADD (
  CONSTRAINT T34_CENTRAL_ITEM_MASTER_PK PRIMARY KEY (ID));

CREATE SEQUENCE T34_CENTRAL_ITEM_MASTER_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;

   
ALTER TABLE T34_CENTRAL_ITEM_MASTER
    MODIFY ID NUMBER(6,0) DEFAULT T34_CENTRAL_ITEM_MASTER_seq.nextval;
    
==============


CREATE TABLE T35_Central_Item_Detail (
    ID NUMBER(6, 0) NOT NULL,
    RAIL_ID NUMBER(6, 0) NOT NULL,
    RAIL_PRICE_PER_MT VARCHAR2(50 BYTE),
    PACKING_CHARGE VARCHAR2(100 BYTE),
    PRICE_DATE_FR Date ,
    PRICE_DATE_TO Date,
    ISACTIVE NUMBER(2,0),
    CREATEDBY NUMBER(6, 0),
    CREATEDDATE TIMESTAMP(6),
    UPDATEDBY NUMBER(6, 0),
    UPDATEDDATE TIMESTAMP(6),
    ISDELETED NUMBER(2, 0)
  );
ALTER TABLE T35_Central_Item_Detail ADD (
  CONSTRAINT T35_Central_Item_Detail_PK PRIMARY KEY (ID));

ALTER TABLE T35_Central_Item_Detail
ADD CONSTRAINT FK_T35_Central_Item_Detail_RAIL_ID_T34_CENTRAL_ITEM_MASTER FOREIGN KEY (RAIL_ID)
REFERENCES T34_CENTRAL_ITEM_MASTER (ID);

CREATE SEQUENCE T35_Central_Item_Detail_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;
   
ALTER TABLE T35_Central_Item_Detail
    MODIFY ID NUMBER(6,0) DEFAULT T35_Central_Item_Detail_seq.nextval;
    
==================
CREATE TABLE RegionalHRDataOfIE (
    ID NUMBER(6, 0) NOT NULL,
    IE_CD NUMBER(6, 0) NOT NULL,
    Disclipline VARCHAR2(50 BYTE),
    JoiningDate Date ,
    PostingDate Date,
    RetirementDate Date,
    TransferDate Date,
    DeputationFromDate Date,
    DeputationToDate Date,
    RepetriationDate Date,
    IETenureFromDate Date,
    IETenureToDate Date,
    CREATEDBY NUMBER(6, 0),
    CREATEDDATE TIMESTAMP(6),
    UPDATEDBY NUMBER(6, 0),
    UPDATEDDATE TIMESTAMP(6),
    ISDELETED NUMBER(2, 0)
  );
ALTER TABLE RegionalHRDataOfIE ADD (
  CONSTRAINT RegionalHRDataOfIE_PK PRIMARY KEY (ID));

ALTER TABLE RegionalHRDataOfIE
ADD CONSTRAINT FK_RegionalHRDataOfIE_IE_CD_T09_IE FOREIGN KEY (IE_CD)
REFERENCES T09_IE (IE_CD);

CREATE SEQUENCE RegionalHRDataOfIE_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;
   
ALTER TABLE RegionalHRDataOfIE
    MODIFY ID NUMBER(6,0) DEFAULT RegionalHRDataOfIE_seq.nextval;


==================================
CREATE TABLE Log_RegionalHRDataOfIE (
    LID  NUMBER(6,0) NOT NULL,
    ID NUMBER(6, 0) NOT NULL,
    IE_CD NUMBER(6, 0),
    Disclipline VARCHAR2(50 BYTE),
    JoiningDate Date ,
    PostingDate Date,
    RetirementDate Date,
    TransferDate Date,
    DeputationFromDate Date,
    DeputationToDate Date,
    RepetriationDate Date,
    IETenureFromDate Date,
    IETenureToDate Date,
    CREATEDBY NUMBER(6, 0),
    CREATEDDATE TIMESTAMP(6),
    UPDATEDBY NUMBER(6, 0),
    UPDATEDDATE TIMESTAMP(6),
    ISDELETED NUMBER(2, 0),
    ActionType VARCHAR2(50 BYTE),
    ActionDate TIMESTAMP(6),
    ActionUserID VARCHAR2(50 BYTE)
);

ALTER TABLE Log_RegionalHRDataOfIE ADD (
  CONSTRAINT Log_RegionalHRDataOfIE_pk PRIMARY KEY (LID));

CREATE SEQUENCE Log_RegionalHRDataOfIE_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;
   
   UPDATE Log_RegionalHRDataOfIE
   SET LID = Log_RegionalHRDataOfIE_seq.nextval;
   
ALTER TABLE Log_RegionalHRDataOfIE
    MODIFY LID NUMBER(6,0) DEFAULT Log_RegionalHRDataOfIE_seq.nextval;

  ======================


CREATE OR REPLACE TRIGGER Update_RegionalHRDataOfIE_Trigger
    BEFORE UPDATE ON RegionalHRDataOfIE
    FOR EACH ROW
BEGIN
    
    INSERT INTO Log_RegionalHRDataOfIE (
        id,
        ie_cd,
        disclipline,
        joiningdate,
        postingdate,
        retirementdate,
        transferdate,
        deputationfromdate,
        deputationtodate,
        repetriationdate,
        ietenurefromdate,
        ietenuretodate,
        createdby,
        createddate,
        updatedby,
        updateddate,
        isdeleted,
        ActionType,
        ActionDate,
        ActionUserID
    ) VALUES (
        :OLD.id,
        :OLD.ie_cd,
        :OLD.disclipline,
        :OLD.joiningdate,
        :OLD.postingdate,
        :OLD.retirementdate,
        :OLD.transferdate,
        :OLD.deputationfromdate,
        :OLD.deputationtodate,
        :OLD.repetriationdate,
        :OLD.ietenurefromdate,
        :OLD.ietenuretodate,
        :OLD.createdby,
        :OLD.createddate,
        :NEW.updatedby,
        SYSTIMESTAMP,
        :OLD.isdeleted,
        'U',
        SYSTIMESTAMP,
        :NEW.updatedby
    );
END;
/

========================


create or replace PROCEDURE SP_DetailedReport_POofSpecificValues(
    p_SelCriteria IN VARCHAR2,   
    p_Region IN VARCHAR2,
    p_frmDt IN VARCHAR2,
    p_toDt IN VARCHAR2,
    p_wAgency IN VARCHAR2,
    p_wClient IN VARCHAR2,
    p_wFrmAmt IN NUMBER,
    p_wToAmt IN NUMBER,
    p_Result OUT SYS_REFCURSOR
)
AS
BEGIN
    OPEN p_Result FOR
    SELECT
        P.CLIENT CLIENT,
        P.CASE_NO,
        P.PO_NO PO_NO,
        TO_CHAR(P.PO_DT, 'dd/mm/yyyy') PO_DT,
        P.PO_VALUE PO_VALUE,
        P.VENDOR VENDOR,
        P.CONSIGNEE CONSIGNEE,
        TRIM(T15.ITEM_DESC) ITEM_DESC
    FROM
    (
        SELECT
            T13.CASE_NO CASE_NO,
            T13.PO_NO PO_NO,
            T13.PO_DT PO_DT,
            SUM(NVL(T15.VALUE, 0)) PO_VALUE,
            V05.VENDOR VENDOR,
            V06.CONSIGNEE CONSIGNEE,
            T13.RLY_CD CLIENT
        FROM
            T13_PO_MASTER T13,
            T15_PO_DETAIL T15,
            V05_VENDOR V05,
            V06_CONSIGNEE V06
        WHERE
            T13.CASE_NO = T15.CASE_NO
            AND T13.VEND_CD = V05.VEND_CD
            AND T13.PURCHASER_CD = V06.CONSIGNEE_CD(+)
            AND T13.REGION_CODE = p_Region
            AND (CASE
                    WHEN p_SelCriteria = 'P' THEN T13.PO_DT
                    ELSE T13.RECV_DT
                END
                 BETWEEN p_frmDt AND p_toDt)
            AND T13.RLY_NONRLY = p_wAgency
            AND (RLY_CD = p_wClient or RLY_CD IS NULL)
        GROUP BY
            T13.CASE_NO,
            T13.PO_NO,
            T13.PO_DT,
            V05.VENDOR,
            V06.CONSIGNEE,
            T13.RLY_CD
    ) P,
    T15_PO_DETAIL T15
    WHERE
        P.CASE_NO = T15.CASE_NO
        AND (P.PO_VALUE BETWEEN p_wFrmAmt AND p_wToAmt)
    GROUP BY
        P.CLIENT,
        P.CASE_NO,
        P.PO_NO,
        TO_CHAR(P.PO_DT, 'dd/mm/yyyy'),
        P.PO_VALUE,
        P.VENDOR,
        P.CONSIGNEE,
        TRIM(T15.ITEM_DESC);
END SP_DetailedReport_POofSpecificValues;

=========================

create or replace PROCEDURE SP_SummarizedReport_POofSpecificValues(
    p_SelCriteria IN VARCHAR2,  
    p_wRegion IN VARCHAR2,
    p_frmDt IN DATE,
    p_toDt IN DATE,
    p_wAgency IN VARCHAR2,  
    p_wFrmAmt IN NUMBER,
    p_wToAmt IN NUMBER,
    p_Result OUT SYS_REFCURSOR
)
AS
BEGIN
    OPEN p_Result FOR
    SELECT
        P.CLIENT CLIENT,
        COUNT(*) No_OF_PO,
        SUM(P.PO_VALUE) PO_VALUE
    FROM
    (
        SELECT
            T13.CASE_NO,
            T13.RLY_CD CLIENT,
            SUM(NVL(T15.VALUE, 0)) PO_VALUE
        FROM
            T13_PO_MASTER T13,
            T15_PO_DETAIL T15
        WHERE
            T13.CASE_NO = T15.CASE_NO
            AND (CASE
                    WHEN p_SelCriteria = 'P' THEN T13.PO_DT
                    ELSE T13.RECV_DT
                END
                 BETWEEN p_frmDt AND p_toDt)
            AND T13.RLY_NONRLY = p_wAgency
            AND T13.REGION_CODE = p_wRegion
        GROUP BY
            T13.CASE_NO,
            T13.RLY_CD
    ) P
    WHERE
        P.PO_VALUE BETWEEN p_wFrmAmt AND p_wToAmt
    GROUP BY
        P.CLIENT
    ORDER BY
        P.CLIENT;
END SP_SummarizedReport_POofSpecificValues;

=========================================
create or replace PROCEDURE SP_Get_ItemWiseInspections (    
    p_RegionCode IN VARCHAR2,
    p_ItemDesc1 IN VARCHAR2,
    p_ItemDesc2 IN VARCHAR2,
    p_ItemDesc3 IN VARCHAR2,
    p_ItemDesc4 IN VARCHAR2,
    p_ItemDesc5 IN VARCHAR2,
    p_FrmDt IN DATE,
    p_ToDt IN DATE,
    p_OneRegion IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_Result FOR
    SELECT
        T13.REGION_CODE,
        T23.ITEM_DESC,
        T13.CASE_NO,
        T13.PO_NO,
        TO_CHAR(T13.PO_DT, 'DD/MM/YYYY') AS PO_DATE,
        T13.RLY_CD AS BPO_RLY,
        T18.QTY_PASSED,
        T18.QTY_REJECTED,
        T20.BK_NO,
        T20.SET_NO,
        T20.IC_TYPE_ID,
        T20.BILL_NO,
        TO_CHAR(T22.BILL_DT, 'DD/MM/YYYY') AS BILL_DATE,
        T22.BILL_AMOUNT,
        V05.VEND_CD || '-' || V05.VENDOR AS VENDOR,
        M05.VEND_CD || '-' || M05.VENDOR AS MANUFACTURER,
        V06.CONSIGNEE_CD || '-' || V06.CONSIGNEE AS CONSIGNEE,
        T23.VALUE,
        T09.IE_SNAME,
        T20.IC_NO,
        TO_CHAR(T20.IC_DT, 'DD/MM/YYYY') AS IC_DATE,
        TO_CHAR(T20.CALL_RECV_DT, 'DD/MM/YYYY') AS CALL_DATE,
        T20.CALL_SNO,
        TO_CHAR(T20.FIRST_INSP_DT, 'DD/MM/YYYY') AS FIRST_INSP_DATE,
        TO_CHAR(T20.LAST_INSP_DT, 'DD/MM/YYYY') AS LAST_INSP_DATE,
        NVL((T20.FIRST_INSP_DT - T20.CALL_RECV_DT), 0) AS TIME_TO_START,
        NVL((T20.LAST_INSP_DT - T20.CALL_RECV_DT), 0) AS TIME_TO_END,
        T20.NO_OF_INSP
    FROM
        T13_PO_MASTER T13
    JOIN
        T17_CALL_REGISTER T17 ON T13.CASE_NO = T17.CASE_NO
    JOIN
        T18_CALL_DETAILS T18 ON T17.CASE_NO = T18.CASE_NO AND T17.CALL_RECV_DT = T18.CALL_RECV_DT AND T17.CALL_SNO = T18.CALL_SNO
    JOIN
        T20_IC T20 ON T17.CASE_NO = T20.CASE_NO AND T17.CALL_RECV_DT = T20.CALL_RECV_DT AND T17.CALL_SNO = T20.CALL_SNO
    JOIN
        T22_BILL T22 ON T20.BILL_NO = T22.BILL_NO
    JOIN
        V05_VENDOR V05 ON T13.VEND_CD = V05.VEND_CD
    JOIN
        V05_VENDOR M05 ON T17.MFG_CD = M05.VEND_CD
    JOIN
        V06_CONSIGNEE V06 ON T20.CONSIGNEE_CD = V06.CONSIGNEE_CD
    JOIN
        T23_BILL_ITEMS T23 ON T20.BILL_NO = T23.BILL_NO AND T18.ITEM_SRNO_PO = T23.ITEM_SRNO
    JOIN
        T09_IE T09 ON T17.IE_CD = T09.IE_CD
    WHERE
       --T13.REGION_CODE = p_RegionCode
        ((p_OneRegion = 'true' AND T13.REGION_CODE = p_RegionCode)
        OR (p_OneRegion <> 'true' AND T13.REGION_CODE = T13.REGION_CODE))

        AND (
            INSTR(UPPER(T23.ITEM_DESC), UPPER(p_ItemDesc1)) > 0
            OR INSTR(UPPER(T23.ITEM_DESC), UPPER(p_ItemDesc2)) > 0
            OR INSTR(UPPER(T23.ITEM_DESC), UPPER(p_ItemDesc3)) > 0
            OR INSTR(UPPER(T23.ITEM_DESC), UPPER(p_ItemDesc4)) > 0
            OR INSTR(UPPER(T23.ITEM_DESC), UPPER(p_ItemDesc5)) > 0
        )
        --AND (T20.IC_DT BETWEEN '05/10/18' AND '05/10/18')
        AND (T20.IC_DT BETWEEN p_FrmDt AND p_ToDt)
    ORDER BY
        T13.REGION_CODE,
        T23.ITEM_DESC,
        T20.IC_DT,
        T22.BILL_NO;
END SP_Get_ItemWiseInspections;
============================

CREATE OR REPLACE PROCEDURE SP_Get_ClientWiseInspections (
    p_RegionCode IN VARCHAR2,
    p_ItemDesc1 IN VARCHAR2,
    p_ItemDesc2 IN VARCHAR2,
    p_ItemDesc3 IN VARCHAR2,
    p_ItemDesc4 IN VARCHAR2,
    p_ItemDesc5 IN VARCHAR2,
    p_FrmDt IN DATE,
    p_ToDt IN DATE,
    p_OneRegion IN VARCHAR2,
    p_ClientType IN VARCHAR2, 
    p_RlyCd IN VARCHAR2, 
    p_Result OUT SYS_REFCURSOR
) AS
    sql_stmt VARCHAR2(10000);

BEGIN
    sql_stmt := 'SELECT TRIM(T23.ITEM_DESC) ITEM_DESC, T13.RLY_CD BPO_RLY, SUM(T18.QTY_PASSED) QTY_PASS, SUM(T18.QTY_REJECTED) QTY_REJ, T04.UOM_S_DESC UOM_S_DESC, SUM(T23.VALUE) VALUE, (CASE WHEN TO_CHAR(IC_DT, ''MM'') < ''04'' THEN TO_CHAR(TO_NUMBER(TO_CHAR(IC_DT, ''YYYY'')) - 1) || ''-'' || TO_CHAR(IC_DT, ''YYYY'') ELSE TO_CHAR(IC_DT, ''YYYY'') || ''-'' || TO_CHAR(TO_NUMBER(TO_CHAR(IC_DT, ''YYYY'')) + 1) END) IC_PERIOD, COUNT(*) NO_OF_INSP FROM T13_PO_MASTER T13, T17_CALL_REGISTER T17, T18_CALL_DETAILS T18, T20_IC T20, T22_BILL T22, T23_BILL_ITEMS T23, T04_UOM T04 WHERE T13.CASE_NO = T17.CASE_NO AND T17.CASE_NO = T18.CASE_NO AND T17.CALL_RECV_DT = T18.CALL_RECV_DT AND T17.CALL_SNO = T18.CALL_SNO AND T17.CASE_NO = T20.CASE_NO AND T17.CALL_RECV_DT = T20.CALL_RECV_DT AND T17.CALL_SNO = T20.CALL_SNO AND T20.BILL_NO = T22.BILL_NO AND T22.BILL_NO = T23.BILL_NO AND T18.ITEM_SRNO_PO = T23.ITEM_SRNO AND T23.UOM_CD = T04.UOM_CD';

    IF p_OneRegion = 'true' THEN
        sql_stmt := sql_stmt || ' AND T13.REGION_CODE = ''' || p_RegionCode || '''';
    END IF;

    IF p_ItemDesc1 IS NOT NULL AND p_ItemDesc1 != '' THEN
        sql_stmt := sql_stmt || ' AND (INSTR(UPPER(T23.ITEM_DESC), UPPER(''' || p_ItemDesc1 || ''')) > 0';
    END IF;

    IF p_ItemDesc2 IS NOT NULL AND p_ItemDesc2 != '' THEN
        sql_stmt := sql_stmt || ' OR INSTR(UPPER(T23.ITEM_DESC), UPPER(''' || p_ItemDesc2 || ''')) > 0';
    END IF;

    IF p_ItemDesc3 IS NOT NULL AND p_ItemDesc3 != '' THEN
        sql_stmt := sql_stmt || ' OR INSTR(UPPER(T23.ITEM_DESC), UPPER(''' || p_ItemDesc3 || ''')) > 0';
    END IF;

    IF p_ItemDesc4 IS NOT NULL AND p_ItemDesc4 != '' THEN
        sql_stmt := sql_stmt || ' OR INSTR(UPPER(T23.ITEM_DESC), UPPER(''' || p_ItemDesc4 || ''')) > 0';
    END IF;

    IF p_ItemDesc5 IS NOT NULL AND p_ItemDesc5 != '' THEN
        sql_stmt := sql_stmt || ' OR INSTR(UPPER(T23.ITEM_DESC), UPPER(''' || p_ItemDesc5 || ''')) > 0';
    END IF;

    IF p_ClientType IS NOT NULL AND p_ClientType != '' AND p_ClientType != 'A' THEN
        sql_stmt := sql_stmt || ' AND T13.RLY_NONRLY = ''' || p_ClientType || ''' AND T13.RLY_CD = ''' || p_RlyCd || '''';
    END IF;

    sql_stmt := sql_stmt || ' AND (T20.IC_DT BETWEEN ''' || p_FrmDt || ''' AND ''' || p_ToDt || ''') GROUP BY T13.RLY_CD, (CASE WHEN TO_CHAR(IC_DT, ''MM'') < ''04'' THEN TO_CHAR(TO_NUMBER(TO_CHAR(IC_DT, ''YYYY'')) - 1) || ''-'' || TO_CHAR(IC_DT, ''YYYY'') ELSE TO_CHAR(IC_DT, ''YYYY'') || ''-'' || TO_CHAR(TO_NUMBER(TO_CHAR(IC_DT, ''YYYY'')) + 1) END), T23.ITEM_DESC, T04.UOM_S_DESC ORDER BY T13.RLY_CD, (CASE WHEN TO_CHAR(IC_DT, ''MM'') < ''04'' THEN TO_CHAR(TO_NUMBER(TO_CHAR(IC_DT, ''YYYY'')) - 1) || ''-'' || TO_CHAR(IC_DT, ''YYYY'') ELSE TO_CHAR(IC_DT, ''YYYY'') || ''-'' || TO_CHAR(TO_NUMBER(TO_CHAR(IC_DT, ''YYYY'')) + 1) END), T23.ITEM_DESC, T04.UOM_S_DESC';

    OPEN p_Result FOR sql_stmt;
END SP_Get_ClientWiseInspections;


==========================

ALTER TABLE T16_Ic_Cancel ADD CREATEDBY  NUMBER(6,0)
ALTER TABLE T16_Ic_Cancel ADD CREATEDDATE TIMESTAMP(6) WITH TIME ZONE
ALTER TABLE T16_Ic_Cancel ADD UPDATEDBY  NUMBER(6,0)
ALTER TABLE T16_Ic_Cancel ADD UPDATEDDATE TIMESTAMP(6) WITH TIME ZONE
ALTER TABLE T16_Ic_Cancel ADD ISDELETED NUMBER(2,0)  
ALTER TABLE T16_Ic_Cancel ADD Status NUMBER(2,0)


--update T16_Ic_Cancel set status=1

=====================
ALTER TABLE T13_Po_Master ADD IsPriceVariation NUMBER(2,0)
ALTER TABLE T13_Po_Master ADD IsStageInspection NUMBER(2,0)
======================

ALTER TABLE T80_Po_Master ADD IsPriceVariation NUMBER(2,0)
ALTER TABLE T80_Po_Master ADD IsStageInspection NUMBER(2,0)
===============


create or replace PROCEDURE sp_PCDOReport_Highlights (
    p_wYrMth IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_Result FOR
    SELECT
        ROW_NUMBER() OVER (ORDER BY High_dt) AS sn,
        DECODE(Region_Code, 'N', 'Northern', 'E', 'Eastern', 'W', 'Western', 'S', 'Southern', 'C', 'Central', 'Q', 'Corporate QA Division') AS Region_Code,
        Hight_text
    FROM
        T67_Highlights
    WHERE
        High_dt = p_wYrMth
        AND Region_Code != 'Q';
END sp_PCDOReport_Highlights;


=========================

create or replace PROCEDURE sp_PCDOReport_CO_Highlights (
    p_CumYrMth IN VARCHAR2,
    p_wYrMth IN VARCHAR2,
    p_byear IN VARCHAR2,
    p_dmonth IN NUMBER,
    p_lstdate IN VARCHAR2,
    p_CumYrPast IN VARCHAR2,
    p_wYrMth_Past IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR,
    p_Result1 OUT SYS_REFCURSOR
) AS
BEGIN
  OPEN p_Result FOR
  SELECT
    decode(Region_Code,'N','Northern','E','Eastern','W','Western','S','Southern','C','Central') AS Region_Code,
    decode(Region_Code,'N','A','E','B','W','C','S','D','C','E') AS Serial_Code,
    CASE
        WHEN sum(TY_Turn_T) = 0 THEN 0
        ELSE Round((sum(TY_Turn_T))/100000, 2)
    END AS TY_Turn_T,
    
    CASE
        WHEN sum(TY_Turnl_T) = 0 THEN 0
        ELSE Round((sum(TY_Turnl_T))/100000, 2)
    END AS TY_Turnl_T,

    sum(T_B_TARGET) AS T_B_TARGET,
    
    sum(TY_real_amt) AS TY_real_amt,
    sum(TY_Out_amt) AS TY_Out_amt,
    sum(TY_tot_sus) AS TY_tot_sus,
    sum(TY_bill_amt) AS TY_bill_amt,
    
    CASE
        WHEN sum(TY_EXP_FEE) = 0 THEN 0
        ELSE Round((sum(TY_EXP_FEE))/100000, 2)
    END AS TY_EXP_FEE,

    CASE
        WHEN (sum(TY_TOA1) + sum(TY_TOA2)) = 0 THEN 0
        ELSE Round((sum(TY_TOA1))/100000, 2)
    END AS TY_TOA1,

    CASE
        WHEN (sum(TY_TOA1) + sum(TY_TOA2)) = 0 THEN 0
        ELSE Round((sum(TY_TOA2))/100000, 2)
    END AS TY_TOA2,

    CASE
        WHEN (sum(TY_bill_amt)) = 0 THEN 0
        ELSE Round((sum(TY_Out_amt) - sum(TY_tot_sus)) * 365 / (sum(TY_bill_amt)), 0)
    END AS TY_Days,

    CASE
        WHEN (sum(TY_TOA1) + sum(TY_TOA2)) = 0 THEN 0
        ELSE Round(((Round((sum(TY_EXP_FEE))/100000,2) / (sum(TY_TOA1)/100000 + sum(TY_TOA2)/100000)) * 100), 2)
    END AS TY_OR_Actual,

    CASE
        WHEN (sum(T_B_TARGET)) = 0 THEN 0
        ELSE Round(((sum(T_B_TARGET))/12) * p_dmonth, 2)
    END AS TY_BRO_TARGET,

    CASE
        WHEN sum(LY_turn) = 0 THEN 0
        ELSE Round((sum(LY_turn))/100000, 2)
    END AS LY_turn,

    CASE
        WHEN sum(LY_turnl) = 0 THEN 0
        ELSE Round((sum(LY_turnl))/100000, 2)
    END AS LY_turnl,

    CASE
        WHEN sum(TOR) = 0 THEN 0
        ELSE Round(sum(TOR), 2)
    END AS TOR,

    CASE
        WHEN sum(TOR) = 0 THEN 0
        ELSE Round(((sum(TOR))/12) * p_dmonth, 2)
    END AS Exp_pro_target,

    CASE
        WHEN sum(LY_EXP_FEE) = 0 THEN 0
        ELSE Round((sum(LY_EXP_FEE))/100000, 2)
    END AS LY_EXP_FEE,

    CASE
        WHEN (sum(LY_TOA1) + sum(LY_TOA2)) = 0 THEN 0
        ELSE Round((sum(LY_TOA1))/100000, 2)
    END AS LY_TOA1,

    CASE
        WHEN (sum(LY_TOA1) + sum(LY_TOA2)) = 0 THEN 0
        ELSE Round((sum(LY_TOA2))/100000, 2)
    END AS LY_TOA2,
    --Round((Round((sum(LY_EXP_FEE))/100000,2)/(Round((sum(LY_TOA1))/100000,2)+Round((sum(LY_TOA2))/100000,2)))*100,2) AS LY_OR_Actual
    CASE
    WHEN (Round((sum(LY_TOA1))/100000,2) + Round((sum(LY_TOA2))/100000,2)) = 0 THEN 0
    ELSE Round((Round((sum(LY_EXP_FEE))/100000,2)/(Round((sum(LY_TOA1))/100000,2) + Round((sum(LY_TOA2))/100000,2)))*100,2)
    END AS LY_OR_Actual

  FROM
  (
    Select Region_Code,region_code Serial_Code,sum(NVL(INSP_FEE,0)) TY_Turn_T,0 TY_Turnl_T,0 T_B_TARGET,0 TY_real_amt,0 TY_Out_amt,0 TY_tot_sus,0 TY_bill_amt,0 TY_EXP_FEE,0 TY_TOA1,0 TY_TOA2,0 LY_turn,0 LY_turnl,0 TOR,0 LY_EXP_FEE,0 LY_TOA1,0 LY_TOA2 from V22A_BILLING_SUMMARY where substr(sector,1,1) in ('1','2','3','5','6') and BILLING_YR_MTH between p_CumYrMth and p_wYrMth group by Region_Code 
    
    UNION ALL

    Select Region_Code,region_code Serial_Code,0 TY_Turn_T,sum(NVL(LAB_EXP,0)) TY_Turnl_T,0 T_B_TARGET,0 TY_real_amt,0 TY_Out_amt,0 TY_tot_sus,0 TY_bill_amt,0 TY_EXP_FEE,0 TY_TOA1,0 TY_TOA2,0 LY_turn,0 LY_turnl,0 TOR,0 LY_EXP_FEE,0 LY_TOA1,0 LY_TOA2 from t59_lab_exp where lab_bill_per between p_CumYrMth and p_wYrMth group by Region_Code 

    UNION ALL

    Select Region_Code,region_code Serial_Code,0 TY_Turn_T,0 TY_Turnl_T,sum(NVL(B_TARGET,0)) T_B_TARGET,0 TY_real_amt,0 TY_Out_amt,0 TY_tot_sus,0 TY_bill_amt,0 TY_EXP_FEE,0 TY_TOA1,0 TY_TOA2,0 LY_turn,0 LY_turnl,0 TOR,0 LY_EXP_FEE,0 LY_TOA1,0 LY_TOA2 from T83_BE_TARGET where BE_PER=p_byear group by Region_Code 

    UNION ALL

    Select Region Region_Code,Region Serial_Code,0 TY_Turn_T,0 TY_Turnl_T,0 T_B_TARGET,sum(Round((INSPECTION_FEE)/100000,2)+Round((advance_adjusted)/100000,2)+Round((lab_fee)/100000,2)+Round((receipt_fr_wr)/100000,2)+Round((receipt_fr_nr)/100000,2)+Round((receipt_fr_er)/100000,2)+Round((receipt_fr_sr)/100000,2)+Round((receipt_fr_cr)/100000,2)+Round((misc_receipt)/100000,2)-Round((transfer_to_wr)/100000,2)-Round((transfer_to_er)/100000,2)-Round((transfer_to_nr)/100000,2)-Round((transfer_to_sr)/100000,2)-Round((transfer_to_cr)/100000,2)-Round((misc_transfer)/100000,2))TY_real_amt,0 TY_Out_amt,0 TY_tot_sus,0 TY_bill_amt,0 TY_EXP_FEE,0 TY_TOA1,0 TY_TOA2,0 LY_turn,0 LY_turnl,0 TOR,0 LY_EXP_FEE,0 LY_TOA1,0 LY_TOA2 from TEMP24_25_REALISATION Group by Region 

    UNION ALL

    Select region_code,region_code Serial_Code,0 TY_Turn_T,0 TY_Turnl_T,0 T_B_TARGET,0 TY_real_amt,Round(sum(amount_outstanding)/100000,2) TY_Out_amt,0 TY_tot_sus,0 TY_bill_amt,0 TY_EXP_FEE,0 TY_TOA1,0 TY_TOA2,0 LY_turn,0 LY_turnl,0 TOR,0 LY_EXP_FEE,0 LY_TOA1,0 LY_TOA2 From v22b_outstanding_bills where AMOUNT_OUTSTANDING >0 and TO_CHAR(bill_dt,'yyyymm')<=p_wYrMth and region_code!='Q' group by region_code 

    UNION ALL

    Select SUBSTR(T25.VCHR_NO,1,1) region_code,SUBSTR(T25.VCHR_NO,1,1) Serial_Code,0 TY_Turn_T,0 TY_Turnl_T,0 T_B_TARGET,0 TY_real_amt,0 TY_Out_amt,Round(sum(T25.SUSPENSE_AMT)/100000,2)TY_tot_sus,0 TY_bill_amt,0 TY_EXP_FEE,0 TY_TOA1,0 TY_TOA2,0 LY_turn,0 LY_turnl,0 TOR,0 LY_EXP_FEE,0 LY_TOA1,0 LY_TOA2 From T25_RV_DETAILS T25,T12_BILL_PAYING_OFFICER T12 Where (T25.ACC_CD not in (2709,2210,2212)) and nvl(T25.BPO_CD,'00000')=T12.BPO_CD and nvl(T25.SUSPENSE_AMT,0) <> 0 and SUBSTR(T25.VCHR_NO,1,1)!='1' group by SUBSTR(T25.VCHR_NO,1,1) 

    UNION ALL

    Select region_code,region_code Serial_Code,0 TY_Turn_T,0 TY_Turnl_T,0 T_B_TARGET,0 TY_real_amt,0 TY_Out_amt,0 TY_tot_sus,Round(sum(BILL_AMOUNT)/100000,2)TY_bill_amt,0 TY_EXP_FEE,0 TY_TOA1,0 TY_TOA2,0 LY_turn,0 LY_turnl,0 TOR,0 LY_EXP_FEE,0 LY_TOA1,0 LY_TOA2 From V22B_OUTSTANDING_BILLS Where TO_CHAR(bill_dt,'yyyymm') between p_lstdate and p_wYrMth and region_code!='Q' group by region_code 

    UNION ALL

    SELECT Region_Code,Region_Code Serial_Code,0 TY_Turn_T,0 TY_Turnl_T,0 T_B_TARGET,0 TY_real_amt,0 TY_Out_amt,0 TY_tot_sus,0 TY_bill_amt,sum(NVL(exp_amt,0)) TY_EXP_FEE,0 TY_TOA1,0 TY_TOA2,0 LY_turn,0 LY_turnl,0 TOR,0 LY_EXP_FEE,0 LY_TOA1,0 LY_TOA2 FROM T63_EXP WHERE exp_per BETWEEN p_CumYrMth AND p_wYrMth group by region_code 

    UNION ALL

    SELECT Region_Code,Region_Code Serial_Code,0 TY_Turn_T,0 TY_Turnl_T,0 T_B_TARGET,0 TY_real_amt,0 TY_Out_amt,0 TY_tot_sus,0 TY_bill_amt,0 TY_EXP_FEE,sum(NVL(INSP_FEE,0)) TY_TOA1,0 TY_TOA2,0 LY_turn,0 LY_turnl,0 TOR,0 LY_EXP_FEE,0 LY_TOA1,0 LY_TOA2 FROM V22A_BILLING_SUMMARY where substr(sector,1,1) in ('1','2', '3','5','6') and BILLING_YR_MTH BETWEEN p_CumYrMth AND p_wYrMth GROUP BY region_code 

    UNION ALL

    SELECT Region_Code,Region_Code Serial_Code,0 TY_Turn_T,0 TY_Turnl_T,0 T_B_TARGET,0 TY_real_amt,0 TY_Out_amt,0 TY_tot_sus,0 TY_bill_amt,0 TY_EXP_FEE,0 TY_TOA1,sum(NVL(LAB_EXP,0)) TY_TOA2,0 LY_turn,0 LY_turnl,0 TOR,0 LY_EXP_FEE,0 LY_TOA1,0 LY_TOA2 FROM t59_lab_exp where lab_bill_per BETWEEN p_CumYrMth AND p_wYrMth GROUP BY region_code 

    UNION ALL

    Select Region_Code,region_code Serial_Code,0 TY_Turn_T,0 TY_Turnl_T,0 T_B_TARGET,0 TY_real_amt,0 TY_Out_amt,0 TY_tot_sus,0 TY_bill_amt,0 TY_EXP_FEE,0 TY_TOA1,0 TY_TOA2,sum(NVL(INSP_FEE,0)) LY_turn,0 LY_turnl,0 TOR,0 LY_EXP_FEE,0 LY_TOA1,0 LY_TOA2 from V22A_BILLING_SUMMARY where substr(sector,1,1) in ('1','2','3','5','6') and BILLING_YR_MTH between p_CumYrPast and p_wYrMth_Past group by Region_Code 

    UNION ALL

    Select Region_Code,region_code Serial_Code,0 TY_Turn_T,0 TY_Turnl_T,0 T_B_TARGET,0 TY_real_amt,0 TY_Out_amt,0 TY_tot_sus,0 TY_bill_amt,0 TY_EXP_FEE,0 TY_TOA1,0 TY_TOA2,0 LY_turn,sum(NVL(LAB_EXP,0)) LY_turnl,0 TOR,0 LY_EXP_FEE,0 LY_TOA1,0 LY_TOA2 from t59_lab_exp where lab_bill_per between p_CumYrPast and p_wYrMth_Past group by Region_Code 

    UNION ALL

    SELECT Region_Code,Region_Code Serial_Code,0 TY_Turn_T,0 TY_Turnl_T,0 T_B_TARGET,0 TY_real_amt,0 TY_Out_amt,0 TY_tot_sus,0 TY_bill_amt,0 TY_EXP_FEE,0 TY_TOA1,0 TY_TOA2,0 LY_turn,0 LY_turnl,sum(NVL(EX_TARGET,0)) TOR,0 LY_EXP_FEE,0 LY_TOA1,0 LY_TOA2 FROM T83_BE_TARGET where BE_PER=p_byear GROUP BY region_code 

    UNION ALL

    SELECT Region_Code,Region_Code Serial_Code,0 TY_Turn_T,0 TY_Turnl_T,0 T_B_TARGET,0 TY_real_amt,0 TY_Out_amt,0 TY_tot_sus,0 TY_bill_amt,0 TY_EXP_FEE,0 TY_TOA1,0 TY_TOA2,0 LY_turn,0 LY_turnl,0 TOR,sum(NVL(exp_amt,0)) LY_EXP_FEE,0 LY_TOA1,0 LY_TOA2 FROM T63_EXP WHERE exp_per BETWEEN p_CumYrPast AND p_wYrMth_Past group by region_code 

    UNION ALL

    SELECT Region_Code,Region_Code Serial_Code,0 TY_Turn_T,0 TY_Turnl_T,0 T_B_TARGET,0 TY_real_amt,0 TY_Out_amt,0 TY_tot_sus,0 TY_bill_amt,0 TY_EXP_FEE,0 TOA1,0 TY_TOA2,0 LY_turn,0 LY_turnl,0 TOR,0 LY_EXP_FEE,sum(NVL(INSP_FEE,0)) LY_TOA1,0 LY_TOA2 FROM V22A_BILLING_SUMMARY where substr(sector,1,1) in ('1','2', '3','5','6') and BILLING_YR_MTH BETWEEN p_CumYrPast AND p_wYrMth_Past GROUP BY region_code 

    UNION ALL

    SELECT Region_Code,Region_Code Serial_Code,0 TY_Turn_T,0 TY_Turnl_T,0 T_B_TARGET,0 TY_real_amt,0 TY_Out_amt,0 TY_tot_sus,0 TY_bill_amt,0 TY_EXP_FEE,0 TY_TOA1,0 TOA2,0 LY_turn,0 LY_turnl,0 TOR,0 LY_EXP_FEE,0 LY_TOA1,sum(NVL(LAB_EXP,0)) LY_TOA2 FROM t59_lab_exp where lab_bill_per BETWEEN p_CumYrPast AND p_wYrMth_Past GROUP BY region_code
  
  )
  GROUP BY Region_Code
  ORDER BY Serial_Code;
  
  OPEN p_Result1 FOR
  Select row_number() over (order by High_dt) as sn,
  decode(Region_Code,'N','Northern','E','Eastern','W','Western','S','Southern','C','Bhilai','Q','Corporate QA Division')Region_Code,
  Hight_text 
  from T67_Highlights 
  where High_dt= p_wYrMth and Region_Code='Q';
  
END sp_PCDOReport_CO_Highlights;



==============


create or replace PROCEDURE sp_PCDOReport_FinancialBilling (
    dmonth IN VARCHAR2,
    wYrMth_Past IN VARCHAR2,
    CumYrPast IN VARCHAR2,
    wYrMth IN NUMBER,
    CumYrMth IN VARCHAR2,
    byear IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_Result FOR
        SELECT
            DECODE(Region_Code, 'N', 'Northern', 'E', 'Eastern', 'W', 'Western', 'S', 'Southern', 'C', 'Central', 'Q', 'QA Corporate') Region_Code,
            DECODE(Region_Code, 'N', 'A', 'E', 'B', 'W', 'C', 'S', 'D', 'C', 'E', 'Q', 'F') Serial_Code,
            ROUND(SUM(DR_INSP_FEE) / 100000, 2) DR_FEE,
            ROUND(SUM(DNR_INSP_FEE) / 100000, 2) DNR_FEE,
            ROUND(SUM(DRI_INSP_FEE) / 100000, 2) DRI_FEE,
            ROUND(SUM(DCR_INSP_FEE) / 100000, 2) DCR_FEE,
            ROUND(SUM(DCNR_INSP_FEE) / 100000, 2) DCNR_FEE,
            ROUND(SUM(DCRI_INSP_FEE) / 100000, 2) DCRI_FEE,
            ROUND(SUM(R_INSP_FEE) / 100000, 2) R_FEE,
            ROUND(SUM(NR_INSP_FEE) / 100000, 2) NR_FEE,
            ROUND(SUM(RI_INSP_FEE) / 100000, 2) RI_FEE,
            ROUND(SUM(CR_INSP_FEE) / 100000, 2) CR_FEE,
            ROUND(SUM(CNR_INSP_FEE) / 100000, 2) CNR_FEE,
            ROUND(SUM(CRI_INSP_FEE) / 100000, 2) CRI_FEE,
            ROUND(SUM(DTM_Lab_Fee) / 100000, 2) DTM_FEE,
            ROUND(SUM(CTM_Lab_Fee) / 100000, 2) CTM_FEE,
            ROUND(SUM(CDTM_Lab_Fee) / 100000, 2) CDTM_FEE,
            ROUND(SUM(CCTM_Lab_Fee) / 100000, 2) CCTM_FEE,
            ROUND(((SUM(B_TARGET)) / 12) * TO_NUMBER(dmonth), 2) B_TARGET,
            ROUND(SUM(CCTM_adj_Fee) / 100000, 2) CCTM_adj_Fee,
            ROUND(SUM(CUTM_adj_Fee) / 100000, 2) CUTM_adj_Fee,
            ROUND(SUM(CCTM_adj_Fee_past) / 100000, 2) CCTM_adj_Fee_past,
            ROUND(SUM(CUTM_adj_Fee_past) / 100000, 2) CUTM_adj_Fee_past
        FROM
            (SELECT
                Region_Code,
                region_code Serial_Code,
                SUM(NVL(INSP_FEE, 0)) DR_INSP_FEE,
                0 DNR_INSP_FEE,
                0 DRI_INSP_FEE,
                0 DCR_INSP_FEE,
                0 DCNR_INSP_FEE,
                0 DCRI_INSP_FEE,
                0 R_INSP_FEE,
                0 NR_INSP_FEE,
                0 RI_INSP_FEE,
                0 CR_INSP_FEE,
                0 CNR_INSP_FEE,
                0 CRI_INSP_FEE,
                0 DTM_Lab_Fee,
                0 CTM_Lab_Fee,
                0 CDTM_Lab_Fee,
                0 CCTM_Lab_Fee,
                0 B_TARGET,
                0 CCTM_adj_Fee,
                0 CUTM_adj_Fee,
                0 CCTM_adj_Fee_past,
                0 CUTM_adj_Fee_past
            FROM
                V22A_BILLING_SUMMARY
            WHERE
                SUBSTR(sector, 1, 1) = 1
                AND BILLING_YR_MTH = wYrMth_Past
            GROUP BY
                Region_Code
            UNION ALL
            SELECT
                Region_Code,
                region_code Serial_Code,
                0 DR_INSP_FEE,
                SUM(NVL(INSP_FEE, 0)) DNR_INSP_FEE,
                0 DRI_INSP_FEE,
                0 DCR_INSP_FEE,
                0 DCNR_INSP_FEE,
                0 DCRI_INSP_FEE,
                0 R_INSP_FEE,
                0 NR_INSP_FEE,
                0 RI_INSP_FEE,
                0 CR_INSP_FEE,
                0 CNR_INSP_FEE,
                0 CRI_INSP_FEE,
                0 DTM_Lab_Fee,
                0 CTM_Lab_Fee,
                0 CDTM_Lab_Fee,
                0 CCTM_Lab_Fee,
                0 B_TARGET,
                0 CCTM_adj_Fee,
                0 CUTM_adj_Fee,
                0 CCTM_adj_Fee_past,
                0 CUTM_adj_Fee_past
            FROM
                V22A_BILLING_SUMMARY
            WHERE
                SUBSTR(sector, 1, 1) IN (2, 3, 5)
                AND BILLING_YR_MTH = wYrMth_Past
            GROUP BY
                Region_Code
            Union All 
				Select Region_Code,region_code Serial_Code,0 DR_INSP_FEE,0 DNR_INSP_FEE,sum(NVL(INSP_FEE,0)) DRI_INSP_FEE,0 DCR_INSP_FEE,0 DCNR_INSP_FEE,0 DCRI_INSP_FEE,0 R_INSP_FEE,0 NR_INSP_FEE,0 RI_INSP_FEE,0 CR_INSP_FEE,0 CNR_INSP_FEE,0 CRI_INSP_FEE,0 DTM_Lab_Fee,0 CTM_Lab_Fee,0 CDTM_Lab_Fee,0 CCTM_Lab_Fee,0 B_TARGET,0 CCTM_adj_Fee,0 CUTM_adj_Fee,0 CCTM_adj_Fee_past,0 CUTM_adj_Fee_past from V22A_BILLING_SUMMARY where substr(sector,1,1)=6 and 
				BILLING_YR_MTH=wYrMth_Past group by Region_Code 
				Union All  		
				Select Region_Code,region_code Serial_Code,0 DR_INSP_FEE,0 DNR_INSP_FEE,0 DRI_INSP_FEE,sum(NVL(INSP_FEE,0)) DCR_INSP_FEE,0 DCNR_INSP_FEE,0 DCRI_INSP_FEE,0 R_INSP_FEE,0 NR_INSP_FEE,0 RI_INSP_FEE,0 CR_INSP_FEE,0 CNR_INSP_FEE,0 CRI_INSP_FEE,0 DTM_Lab_Fee,0 CTM_Lab_Fee,0 CDTM_Lab_Fee,0 CCTM_Lab_Fee,0 B_TARGET,0 CCTM_adj_Fee,0 CUTM_adj_Fee,0 CCTM_adj_Fee_past,0 CUTM_adj_Fee_past from V22A_BILLING_SUMMARY where substr(sector,1,1)=1 and 
				BILLING_YR_MTH between CumYrPast and wYrMth_Past group by Region_Code 
				Union All  		
				Select Region_Code,region_code Serial_Code,0 DR_INSP_FEE,0 DNR_INSP_FEE,0 DRI_INSP_FEE,0 DCR_INSP_FEE,sum(NVL(INSP_FEE,0)) DCNR_INSP_FEE,0 DCRI_INSP_FEE,0 R_INSP_FEE,0 NR_INSP_FEE,0 RI_INSP_FEE,0 CR_INSP_FEE,0 CNR_INSP_FEE,0 CRI_INSP_FEE,0 DTM_Lab_Fee,0 CTM_Lab_Fee,0 CDTM_Lab_Fee,0 CCTM_Lab_Fee,0 B_TARGET,0 CCTM_adj_Fee,0 CUTM_adj_Fee,0 CCTM_adj_Fee_past,0 CUTM_adj_Fee_past from V22A_BILLING_SUMMARY where substr(sector,1,1) in (2, 3, 5) and 
				BILLING_YR_MTH between CumYrPast and wYrMth_Past group by Region_Code 
				Union All  		
				Select Region_Code,region_code Serial_Code,0 DR_INSP_FEE,0 DNR_INSP_FEE,0 DRI_INSP_FEE,0 DCR_INSP_FEE,0 DCNR_INSP_FEE,sum(NVL(INSP_FEE,0)) DCRI_INSP_FEE,0 R_INSP_FEE,0 NR_INSP_FEE,0 RI_INSP_FEE,0 CR_INSP_FEE,0 CNR_INSP_FEE,0 CRI_INSP_FEE,0 DTM_Lab_Fee,0 CTM_Lab_Fee,0 CDTM_Lab_Fee,0 CCTM_Lab_Fee,0 B_TARGET,0 CCTM_adj_Fee,0 CUTM_adj_Fee,0 CCTM_adj_Fee_past,0 CUTM_adj_Fee_past from V22A_BILLING_SUMMARY where substr(sector,1,1)=6 and 
				BILLING_YR_MTH between CumYrPast and wYrMth_Past group by Region_Code 
				Union All  
				Select Region_Code,region_code Serial_Code,0 DR_INSP_FEE,0 DNR_INSP_FEE,0 DRI_INSP_FEE,0 DCR_INSP_FEE,0 DCNR_INSP_FEE,0 DCRI_INSP_FEE,sum(NVL(INSP_FEE,0))R_INSP_FEE,0 NR_INSP_FEE,0 RI_INSP_FEE,0 CR_INSP_FEE,0 CNR_INSP_FEE,0 CRI_INSP_FEE,0 DTM_Lab_Fee,0 CTM_Lab_Fee,0 CDTM_Lab_Fee,0 CCTM_Lab_Fee,0 B_TARGET,0 CCTM_adj_Fee,0 CUTM_adj_Fee,0 CCTM_adj_Fee_past,0 CUTM_adj_Fee_past from V22A_BILLING_SUMMARY where substr(sector,1,1)=1 and 
				BILLING_YR_MTH=wYrMth group by Region_Code  
				Union All  
				Select Region_Code,region_code Serial_Code,0 DR_INSP_FEE,0 DNR_INSP_FEE,0 DRI_INSP_FEE,0 DCR_INSP_FEE,0 DCNR_INSP_FEE,0 DCRI_INSP_FEE,0 R_INSP_FEE,sum(NVL(INSP_FEE,0)) NR_INSP_FEE,0 RI_INSP_FEE,0 CR_INSP_FEE,0 CNR_INSP_FEE,0 CRI_INSP_FEE,0 DTM_Lab_Fee,0 CTM_Lab_Fee,0 CDTM_Lab_Fee,0 CCTM_Lab_Fee,0 B_TARGET,0 CCTM_adj_Fee,0 CUTM_adj_Fee,0 CCTM_adj_Fee_past,0 CUTM_adj_Fee_past from V22A_BILLING_SUMMARY where substr(sector,1,1) in (2, 3, 5) and 
				BILLING_YR_MTH=wYrMth group by Region_Code 
				Union All  		
				Select Region_Code,region_code Serial_Code,0 DR_INSP_FEE,0 DNR_INSP_FEE,0 DRI_INSP_FEE,0 DCR_INSP_FEE,0 DCNR_INSP_FEE,0 DCRI_INSP_FEE,0 R_INSP_FEE,0 NR_INSP_FEE,sum(NVL(INSP_FEE,0)) RI_INSP_FEE,0 CR_INSP_FEE,0 CNR_INSP_FEE,0 CRI_INSP_FEE,0 DTM_Lab_Fee,0 CTM_Lab_Fee,0 CDTM_Lab_Fee,0 CCTM_Lab_Fee,0 B_TARGET,0 CCTM_adj_Fee,0 CUTM_adj_Fee,0 CCTM_adj_Fee_past,0 CUTM_adj_Fee_past from V22A_BILLING_SUMMARY where substr(sector,1,1)=6 and 
				BILLING_YR_MTH=wYrMth group by Region_Code 
				Union All 
				Select Region_Code,region_code Serial_Code,0 DR_INSP_FEE,0 DNR_INSP_FEE,0 DRI_INSP_FEE,0 DCR_INSP_FEE,0 DCNR_INSP_FEE,0 DCRI_INSP_FEE,0 R_INSP_FEE,0 NR_INSP_FEE,0 RI_INSP_FEE,sum(NVL(INSP_FEE,0))CR_INSP_FEE,0 CNR_INSP_FEE,0 CRI_INSP_FEE,0 DTM_Lab_Fee,0 CTM_Lab_Fee,0 CDTM_Lab_Fee,0 CCTM_Lab_Fee,0 B_TARGET,0 CCTM_adj_Fee,0 CUTM_adj_Fee,0 CCTM_adj_Fee_past,0 CUTM_adj_Fee_past from V22A_BILLING_SUMMARY where substr(sector,1,1)=1 and 
				BILLING_YR_MTH between CumYrMth and wYrMth group by Region_Code  
				Union All  
				Select Region_Code,region_code Serial_Code,0 DR_INSP_FEE,0 DNR_INSP_FEE,0 DRI_INSP_FEE,0 DCR_INSP_FEE,0 DCNR_INSP_FEE,0 DCRI_INSP_FEE,0 R_INSP_FEE,0 NR_INSP_FEE,0 RI_INSP_FEE,0 CR_INSP_FEE,sum(NVL(INSP_FEE,0))CNR_INSP_FEE,0 CRI_INSP_FEE,0 DTM_Lab_Fee,0 CTM_Lab_Fee,0 CDTM_Lab_Fee,0 CCTM_Lab_Fee,0 B_TARGET,0 CCTM_adj_Fee,0 CUTM_adj_Fee,0 CCTM_adj_Fee_past,0 CUTM_adj_Fee_past from V22A_BILLING_SUMMARY where substr(sector,1,1) in (2, 3, 5) and 
				BILLING_YR_MTH between CumYrMth and wYrMth group by Region_Code 
				Union All  		
				Select Region_Code,region_code Serial_Code,0 DR_INSP_FEE,0 DNR_INSP_FEE,0 DRI_INSP_FEE,0 DCR_INSP_FEE,0 DCNR_INSP_FEE,0 DCRI_INSP_FEE,0 R_INSP_FEE,0 NR_INSP_FEE,0 RI_INSP_FEE,0 CR_INSP_FEE,0 CNR_INSP_FEE,sum(NVL(INSP_FEE,0))CRI_INSP_FEE,0 DTM_Lab_Fee,0 CTM_Lab_Fee,0 CDTM_Lab_Fee,0 CCTM_Lab_Fee,0 B_TARGET,0 CCTM_adj_Fee,0 CUTM_adj_Fee,0 CCTM_adj_Fee_past,0 CUTM_adj_Fee_past from V22A_BILLING_SUMMARY where substr(sector,1,1)=6 and 
				BILLING_YR_MTH between CumYrMth and wYrMth group by Region_Code 
				Union All 
				Select Region_Code,region_code Serial_Code,0 DR_INSP_FEE,0 DNR_INSP_FEE,0 DRI_INSP_FEE,0 DCR_INSP_FEE,0 DCNR_INSP_FEE,0 DCRI_INSP_FEE,0 R_INSP_FEE,0 NR_INSP_FEE,0 RI_INSP_FEE,0 CR_INSP_FEE,0 CNR_INSP_FEE,0 CRI_INSP_FEE,sum(NVL(LAB_EXP,0)) DTM_Lab_Fee,0 CTM_Lab_Fee,0 CDTM_Lab_Fee,0 CCTM_Lab_Fee,0 B_TARGET,0 CCTM_adj_Fee,0 CUTM_adj_Fee,0 CCTM_adj_Fee_past,0 CUTM_adj_Fee_past from t59_lab_exp where  
				lab_bill_per=wYrMth_Past group by Region_Code 
				UNION ALL 
				Select Region_Code,region_code Serial_Code,0 DR_INSP_FEE,0 DNR_INSP_FEE,0 DRI_INSP_FEE,0 DCR_INSP_FEE,0 DCNR_INSP_FEE,0 DCRI_INSP_FEE,0 R_INSP_FEE,0 NR_INSP_FEE,0 RI_INSP_FEE,0 CR_INSP_FEE,0 CNR_INSP_FEE,0 CRI_INSP_FEE,0 DTM_Lab_Fee,sum(NVL(LAB_EXP,0)) CTM_Lab_Fee,0 CDTM_Lab_Fee,0 CCTM_Lab_Fee,0 B_TARGET,0 CCTM_adj_Fee,0 CUTM_adj_Fee,0 CCTM_adj_Fee_past,0 CUTM_adj_Fee_past from t59_lab_exp where  
				lab_bill_per between CumYrPast and wYrMth_Past group by Region_Code 
				UNION ALL 
				Select Region_Code,region_code Serial_Code,0 DR_INSP_FEE,0 DNR_INSP_FEE,0 DRI_INSP_FEE,0 DCR_INSP_FEE,0 DCNR_INSP_FEE,0 DCRI_INSP_FEE,0 R_INSP_FEE,0 NR_INSP_FEE,0 RI_INSP_FEE,0 CR_INSP_FEE,0 CNR_INSP_FEE,0 CRI_INSP_FEE,0 DTM_Lab_Fee,0 CTM_Lab_Fee,sum(NVL(LAB_EXP,0)) CDTM_Lab_Fee,0 CCTM_Lab_Fee,0 B_TARGET,0 CCTM_adj_Fee,0 CUTM_adj_Fee,0 CCTM_adj_Fee_past,0 CUTM_adj_Fee_past from t59_lab_exp where  
				lab_bill_per=wYrMth group by Region_Code 
				UNION ALL 
				Select Region_Code,region_code Serial_Code,0 DR_INSP_FEE,0 DNR_INSP_FEE,0 DRI_INSP_FEE,0 DCR_INSP_FEE,0 DCNR_INSP_FEE,0 DCRI_INSP_FEE,0 R_INSP_FEE,0 NR_INSP_FEE,0 RI_INSP_FEE,0 CR_INSP_FEE,0 CNR_INSP_FEE,0 CRI_INSP_FEE,0 DTM_Lab_Fee,0 CTM_Lab_Fee,0 CDTM_Lab_Fee,sum(NVL(LAB_EXP,0)) CCTM_Lab_Fee,0 B_TARGET,0 CCTM_adj_Fee,0 CUTM_adj_Fee,0 CCTM_adj_Fee_past,0 CUTM_adj_Fee_past from t59_lab_exp where  
				lab_bill_per between CumYrMth and wYrMth group by Region_Code 
				UNION ALL 
				Select Region_Code,region_code Serial_Code,0 DR_INSP_FEE,0 DNR_INSP_FEE,0 DRI_INSP_FEE,0 DCR_INSP_FEE,0 DCNR_INSP_FEE,0 DCRI_INSP_FEE,0 R_INSP_FEE,0 NR_INSP_FEE,0 RI_INSP_FEE,0 CR_INSP_FEE,0 CNR_INSP_FEE,0 CRI_INSP_FEE,0 DTM_Lab_Fee,0 CTM_Lab_Fee,0 CDTM_Lab_Fee,0 CCTM_Lab_Fee,sum(NVL(B_TARGET,0)) B_TARGET,0 CCTM_adj_Fee,0 CUTM_adj_Fee,0 CCTM_adj_Fee_past,0 CUTM_adj_Fee_past from T83_BE_TARGET where  
				BE_PER=byear group by Region_Code 
				UNION ALL 
				Select Region_Code,region_code Serial_Code,0 DR_INSP_FEE,0 DNR_INSP_FEE,0 DRI_INSP_FEE,0 DCR_INSP_FEE,0 DCNR_INSP_FEE,0 DCRI_INSP_FEE,0 R_INSP_FEE,0 NR_INSP_FEE,0 RI_INSP_FEE,0 CR_INSP_FEE,0 CNR_INSP_FEE,0 CRI_INSP_FEE,0 DTM_Lab_Fee,0 CTM_Lab_Fee,0 CDTM_Lab_Fee,0 CCTM_Lab_Fee,0 B_TARGET, sum(NVL(adjustment_amt,0)) CCTM_adj_Fee,0 CUTM_adj_Fee,0 CCTM_adj_Fee_past,0 CUTM_adj_Fee_past 
				from t85_billing_adjustement_pcdo  
				where adjusment_yr_mth=wYrMth group by Region_Code 
				UNION ALL 
				Select Region_Code,region_code Serial_Code,0 DR_INSP_FEE,0 DNR_INSP_FEE,0 DRI_INSP_FEE,0 DCR_INSP_FEE,0 DCNR_INSP_FEE,0 DCRI_INSP_FEE,0 R_INSP_FEE,0 NR_INSP_FEE,0 RI_INSP_FEE,0 CR_INSP_FEE,0 CNR_INSP_FEE,0 CRI_INSP_FEE,0 DTM_Lab_Fee,0 CTM_Lab_Fee,0 CDTM_Lab_Fee,0 CCTM_Lab_Fee,0 B_TARGET, 0 CCTM_adj_Fee,sum(NVL(adjustment_amt,0)) CUTM_adj_Fee,0 CCTM_adj_Fee_past,0 CUTM_adj_Fee_past   
				from t85_billing_adjustement_pcdo  
				where adjusment_yr_mth between CumYrMth and wYrMth group by Region_Code 
				UNION ALL 
				Select Region_Code,region_code Serial_Code,0 DR_INSP_FEE,0 DNR_INSP_FEE,0 DRI_INSP_FEE,0 DCR_INSP_FEE,0 DCNR_INSP_FEE,0 DCRI_INSP_FEE,0 R_INSP_FEE,0 NR_INSP_FEE,0 RI_INSP_FEE,0 CR_INSP_FEE,0 CNR_INSP_FEE,0 CRI_INSP_FEE,0 DTM_Lab_Fee,0 CTM_Lab_Fee,0 CDTM_Lab_Fee,0 CCTM_Lab_Fee,0 B_TARGET,0 CCTM_adj_Fee,0 CUTM_adj_Fee,sum(NVL(adjustment_amt,0)) CCTM_adj_Fee_past,0 CUTM_adj_Fee_past 
				from t85_billing_adjustement_pcdo  
				where adjusment_yr_mth=wYrMth_Past group by Region_Code 
				UNION ALL 
				Select Region_Code,region_code Serial_Code,0 DR_INSP_FEE,0 DNR_INSP_FEE,0 DRI_INSP_FEE,0 DCR_INSP_FEE,0 DCNR_INSP_FEE,0 DCRI_INSP_FEE,0 R_INSP_FEE,0 NR_INSP_FEE,0 RI_INSP_FEE,0 CR_INSP_FEE,0 CNR_INSP_FEE,0 CRI_INSP_FEE,0 DTM_Lab_Fee,0 CTM_Lab_Fee,0 CDTM_Lab_Fee,0 CCTM_Lab_Fee,0 B_TARGET, 0 CCTM_adj_Fee,0 CUTM_adj_Fee,0 CCTM_adj_Fee_past,sum(NVL(adjustment_amt,0)) CUTM_adj_Fee_past   
				from t85_billing_adjustement_pcdo  
				where adjusment_yr_mth between CumYrPast and wYrMth_Past group by Region_Code
            )
        GROUP BY
            Region_Code
        ORDER BY
            Serial_Code;

END sp_PCDOReport_FinancialBilling;


================

create or replace PROCEDURE sp_PCDOReport_FinancialExpenditureRealization (
    wYrMth_Past IN VARCHAR2,
    CumYrPast IN VARCHAR2,
    wYrMth IN NUMBER,
    CumYrMth IN VARCHAR2,
    byear IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR,
    p_Result1 OUT SYS_REFCURSOR,
    p_Result2 OUT SYS_REFCURSOR,
    p_Result3 OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_Result FOR
    Select decode(Region_Code,'N','Northern','E','Eastern','W','Western','S','Southern','C','Central','Q','QA Corporate')Region_Code,
				decode(Region_Code,'N','A','E','B','W','C','S','D','C','E','Q','F')Serial_Code,
				Round((sum(DTM_EXP_FEE))/100000,2)DTM_EXP_FEE,
				Round((sum(DTM_TAX_FEE))/100000,2)DTM_TAX_FEE,
				Round((sum(CTM_EXP_FEE))/100000,2)CTM_EXP_FEE,
				Round((sum(CTM_TAX_FEE))/100000,2)CTM_TAX_FEE,
				Round((sum(CDTM_EXP_FEE))/100000,2)CDTM_EXP_FEE,
				Round((sum(CDTM_TAX_FEE))/100000,2)CDTM_TAX_FEE,
				Round((sum(CCTM_EXP_FEE))/100000,2)CCTM_EXP_FEE,
				Round((sum(CCTM_TAX_FEE))/100000,2)CCTM_TAX_FEE,
				Round((sum(TOA1))/100000,2)TOA1,
				Round((sum(TOA2))/100000,2)TOA2,
				Round((Round((sum(CCTM_EXP_FEE))/100000,2)/(Round((sum(TOA1))/100000,2)+Round((sum(TOA2))/100000,2)-Round((sum(CUTM_adj_Fee))/100000,2)))*100,2) OR_Actual,
				Round(sum(TOR),2)TOR,
				Round((sum(CUTM_adj_Fee))/100000,2) CUTM_adj_Fee 
				FROM 
				(SELECT Region_Code,Region_Code Serial_Code,sum(NVL(exp_amt,0)) DTM_EXP_FEE,0 DTM_TAX_FEE,0 CTM_EXP_FEE,0 CTM_TAX_FEE,0 CDTM_EXP_FEE,0 CDTM_TAX_FEE,0 CCTM_EXP_FEE,0 CCTM_TAX_FEE,0 TOA1,0 TOA2,0 TOR,0 CUTM_adj_Fee FROM T63_EXP  
				WHERE exp_per=wYrMth_Past GROUP BY region_code 
				UNION ALL 
				SELECT Region_Code,Region_Code Serial_Code,0 DTM_EXP_FEE,sum(NVL(tax_amt,0)) DTM_TAX_FEE,0 CTM_EXP_FEE,0 CTM_TAX_FEE,0 CDTM_EXP_FEE,0 CDTM_TAX_FEE,0 CCTM_EXP_FEE,0 CCTM_TAX_FEE,0 TOA1,0 TOA2,0 TOR,0 CUTM_adj_Fee FROM T63_EXP  
				WHERE exp_per=wYrMth_Past  GROUP BY region_code 
				UNION ALL 
				SELECT Region_Code,Region_Code Serial_Code,0 DTM_EXP_FEE,0 DTM_TAX_FEE,sum(NVL(exp_amt,0)) CTM_EXP_FEE,0 CTM_TAX_FEE,0 CDTM_EXP_FEE,0 CDTM_TAX_FEE,0 CCTM_EXP_FEE,0 CCTM_TAX_FEE,0 TOA1,0 TOA2,0 TOR,0 CUTM_adj_Fee FROM T63_EXP 
				WHERE exp_per BETWEEN CumYrPast AND wYrMth_Past GROUP BY region_code 
				UNION ALL 
				SELECT Region_Code,Region_Code Serial_Code,0 DTM_EXP_FEE,0 DTM_TAX_FEE,0 CTM_EXP_FEE,sum(NVL(tax_amt,0)) CTM_TAX_FEE,0 CDTM_EXP_FEE,0 CDTM_TAX_FEE,0 CCTM_EXP_FEE,0 CCTM_TAX_FEE,0 TOA1,0 TOA2,0 TOR,0 CUTM_adj_Fee FROM T63_EXP 
				WHERE exp_per BETWEEN CumYrPast AND wYrMth_Past GROUP BY region_code 
				UNION ALL 
				SELECT Region_Code,Region_Code Serial_Code,0 DTM_EXP_FEE,0 DTM_TAX_FEE,0 CTM_EXP_FEE,0 CTM_TAX_FEE,sum(NVL(exp_amt,0)) CDTM_EXP_FEE,0 CDTM_TAX_FEE,0 CCTM_EXP_FEE,0 CCTM_TAX_FEE,0 TOA1,0 TOA2,0 TOR,0 CUTM_adj_Fee FROM T63_EXP 
				WHERE exp_per=wYrMth GROUP BY region_code 
				UNION ALL 
				SELECT Region_Code,Region_Code Serial_Code,0 DTM_EXP_FEE,0 DTM_TAX_FEE,0 CTM_EXP_FEE,0 CTM_TAX_FEE,0 CDTM_EXP_FEE,sum(NVL(tax_amt,0)) CDTM_TAX_FEE,0 CCTM_EXP_FEE,0 CCTM_TAX_FEE,0 TOA1,0 TOA2,0 TOR,0 CUTM_adj_Fee FROM T63_EXP 
				WHERE exp_per=wYrMth GROUP BY region_code 
				UNION ALL 
				SELECT Region_Code,Region_Code Serial_Code,0 DTM_EXP_FEE,0 DTM_TAX_FEE,0 CTM_EXP_FEE,0 CTM_TAX_FEE,0 CDTM_EXP_FEE,0 CDTM_TAX_FEE,sum(NVL(exp_amt,0)) CCTM_EXP_FEE,0 CCTM_TAX_FEE,0 TOA1,0 TOA2,0 TOR,0 CUTM_adj_Fee FROM T63_EXP 
				WHERE exp_per BETWEEN CumYrMth AND wYrMth GROUP BY region_code 
				UNION ALL 
				SELECT Region_Code,Region_Code Serial_Code,0 DTM_EXP_FEE,0 DTM_TAX_FEE,0 CTM_EXP_FEE,0 CTM_TAX_FEE,0 CDTM_EXP_FEE,0 CDTM_TAX_FEE,0 CCTM_EXP_FEE,sum(NVL(tax_amt,0)) CCTM_TAX_FEE,0 TOA1,0 TOA2,0 TOR,0 CUTM_adj_Fee FROM T63_EXP 
				WHERE exp_per BETWEEN CumYrMth AND wYrMth GROUP BY region_code 
				UNION ALL 
				SELECT Region_Code,Region_Code Serial_Code,0 DTM_EXP_FEE,0 DTM_TAX_FEE,0 CTM_EXP_FEE,0 CTM_TAX_FEE,0 CDTM_EXP_FEE,0 CDTM_TAX_FEE,0 CCTM_EXP_FEE,0 CCTM_TAX_FEE,sum(NVL(INSP_FEE,0)) TOA1,0 TOA2,0 TOR,0 CUTM_adj_Fee FROM V22A_BILLING_SUMMARY 
				where substr(sector,1,1) in ('1','2', '3','5','6') and BILLING_YR_MTH BETWEEN CumYrMth AND wYrMth GROUP BY region_code 
				UNION ALL 
				SELECT Region_Code,Region_Code Serial_Code,0 DTM_EXP_FEE,0 DTM_TAX_FEE,0 CTM_EXP_FEE,0 CTM_TAX_FEE,0 CDTM_EXP_FEE,0 CDTM_TAX_FEE,0 CCTM_EXP_FEE,0 CCTM_TAX_FEE,0 TOA1,sum(NVL(LAB_EXP,0)) TOA2,0 TOR,0 CUTM_adj_Fee FROM t59_lab_exp 
				where lab_bill_per BETWEEN CumYrMth AND wYrMth GROUP BY region_code 
				UNION ALL 
				SELECT Region_Code,Region_Code Serial_Code,0 DTM_EXP_FEE,0 DTM_TAX_FEE,0 CTM_EXP_FEE,0 CTM_TAX_FEE,0 CDTM_EXP_FEE,0 CDTM_TAX_FEE,0 CCTM_EXP_FEE,0 CCTM_TAX_FEE,0 TOA1,0 TOA2,sum(NVL(E_TARGET,0)) TOR,0 CUTM_adj_Fee FROM T83_BE_TARGET 
				where BE_PER=byear GROUP BY region_code 
				UNION ALL 
				SELECT Region_Code,Region_Code Serial_Code,0 DTM_EXP_FEE,0 DTM_TAX_FEE,0 CTM_EXP_FEE,0 CTM_TAX_FEE,0 CDTM_EXP_FEE,0 CDTM_TAX_FEE,0 CCTM_EXP_FEE,0 CCTM_TAX_FEE,0 TOA1,0 TOA2,0 TOR,sum(NVL(adjustment_amt,0)) CUTM_adj_Fee FROM t85_billing_adjustement_pcdo 
				where adjusment_yr_mth between CumYrMth and wYrMth group by Region_Code
				)
                Group by Region_Code order by Serial_Code;

OPEN p_Result1 FOR
        Select decode(Region,'N','Northern','E','Eastern','W','Western','S','Southern','C','Central')Region,decode(Region,'N','A','E','B','W','C','S','D','C','E','Q','Z')Serial_Code,sum(real_amt)real_amt from 
				(Select Region,Region Serial_Code,sum(to_number(decode(Region,'N',Round((INSPECTION_FEE)/100000,2)+Round((advance_adjusted)/100000,2)+Round((lab_fee)/100000,2)+Round((receipt_fr_wr)/100000,2)+Round((receipt_fr_nr)/100000,2)+Round((receipt_fr_er)/100000,2)+Round((receipt_fr_sr)/100000,2)+Round((receipt_fr_cr)/100000,2)+Round((misc_receipt)/100000,2)-Round((transfer_to_wr)/100000,2)-Round((transfer_to_er)/100000,2)-Round((transfer_to_nr)/100000,2)-Round((transfer_to_sr)/100000,2)-Round((transfer_to_cr)/100000,2)-Round((misc_transfer)/100000,2),'0')))real_amt 
				from TEMP24_25_REALISATION where Region Not in('Q') Group by Region 
				UNION ALL 
				Select Region,Region Serial_Code,sum(to_number(decode(Region,'E',Round((INSPECTION_FEE)/100000,2)+Round((advance_adjusted)/100000,2)+Round((lab_fee)/100000,2)+Round((receipt_fr_wr)/100000,2)+Round((receipt_fr_nr)/100000,2)+Round((receipt_fr_er)/100000,2)+Round((receipt_fr_sr)/100000,2)+Round((receipt_fr_cr)/100000,2)+Round((misc_receipt)/100000,2)-Round((transfer_to_wr)/100000,2)-Round((transfer_to_er)/100000,2)-Round((transfer_to_nr)/100000,2)-Round((transfer_to_sr)/100000,2)-Round((transfer_to_cr)/100000,2)-Round((misc_transfer)/100000,2),'0')))real_amt 
				from TEMP24_25_REALISATION where Region Not in('Q') Group by Region 
				UNION ALL 
				Select Region,Region Serial_Code,sum(to_number(decode(Region,'W',Round((INSPECTION_FEE)/100000,2)+Round((advance_adjusted)/100000,2)+Round((lab_fee)/100000,2)+Round((receipt_fr_wr)/100000,2)+Round((receipt_fr_nr)/100000,2)+Round((receipt_fr_er)/100000,2)+Round((receipt_fr_sr)/100000,2)+Round((receipt_fr_cr)/100000,2)+Round((misc_receipt)/100000,2)-Round((transfer_to_wr)/100000,2)-Round((transfer_to_er)/100000,2)-Round((transfer_to_nr)/100000,2)-Round((transfer_to_sr)/100000,2)-Round((transfer_to_cr)/100000,2)-Round((misc_transfer)/100000,2),'0')))real_amt 
				from TEMP24_25_REALISATION where Region Not in('Q') Group by Region 
				UNION ALL 
				Select Region,Region Serial_Code,sum(to_number(decode(Region,'S',Round((INSPECTION_FEE)/100000,2)+Round((advance_adjusted)/100000,2)+Round((lab_fee)/100000,2)+Round((receipt_fr_wr)/100000,2)+Round((receipt_fr_nr)/100000,2)+Round((receipt_fr_er)/100000,2)+Round((receipt_fr_sr)/100000,2)+Round((receipt_fr_cr)/100000,2)+Round((misc_receipt)/100000,2)-Round((transfer_to_wr)/100000,2)-Round((transfer_to_er)/100000,2)-Round((transfer_to_nr)/100000,2)-Round((transfer_to_sr)/100000,2)-Round((transfer_to_cr)/100000,2)-Round((misc_transfer)/100000,2),'0')))real_amt 
				from TEMP24_25_REALISATION where Region Not in('Q') Group by Region 
				UNION ALL 
				Select Region,Region Serial_Code,sum(to_number(decode(Region,'C',Round((INSPECTION_FEE)/100000,2)+Round((advance_adjusted)/100000,2)+Round((lab_fee)/100000,2)+Round((receipt_fr_wr)/100000,2)+Round((receipt_fr_nr)/100000,2)+Round((receipt_fr_er)/100000,2)+Round((receipt_fr_sr)/100000,2)+Round((receipt_fr_cr)/100000,2)+Round((misc_receipt)/100000,2)-Round((transfer_to_wr)/100000,2)-Round((transfer_to_er)/100000,2)-Round((transfer_to_nr)/100000,2)-Round((transfer_to_sr)/100000,2)-Round((transfer_to_cr)/100000,2)-Round((misc_transfer)/100000,2),'0')))real_amt 
				from TEMP24_25_REALISATION where Region Not in('Q') Group by Region) 
				Group by Region order by Serial_Code;

    OPEN p_Result2 FOR
        Select decode(Region,'N','Northern','E','Eastern','W','Western','S','Southern','C','Central','Q','QA')Region,decode(Region,'N','A','E','B','W','C','S','D','C','E','Q','Z')Serial_Code,sum(real_amt)real_amt from 			
				(Select Region,Region Serial_Code,sum(to_number(decode(Region,'N',Round((INSPECTION_FEE)/100000,2)+Round((advance_adjusted)/100000,2)+Round((lab_fee)/100000,2)+Round((receipt_fr_wr)/100000,2)+Round((receipt_fr_nr)/100000,2)+Round((receipt_fr_er)/100000,2)+Round((receipt_fr_sr)/100000,2)+Round((receipt_fr_cr)/100000,2)+Round((misc_receipt)/100000,2)-Round((transfer_to_wr)/100000,2)-Round((transfer_to_er)/100000,2)-Round((transfer_to_nr)/100000,2)-Round((transfer_to_sr)/100000,2)-Round((transfer_to_cr)/100000,2)-Round((misc_transfer)/100000,2),'0')))real_amt 			
				from TEMP24_25_REALISATION where Region Not in('Q') Group by Region 			
				UNION ALL 			
				Select Region,Region Serial_Code,sum(to_number(decode(Region,'E',Round((INSPECTION_FEE)/100000,2)+Round((advance_adjusted)/100000,2)+Round((lab_fee)/100000,2)+Round((receipt_fr_wr)/100000,2)+Round((receipt_fr_nr)/100000,2)+Round((receipt_fr_er)/100000,2)+Round((receipt_fr_sr)/100000,2)+Round((receipt_fr_cr)/100000,2)+Round((misc_receipt)/100000,2)-Round((transfer_to_wr)/100000,2)-Round((transfer_to_er)/100000,2)-Round((transfer_to_nr)/100000,2)-Round((transfer_to_sr)/100000,2)-Round((transfer_to_cr)/100000,2)-Round((misc_transfer)/100000,2),'0')))real_amt 			
				from TEMP24_25_REALISATION where Region Not in('Q') Group by Region 			
				UNION ALL 			
				Select Region,Region Serial_Code,sum(to_number(decode(Region,'W',Round((INSPECTION_FEE)/100000,2)+Round((advance_adjusted)/100000,2)+Round((lab_fee)/100000,2)+Round((receipt_fr_wr)/100000,2)+Round((receipt_fr_nr)/100000,2)+Round((receipt_fr_er)/100000,2)+Round((receipt_fr_sr)/100000,2)+Round((receipt_fr_cr)/100000,2)+Round((misc_receipt)/100000,2)-Round((transfer_to_wr)/100000,2)-Round((transfer_to_er)/100000,2)-Round((transfer_to_nr)/100000,2)-Round((transfer_to_sr)/100000,2)-Round((transfer_to_cr)/100000,2)-Round((misc_transfer)/100000,2),'0')))real_amt 			
				from TEMP24_25_REALISATION where Region Not in('Q') Group by Region 			
				UNION ALL 			
				Select Region,Region Serial_Code,sum(to_number(decode(Region,'S',Round((INSPECTION_FEE)/100000,2)+Round((advance_adjusted)/100000,2)+Round((lab_fee)/100000,2)+Round((receipt_fr_wr)/100000,2)+Round((receipt_fr_nr)/100000,2)+Round((receipt_fr_er)/100000,2)+Round((receipt_fr_sr)/100000,2)+Round((receipt_fr_cr)/100000,2)+Round((misc_receipt)/100000,2)-Round((transfer_to_wr)/100000,2)-Round((transfer_to_er)/100000,2)-Round((transfer_to_nr)/100000,2)-Round((transfer_to_sr)/100000,2)-Round((transfer_to_cr)/100000,2)-Round((misc_transfer)/100000,2),'0')))real_amt 			
				from TEMP24_25_REALISATION where Region Not in('Q') Group by Region 			
				UNION ALL 			
				Select Region,Region Serial_Code,sum(to_number(decode(Region,'C',Round((INSPECTION_FEE)/100000,2)+Round((advance_adjusted)/100000,2)+Round((lab_fee)/100000,2)+Round((receipt_fr_wr)/100000,2)+Round((receipt_fr_nr)/100000,2)+Round((receipt_fr_er)/100000,2)+Round((receipt_fr_sr)/100000,2)+Round((receipt_fr_cr)/100000,2)+Round((misc_receipt)/100000,2)-Round((transfer_to_wr)/100000,2)-Round((transfer_to_er)/100000,2)-Round((transfer_to_nr)/100000,2)-Round((transfer_to_sr)/100000,2)-Round((transfer_to_cr)/100000,2)-Round((misc_transfer)/100000,2),'0')))real_amt 			
				from TEMP24_25_REALISATION where Region Not in('Q') Group by Region) 
				Group by Region order by Serial_Code;

    OPEN p_Result3 FOR
        Select region_code,decode(region_code,'N','A','E','B','W','C','S','D','C','E')Serial_Code,sum(bill_am)bill_am,sum(cubill_amt)cubill_amt from 
				(Select region_code,region_code Serial_Code,sum(to_number(decode(REGION_CODE,'N',(bill_amount)/100000,'0')))bill_am,0 cubill_amt from V22_BILL where (to_char(BILL_DT,'YYYYMM') between wYrMth and wYrMth)Group by region_code 
				Union All 
				Select region_code,region_code Serial_Code,sum(to_number(decode(REGION_CODE,'E',(bill_amount)/100000,'0')))bill_am,0 cubill_amt from V22_BILL where (to_char(BILL_DT,'YYYYMM') between wYrMth and wYrMth)Group by region_code 
				Union All 
				Select region_code,region_code Serial_Code,sum(to_number(decode(REGION_CODE,'W',(bill_amount)/100000,'0')))bill_am,0 cubill_amt from V22_BILL where (to_char(BILL_DT,'YYYYMM') between wYrMth and wYrMth)Group by region_code 
				Union All 
				Select region_code,region_code Serial_Code,sum(to_number(decode(REGION_CODE,'S',(bill_amount)/100000,'0')))bill_am,0 cubill_amt from V22_BILL where (to_char(BILL_DT,'YYYYMM') between wYrMth and wYrMth)Group by region_code 
				Union All 
				Select region_code,region_code Serial_Code,sum(to_number(decode(REGION_CODE,'C',(bill_amount)/100000,'0')))bill_am,0 cubill_amt from V22_BILL where (to_char(BILL_DT,'YYYYMM') between wYrMth and wYrMth)Group by region_code 
				Union All 
				Select Region_Code, Region_Code Serial_Code,sum(to_number(decode(Region_Code,'N',(LAB_EXP*1.18)/100000,'0')))bill_am,0 culab_amt from t59_lab_exp where lab_bill_per=wYrMth group by Region_Code 
				Union All 
				Select Region_Code, Region_Code Serial_Code,sum(to_number(decode(Region_Code,'E',(LAB_EXP*1.18)/100000,'0')))bill_am,0 culab_amt from t59_lab_exp where lab_bill_per=wYrMth group by Region_Code 
				Union All 
				Select Region_Code, Region_Code Serial_Code,sum(to_number(decode(Region_Code,'W',(LAB_EXP*1.18)/100000,'0')))bill_am,0 culab_amt from t59_lab_exp where lab_bill_per=wYrMth group by Region_Code 
				Union All 
				Select Region_Code, Region_Code Serial_Code,sum(to_number(decode(Region_Code,'S',(LAB_EXP*1.18)/100000,'0')))bill_am,0 culab_amt from t59_lab_exp where lab_bill_per=wYrMth group by Region_Code 
				Union All 
				Select Region_Code, Region_Code Serial_Code,sum(to_number(decode(Region_Code,'C',(LAB_EXP*1.18)/100000,'0')))bill_am,0 culab_amt from t59_lab_exp where lab_bill_per=wYrMth group by Region_Code 
				Union All 
				Select region_code,region_code Serial_Code,0 bill_am,sum(to_number(decode(REGION_CODE,'N',(bill_amount)/100000,'0'))) cubill_amt from V22_BILL where (to_char(BILL_DT,'YYYYMM') between CumYrMth and wYrMth)Group by region_code 
				Union All 
				Select region_code,region_code Serial_Code,0 bill_am,sum(to_number(decode(REGION_CODE,'E',(bill_amount)/100000,'0'))) cubill_amt from V22_BILL where (to_char(BILL_DT,'YYYYMM') between CumYrMth and wYrMth)Group by region_code 
				Union All 
				Select region_code,region_code Serial_Code,0 bill_am,sum(to_number(decode(REGION_CODE,'W',(bill_amount)/100000,'0'))) cubill_amt from V22_BILL where (to_char(BILL_DT,'YYYYMM') between CumYrMth and wYrMth)Group by region_code 
				Union All 
				Select region_code,region_code Serial_Code,0 bill_am,sum(to_number(decode(REGION_CODE,'S',(bill_amount)/100000,'0'))) cubill_amt from V22_BILL where (to_char(BILL_DT,'YYYYMM') between CumYrMth and wYrMth)Group by region_code 
				Union All 
				Select region_code,region_code Serial_Code,0 bill_am,sum(to_number(decode(REGION_CODE,'C',(bill_amount)/100000,'0'))) cubill_amt from V22_BILL where (to_char(BILL_DT,'YYYYMM') between CumYrMth and wYrMth)Group by region_code 
				UNION ALL 
				Select Region_Code,Region_Code Serial_Code,0 bill_am,sum(to_number(decode(Region_Code,'N',(LAB_EXP*1.18)/100000,'0'))) cubill_amt from t59_lab_exp where lab_bill_per between CumYrMth and wYrMth group by Region_Code 
				UNION ALL 
				Select Region_Code,Region_Code Serial_Code,0 bill_am,sum(to_number(decode(Region_Code,'E',(LAB_EXP*1.18)/100000,'0'))) cubill_amt from t59_lab_exp where lab_bill_per between CumYrMth and wYrMth group by Region_Code 
				UNION ALL 
				Select Region_Code,Region_Code Serial_Code,0 bill_am,sum(to_number(decode(Region_Code,'W',(LAB_EXP*1.18)/100000,'0'))) cubill_amt from t59_lab_exp where lab_bill_per between CumYrMth and wYrMth group by Region_Code 
				UNION ALL 
				Select Region_Code,Region_Code Serial_Code,0 bill_am,sum(to_number(decode(Region_Code,'S',(LAB_EXP*1.18)/100000,'0'))) cubill_amt from t59_lab_exp where lab_bill_per between CumYrMth and wYrMth group by Region_Code 
				UNION ALL 
				Select Region_Code,Region_Code Serial_Code,0 bill_am,sum(to_number(decode(Region_Code,'C',(LAB_EXP*1.18)/100000,'0'))) cubill_amt from t59_lab_exp where lab_bill_per between CumYrMth and wYrMth group by Region_Code) 
				Group by region_code order by Serial_Code;

END sp_PCDOReport_FinancialExpenditureRealization;
=================================


ALTER TABLE T16_Ic_Cancel 
ADD ID NUMBER(6,0) ;

CREATE SEQUENCE T16_Ic_Cancel_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;
  
UPDATE T16_Ic_Cancel
   SET ID = T16_Ic_Cancel_seq.nextval;
   
ALTER TABLE T16_Ic_Cancel
    MODIFY ID NUMBER(6,0) DEFAULT T16_Ic_Cancel_seq.nextval;


===================

ALTER TABLE T15_PO_DETAIL 
ADD DRAWING_NO VARCHAR2(30 BYTE);

ALTER TABLE T15_PO_DETAIL 
ADD SPECIFICATION_NO VARCHAR2(30 BYTE);

======================
ALTER TABLE T82_Po_Detail 
ADD DRAWING_NO VARCHAR2(30 BYTE);

ALTER TABLE T82_Po_Detail 
ADD SPECIFICATION_NO VARCHAR2(30 BYTE);

=====================
create or replace PROCEDURE sp_PCDOReport_FinancialOutstanding (
    wYrMth_Past IN VARCHAR2,
    CumYrPast IN VARCHAR2,
    wYrMth IN VARCHAR2,
    CumYrMth IN VARCHAR2,
    bakdate IN VARCHAR2,
    lstdate IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR,
    p_Result1 OUT SYS_REFCURSOR
) AS

  curr_wYrMth VARCHAR2(20); 
  curr_CumYrMth VARCHAR2(20); 
  curr_CumYrPast VARCHAR2(20); 
  curr_bakdate VARCHAR2(20); 
  curr_lstdate VARCHAR2(20);
BEGIN

    SELECT TO_CHAR(LAST_DAY(TO_DATE(wYrMth, 'YYYYMM')), 'DD-MON-YYYY') INTO curr_wYrMth FROM dual;
    SELECT TO_CHAR(TRUNC(TO_DATE(CumYrMth, 'YYYYMM')), 'DD-MON-YYYY') INTO curr_CumYrMth FROM dual;
    SELECT TO_CHAR(TRUNC(TO_DATE(CumYrPast, 'YYYYMM')), 'DD-MON-YYYY') INTO curr_CumYrPast FROM dual;
    SELECT TO_CHAR(LAST_DAY(TO_DATE(bakdate, 'YYYYMM')), 'DD-MON-YYYY') INTO curr_bakdate FROM dual;
    SELECT TO_CHAR(TRUNC(TO_DATE(lstdate, 'YYYYMM')), 'DD-MON-YYYY') INTO curr_lstdate FROM dual;


    OPEN p_Result FOR
        Select decode(region_code,'N','Northern','E','Eastern','W','Western','S','Southern','C','Central')region_code,decode(Region_Code,'N','A','E','B','W','C','S','D','C','E')Serial_Code,sum(lm_amt)lm_amt,sum(sinc_amt)sinc_amt,sum(cum_amt)cum_amt,
				sum(Pri_amt)Pri_amt,sum(amt_out)amt_out,sum(tot_exp)tot_exp,sum(bill_amt)bill_amt,
				Round((sum(amt_out)-sum(tot_exp))*365/(sum(bill_amt)),0)days 
				from  
				(Select region_code,region_code Serial_Code,Round(sum(LY_OUTS)/100000,2)lm_amt,0 sinc_amt,0 cum_amt,
				0 Pri_amt,0 amt_out,0 tot_exp,0 bill_amt 
				From T84_OUTS_LY where   
				LY_PER = wYrMth_Past 
				and region_code!='Q' group by region_code 
				Union All 
				Select region_code,region_code Serial_Code,0 lm_amt,Round(sum(amount_outstanding)/100000,2) sinc_amt,0 cum_amt,
				0 Pri_amt,0 amt_out,0 tot_exp,0 bill_amt  
				From v22b_outstanding_bills where   
				AMOUNT_OUTSTANDING >0 and 
				bill_dt between curr_CumYrMth and curr_wYrMth  
				and region_code!='Q' group by region_code 
				union all 
				Select region_code,region_code Serial_Code,0 lm_amt,0 sinc_amt,Round(sum(amount_outstanding)/100000,2)cum_amt,
				0 Pri_amt,0 amt_out,0 tot_exp,0 bill_amt 
				From v22b_outstanding_bills where   
				AMOUNT_OUTSTANDING >0 and 
				bill_dt between curr_CumYrPast and curr_bakdate
				and region_code!='Q' group by region_code 
				union all 
				Select region_code,region_code Serial_Code,0 lm_amt,0 sinc_amt,0 cum_amt,Round(sum(amount_outstanding)/100000,2) Pri_amt,
				0 amt_out,0 tot_exp,0 bill_amt 
				From v22b_outstanding_bills where   
				AMOUNT_OUTSTANDING >0 and 
				bill_dt <= curr_CumYrPast 
				and region_code!='Q' group by region_code 
				union all 
				Select region_code,region_code Serial_Code,0 lm_amt,0 sinc_amt,0 cum_amt,0 Pri_amt,Round(sum(amount_outstanding)/100000,2)amt_out,0 tot_exp,0 bill_amt 
				From V22B_OUTSTANDING_BILLS Where AMOUNT_OUTSTANDING > 0 and  
				bill_dt <= curr_wYrMth 
				and region_code!='Q' 
				group by region_code 
				union all 
				Select SUBSTR(T25.VCHR_NO,1,1) region_code,SUBSTR(T25.VCHR_NO,1,1) Serial_Code,0 lm_amt,0 sinc_amt,0 cum_amt,0 Pri_amt,0 amt_out,Round(sum(T25.SUSPENSE_AMT)/100000,2)tot_exp,0 bill_amt 
				From T25_RV_DETAILS T25,T12_BILL_PAYING_OFFICER T12 Where  
				(T25.ACC_CD not in (2709,2210,2212))  
				and nvl(T25.BPO_CD,'00000')=T12.BPO_CD and nvl(T25.SUSPENSE_AMT,0) <> 0 
				and SUBSTR(T25.VCHR_NO,1,1)!='Q' and SUBSTR(T25.VCHR_NO,1,1)!='1' 
				group by SUBSTR(T25.VCHR_NO,1,1) 
				union all 
				Select region_code,region_code Serial_Code,0 lm_amt,0 sinc_amt,0 cum_amt,0 Pri_amt,0 amt_out,0 tot_exp,Round(sum(INSP_FEE)/100000,2)bill_amt From V22_BILL                           	
				Where bill_dt between curr_lstdate and curr_wYrMth and region_code!='Q' group by region_code)                          
				group by region_code 
                order by Serial_Code;

    OPEN p_Result1 FOR
        Select decode(region_code,'N','Northern','E','Eastern','W','Western','S','Southern','C','Central')region_code,decode(Region_Code,'N','A','E','B','W','C','S','D','C','E')Serial_Code,sum(amtR)amtR,sum(amtNR)amtNR,(sum(amtR)+sum(amtNR))total
        From
        (Select region_code,region_code Serial_Code,Round(sum(amount_outstanding)/100000,2)amtR,0 amtNR From v22b_outstanding_bills where AMOUNT_OUTSTANDING >0 and BILL_DT <='30-SEP-2020' and bpo_type='R' and region_code!='Q' group by region_code
        Union all
        Select region_code,region_code Serial_Code,0 amtR,Round(sum(amount_outstanding)/100000,2) amtNR From v22b_outstanding_bills where AMOUNT_OUTSTANDING >0 and BILL_DT <='30-SEP-2020' and bpo_type!='R' and region_code!='Q' group by region_code)
        group by region_code 
        order by Serial_Code;

END sp_PCDOReport_FinancialOutstanding;

===============================
create or replace PROCEDURE sp_PCDOReport_EOIPricedOfferSent (
    wYrMth IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_Result FOR
    SELECT
        CONTRACT_ID,
        CLIENT_NAME,
        CONTRACT_NO,
        TO_CHAR(CONT_PER_FROM, 'dd/mm/yyyy') AS PER_FROM,
        TO_CHAR(CONT_PER_TO, 'dd/mm/yyyy') AS PER_TO,
        ROUND(CONTRACT_FEE_NUM/100000, 2) AS CONTRACT_FEE_NUM,
        CO_NAME,
        CONTRACT_SPECIAL_CONDN,
        CONTRACT_PANALTY,
        CONT_INSP_FEE,
        SCOPE_OF_WORK,
        TO_CHAR(OFFER_DT, 'dd/mm/yyyy') AS OFFER_DATE,
        EXP_OR,
        DECODE(REGION_CODE, 'N', 'NORTHERN', 'S', 'SOUTHERN', 'E', 'EASTERN', 'W', 'WESTERN', 'C', 'CENTRAL', 'Q', 'QA') AS REGION,
        ROUND(MONTHS_BETWEEN(CONT_PER_TO, CONT_PER_FROM), 2) AS DURATION
    FROM
        T57_ONGOING_CONTRACTS T57
    JOIN
        T08_IE_CONTROLL_OFFICER T08 ON T57.CONTRACT_CM = T08.CO_CD
    WHERE
        TO_CHAR(OFFER_DT, 'yyyyMM') = wYrMth
    ORDER BY
        REGION_CODE,
        CONTRACT_FEE_NUM DESC,
        CLIENT_NAME,
        CONTRACT_NO;
END sp_PCDOReport_EOIPricedOfferSent;

===============================
CREATE OR REPLACE PROCEDURE sp_PCDOReport_BDEfforts (
    wYrMth IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_Result FOR
    SELECT 
        ROW_NUMBER() OVER (ORDER BY TO_CHAR(visit_dt, 'dd.mm.yyyy')) AS sn,
        TO_CHAR(visit_dt, 'dd.mm.yyyy') AS Visit_dt,
        cm.co_name AS Rites_officer,
        Client AS Organisation_visited,
        (client_officer_name || ',' || designation) AS Detail_visit,
        highlights,
        overall_outcome,
        region_cd
    FROM t58_client_contact cc
    INNER JOIN t08_IE_CONTROLL_OFFICER cm ON cc.rites_officer_cd = cm.co_cd
    WHERE TO_CHAR(visit_dt, 'yyyymm') = wYrMth AND TYPE_CB = 'B';
END sp_PCDOReport_BDEfforts;



==================

create or replace PROCEDURE sp_PCDOReport_PreviousOfferSent (
    wYrMth IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_Result FOR
    SELECT 
        CONTRACT_ID,
        CLIENT_NAME,
        CONTRACT_NO,
        TO_CHAR(CONT_PER_FROM, 'dd/mm/yyyy') AS PER_FROM,
        TO_CHAR(CONT_PER_TO, 'dd/mm/yyyy') AS PER_TO,
        ROUND(CONTRACT_FEE_NUM / 100000, 2) AS CONTRACT_FEE_NUM,
        CO_NAME,
        CONTRACT_SPECIAL_CONDN,
        CONTRACT_PANALTY,
        CONT_INSP_FEE,
        SCOPE_OF_WORK,
        TO_CHAR(OFFER_DT, 'dd/mm/yyyy') AS OFFER_DATE,
        EXP_OR,
        CASE
            WHEN REGION_CODE = 'N' THEN 'NORTHERN'
            WHEN REGION_CODE = 'S' THEN 'SOUTHERN'
            WHEN REGION_CODE = 'E' THEN 'EASTERN'
            WHEN REGION_CODE = 'W' THEN 'WESTERN'
            WHEN REGION_CODE = 'C' THEN 'CENTRAL'
            WHEN REGION_CODE = 'Q' THEN 'QA'
            ELSE ''
        END AS REGION
    FROM T57_ONGOING_CONTRACTS T57
    INNER JOIN T08_IE_CONTROLL_OFFICER T08 ON T57.CONTRACT_CM = T08.CO_CD
    WHERE TO_CHAR(OFFER_DT, 'yyyyMM') < wYrMth AND STATUS = 'S'
    ORDER BY REGION_CODE, CONTRACT_FEE_NUM DESC, CLIENT_NAME, CONTRACT_NO;

END sp_PCDOReport_PreviousOfferSent;

===============

create or replace PROCEDURE sp_PCDOReport_ProgressofChecksheets (
    wYrMth IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_Result FOR
    SELECT
        ROW_NUMBER() OVER (ORDER BY im.item_cd) AS rn,
        im.ITEM_DESC,
        ie.ie_name AS ie,
        co.co_name AS co_name,
        im.creation_rev_dt,
        SUBSTR(im.item_cd, 1, 1) AS region_cd
    FROM
        t61_item_master im
    INNER JOIN
        t08_ie_controll_officer co ON im.cm = co.co_cd
    INNER JOIN
        T09_IE ie ON im.ie = ie.ie_cd
    WHERE
        TO_CHAR(im.creation_rev_dt, 'yyyymm') = wYrMth;

END sp_PCDOReport_ProgressofChecksheets;

=================================
create or replace PROCEDURE sp_PCDOReport_Complaints (
    wYrMth IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR,
    p_Result_jIdisposedComplaints OUT SYS_REFCURSOR,
    p_Result_breakupComplaintsModels OUT SYS_REFCURSOR,
    p_Result_othercasesComplaintsModels OUT SYS_REFCURSOR,
    p_Result_long_PendingModels OUT SYS_REFCURSOR,
    p_Result_cR_REJModels OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_Result FOR
    SELECT
        DECODE(region, 'N', 'Northern', 'E', 'Eastern', 'W', 'Western', 'S', 'Southern', 'C', 'Central') AS region,
        DECODE(region, 'N', 'A', 'E', 'B', 'W', 'C', 'S', 'D', 'C', 'E') AS Serial_Code,
        SUM(Rec_All_Complaints) AS Rec_All_Complaints,
        SUM(Rec_Com_JI) AS Rec_Com_JI,
        SUM(Des_All_Complaints) AS Des_All_Complaints,
        SUM(Des_req_JI) AS Des_req_JI,
        (SUM(Des_All_Complaints) + SUM(Des_req_JI)) AS Des_AllFinal_Complaints
    FROM (
        SELECT
            SUBSTR(complaint_id, 1, 1) AS region,
            SUBSTR(complaint_id, 1, 1) AS Serial_Code,
            COUNT(*) AS Rec_All_Complaints,
            0 AS Rec_Com_JI,
            0 AS Des_All_Complaints,
            0 AS Des_req_JI
        FROM
            T40_Consignee_complaints
        WHERE
            TO_CHAR(complaint_dt, 'yyyymm') = wYrMth
        GROUP BY
            SUBSTR(complaint_id, 1, 1)
        UNION ALL
        SELECT
            ji_region AS region,
            ji_region AS Serial_Code,
            0 AS Rec_All_Complaints,
            COUNT(*) AS Rec_Com_JI,
            0 AS Des_All_Complaints,
            0 AS Des_req_JI
        FROM
            T40_Consignee_complaints
        WHERE
            TO_CHAR(ji_dt, 'yyyymm') = wYrMth
            AND ji_required = 'Y'
        GROUP BY
            ji_region
        UNION ALL
        SELECT
            SUBSTR(complaint_id, 1, 1) AS region,
            SUBSTR(complaint_id, 1, 1) AS Serial_Code,
            0 AS Rec_All_Complaints,
            0 AS Rec_Com_JI,
            COUNT(*) AS Des_All_Complaints,
            0 AS Des_req_JI
        FROM
            T40_Consignee_complaints
        WHERE
            TO_CHAR(complaint_dt, 'yyyymm') = wYrMth
            AND ji_required = 'N'
        GROUP BY
            SUBSTR(complaint_id, 1, 1)
        UNION ALL
        SELECT
            ji_region AS region,
            ji_region AS Serial_Code,
            0 AS Rec_All_Complaints,
            0 AS Rec_Com_JI,
            0 AS Des_All_Complaints,
            COUNT(*) AS Des_req_JI
        FROM
            T40_Consignee_complaints
        WHERE
            TO_CHAR(conclusion_dt, 'yyyymm') = wYrMth
            AND ji_required = 'Y'
        GROUP BY
            ji_region
    )
    GROUP BY
        region
    ORDER BY
        Serial_Code;
        
    OPEN p_Result_jIdisposedComplaints FOR
            SELECT
                DECODE(region, 'N', 'Northern', 'E', 'Eastern', 'W', 'Western', 'S', 'Southern', 'C', 'Central') AS region,
                DECODE(region, 'N', 'A', 'E', 'B', 'W', 'C', 'S', 'D', 'C', 'E') AS Serial_Code,
                SUM(Material_Accepted) AS Material_Accepted,
                SUM(Finally_Rejected) AS Finally_Rejected,
                SUM(Sorting) AS Sorting,
                SUM(Rectification) AS Rectification,
                SUM(Price_Reduction) AS Price_Reduction,
                SUM(Lifted_before_JI) AS Lifted_before_JI,
                SUM(Not_on_Rites_Ac) AS Not_on_Rites_Ac,
                SUM(Transit_demand) AS Transit_demand,
                SUM(Unstamped) AS Unstamped,
                SUM(deleted) AS deleted
				from 
				(select Ji_region region,Ji_region Serial_Code,Count(*)Material_Accepted,0 Finally_Rejected,0 Sorting,0 Rectification,0 Price_Reduction,0 Lifted_before_JI,0 Not_on_Rites_Ac,0 Transit_demand,0 Unstamped,0 deleted 
				from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and ji_status_cd=1 group by Ji_region 
				Union All 
				select Ji_region region,Ji_region Serial_Code,0 Material_Accepted,Count(*)Finally_Rejected,0 Sorting,0 Rectification,0 Price_Reduction,0 Lifted_before_JI,0 Not_on_Rites_Ac,0 Transit_demand,0 Unstamped,0 deleted  
				from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and ji_status_cd=2 group by Ji_region 
				Union All 
				select Ji_region region,Ji_region Serial_Code,0 Material_Accepted,0 Finally_Rejected,Count(*)Sorting,0 Rectification,0 Price_Reduction,0 Lifted_before_JI,0 Not_on_Rites_Ac,0 Transit_demand,0 Unstamped,0 deleted 
				from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and ji_status_cd=3 group by Ji_region 
				Union All  
				select Ji_region region,Ji_region Serial_Code,0 Material_Accepted,0 Finally_Rejected,0 Sorting,Count(*)Rectification,0 Price_Reduction,0 Lifted_before_JI,0 Not_on_Rites_Ac,0 Transit_demand,0 Unstamped,0 deleted   
				from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and ji_status_cd=4 group by Ji_region 
				Union All 
				select Ji_region region,Ji_region Serial_Code,0 Material_Accepted,0 Finally_Rejected,0 Sorting,0 Rectification,Count(*)Price_Reduction,0 Lifted_before_JI,0 Not_on_Rites_Ac,0 Transit_demand,0 Unstamped,0 deleted 
				from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and ji_status_cd=5 group by Ji_region 
				Union All 
				select Ji_region region,Ji_region Serial_Code,0 Material_Accepted,0 Finally_Rejected,0 Sorting,0 Rectification,0 Price_Reduction,Count(*)Lifted_before_JI,0 Not_on_Rites_Ac,0 Transit_demand,0 Unstamped,0 deleted  
				from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and ji_status_cd=6 group by Ji_region 
				Union All 
				select Ji_region region,Ji_region Serial_Code,0 Material_Accepted,0 Finally_Rejected,0 Sorting,0 Rectification,0 Price_Reduction,0 Lifted_before_JI,Count(*)Not_on_Rites_Ac,0 Transit_demand,0 Unstamped,0 deleted  
				from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and ji_status_cd=9 group by Ji_region 
				Union All 
				select Ji_region region,Ji_region Serial_Code,0 Material_Accepted,0 Finally_Rejected,0 Sorting,0 Rectification,0 Price_Reduction,0 Lifted_before_JI,0 Not_on_Rites_Ac,Count(*)Transit_demand,0 Unstamped,0 deleted  
				from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and ji_status_cd=7 group by Ji_region 
				Union All 
				select Ji_region region,Ji_region Serial_Code,0 Material_Accepted,0 Finally_Rejected,0 Sorting,0 Rectification,0 Price_Reduction,0 Lifted_before_JI,0 Not_on_Rites_Ac,0 Transit_demand,Count(*)Unstamped,0 deleted   
				from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and ji_status_cd=8 group by Ji_region 
				Union all 
				select Ji_region region,Ji_region Serial_Code,0 Material_Accepted,0 Finally_Rejected,0 Sorting,0 Rectification,0 Price_Reduction,0 Lifted_before_JI,0 Not_on_Rites_Ac,0 Transit_demand,0 Unstamped,Count(*)deleted 
				from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and ji_status_cd=10 group by Ji_region) 
				group by region order by Serial_Code;
                
    OPEN p_Result_breakupComplaintsModels FOR
        SELECT
          CASE
            WHEN region = 'N' THEN 'Northern'
            WHEN region = 'E' THEN 'Eastern'
            WHEN region = 'W' THEN 'Western'
            WHEN region = 'S' THEN 'Southern'
            WHEN region = 'C' THEN 'Central'
          END AS region,
          CASE
            WHEN region = 'N' THEN 'A'
            WHEN region = 'E' THEN 'B'
            WHEN region = 'W' THEN 'C'
            WHEN region = 'S' THEN 'D'
            WHEN region = 'C' THEN 'E'
          END AS Serial_Code,
          SUM(D) AS D,
          SUM(S) AS S,
          SUM(W) AS W,
          SUM(E) AS E,
          SUM(C_C) AS C_C,
          SUM(P) AS P,
          SUM(N) AS N,
          SUM(M) AS M,
          SUM(L) AS L,
          SUM(O) AS O
        from 
        (
        select Ji_region region,Ji_region Serial_Code,Count(*)D,0 S,0 W,0 E,0 C_C,0 P,0 N,0 M,0 L,0 O 
        from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and defect_cd='D' group by Ji_region 
        Union All 
        select Ji_region region,Ji_region Serial_Code,0 D,Count(*)S,0 W,0 E,0 C_C,0 P,0 N,0 M,0 L,0 O 
        from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and defect_cd in ('S','V') group by Ji_region 
        Union All 
        select Ji_region region,Ji_region Serial_Code,0 D,0 S,Count(*)W,0 E,0 C_C,0 P,0 N,0 M,0 L,0 O 
        from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and defect_cd='W' group by Ji_region 
        Union All  
        select Ji_region region,Ji_region Serial_Code,0 D,0 S,0 W,Count(*)E,0 C_C,0 P,0 N,0 M,0 L,0 O  
        from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and defect_cd='E' group by Ji_region 
        Union All 
        select Ji_region region,Ji_region Serial_Code,0 D,0 S,0 W,0 E,Count(*)C_C,0 P,0 N,0 M,0 L,0 O 
        from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and defect_cd='C' group by Ji_region 
        Union All 
        select Ji_region region,Ji_region Serial_Code,0 D,0 S,0 W,0 E,0 C_C,Count(*)P,0 N,0 M,0 L,0 O  
        from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and defect_cd='P' group by Ji_region 
        Union All 
        select Ji_region region,Ji_region Serial_Code,0 D,0 S,0 W,0 E,0 C_C,0 P,Count(*)N,0 M,0 L,0 O 
        from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and defect_cd='N' group by Ji_region 
        Union All 
        select Ji_region region,Ji_region Serial_Code,0 D,0 S,0 W,0 E,0 C_C,0 P,0 N,Count(*)M,0 L,0 O 
        from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and defect_cd='M' group by Ji_region 
        Union All 
        select Ji_region region,Ji_region Serial_Code,0 D,0 S,0 W,0 E,0 C_C,0 P,0 N,0 M,Count(*)L,0 deleted  
        from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and defect_cd='L' group by Ji_region 
        Union all 
        select Ji_region region,Ji_region Serial_Code,0 D,0 S,0 W,0 E,0 C_C,0 P,0 N,0 M,0 L,Count(*)O 
        from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and defect_cd='O' group by Ji_region) 
        group by region order by Serial_Code;
        
    OPEN p_Result_othercasesComplaintsModels FOR
        SELECT
          region,
          SUM(Rec_Com_JI) AS Rec_Com_JI,
          SUM(Des_req_JI) AS Des_req_JI
        from 
        (Select SUBSTR(JI_SNO,1,2)region,Count(*)Rec_Com_JI,0 Des_req_JI from T40_Consignee_complaints where 
        to_char(ji_dt,'yyyymm')='wYrMth+"' and ji_required='Y' and ji_region='N' group by SUBSTR(JI_SNO,1,2) 
        union all 
        select SUBSTR(JI_SNO,1,2)region,0 Rec_Com_JI,Count(*)Des_req_JI from  T40_Consignee_complaints where  
        to_char(conclusion_dt,'yyyymm')=wYrMth and ji_required='Y' and ji_region='N' group by SUBSTR(JI_SNO,1,2)) 
        group by region order by region desc;
        
    OPEN p_Result_long_PendingModels FOR
        Select 
            insp_region region,
            ji_sno,
            to_char(ji_dt,'dd-mm-yyyy')pending_date,
            remarks 
            from T40_Consignee_complaints
				where Ji_region='N' and ji_status_cd='0' and ji_required='Y' 
				and (sysdate - ji_dt)>=90 order by ji_dt;
                
    OPEN p_Result_cR_REJModels FOR
        Select case_No, 
            consignee,
            des_com,
            conclusion 
            from T81_CR_REJ 
				where region='C' 
				and rej_dt= wYrMth 
                order by rej_dt;
                
END sp_PCDOReport_Complaints;

==============================

create or replace PROCEDURE sp_PCDOReport_Complaints (
    wYrMth IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR,
    p_Result_jIdisposedComplaints OUT SYS_REFCURSOR,
    p_Result_breakupComplaintsModels OUT SYS_REFCURSOR,
    p_Result_othercasesComplaintsModels OUT SYS_REFCURSOR,
    p_Result_long_PendingModels OUT SYS_REFCURSOR,
    p_Result_cR_REJModels OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_Result FOR
    SELECT
        DECODE(region, 'N', 'Northern', 'E', 'Eastern', 'W', 'Western', 'S', 'Southern', 'C', 'Central') AS region,
        DECODE(region, 'N', 'A', 'E', 'B', 'W', 'C', 'S', 'D', 'C', 'E') AS Serial_Code,
        SUM(Rec_All_Complaints) AS Rec_All_Complaints,
        SUM(Rec_Com_JI) AS Rec_Com_JI,
        SUM(Des_All_Complaints) AS Des_All_Complaints,
        SUM(Des_req_JI) AS Des_req_JI,
        (SUM(Des_All_Complaints) + SUM(Des_req_JI)) AS Des_AllFinal_Complaints
    FROM (
        SELECT
            SUBSTR(complaint_id, 1, 1) AS region,
            SUBSTR(complaint_id, 1, 1) AS Serial_Code,
            COUNT(*) AS Rec_All_Complaints,
            0 AS Rec_Com_JI,
            0 AS Des_All_Complaints,
            0 AS Des_req_JI
        FROM
            T40_Consignee_complaints
        WHERE
            TO_CHAR(complaint_dt, 'yyyymm') = wYrMth
        GROUP BY
            SUBSTR(complaint_id, 1, 1)
        UNION ALL
        SELECT
            ji_region AS region,
            ji_region AS Serial_Code,
            0 AS Rec_All_Complaints,
            COUNT(*) AS Rec_Com_JI,
            0 AS Des_All_Complaints,
            0 AS Des_req_JI
        FROM
            T40_Consignee_complaints
        WHERE
            TO_CHAR(ji_dt, 'yyyymm') = wYrMth
            AND ji_required = 'Y'
        GROUP BY
            ji_region
        UNION ALL
        SELECT
            SUBSTR(complaint_id, 1, 1) AS region,
            SUBSTR(complaint_id, 1, 1) AS Serial_Code,
            0 AS Rec_All_Complaints,
            0 AS Rec_Com_JI,
            COUNT(*) AS Des_All_Complaints,
            0 AS Des_req_JI
        FROM
            T40_Consignee_complaints
        WHERE
            TO_CHAR(complaint_dt, 'yyyymm') = wYrMth
            AND ji_required = 'N'
        GROUP BY
            SUBSTR(complaint_id, 1, 1)
        UNION ALL
        SELECT
            ji_region AS region,
            ji_region AS Serial_Code,
            0 AS Rec_All_Complaints,
            0 AS Rec_Com_JI,
            0 AS Des_All_Complaints,
            COUNT(*) AS Des_req_JI
        FROM
            T40_Consignee_complaints
        WHERE
            TO_CHAR(conclusion_dt, 'yyyymm') = wYrMth
            AND ji_required = 'Y'
        GROUP BY
            ji_region
    )
    GROUP BY
        region
    ORDER BY
        Serial_Code;
        
    OPEN p_Result_jIdisposedComplaints FOR
            SELECT
                DECODE(region, 'N', 'Northern', 'E', 'Eastern', 'W', 'Western', 'S', 'Southern', 'C', 'Central') AS region,
                DECODE(region, 'N', 'A', 'E', 'B', 'W', 'C', 'S', 'D', 'C', 'E') AS Serial_Code,
                SUM(Material_Accepted) AS Material_Accepted,
                SUM(Finally_Rejected) AS Finally_Rejected,
                SUM(Sorting) AS Sorting,
                SUM(Rectification) AS Rectification,
                SUM(Price_Reduction) AS Price_Reduction,
                SUM(Lifted_before_JI) AS Lifted_before_JI,
                SUM(Not_on_Rites_Ac) AS Not_on_Rites_Ac,
                SUM(Transit_demand) AS Transit_demand,
                SUM(Unstamped) AS Unstamped,
                SUM(deleted) AS deleted
				from 
				(select Ji_region region,Ji_region Serial_Code,Count(*)Material_Accepted,0 Finally_Rejected,0 Sorting,0 Rectification,0 Price_Reduction,0 Lifted_before_JI,0 Not_on_Rites_Ac,0 Transit_demand,0 Unstamped,0 deleted 
				from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and ji_status_cd=1 group by Ji_region 
				Union All 
				select Ji_region region,Ji_region Serial_Code,0 Material_Accepted,Count(*)Finally_Rejected,0 Sorting,0 Rectification,0 Price_Reduction,0 Lifted_before_JI,0 Not_on_Rites_Ac,0 Transit_demand,0 Unstamped,0 deleted  
				from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and ji_status_cd=2 group by Ji_region 
				Union All 
				select Ji_region region,Ji_region Serial_Code,0 Material_Accepted,0 Finally_Rejected,Count(*)Sorting,0 Rectification,0 Price_Reduction,0 Lifted_before_JI,0 Not_on_Rites_Ac,0 Transit_demand,0 Unstamped,0 deleted 
				from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and ji_status_cd=3 group by Ji_region 
				Union All  
				select Ji_region region,Ji_region Serial_Code,0 Material_Accepted,0 Finally_Rejected,0 Sorting,Count(*)Rectification,0 Price_Reduction,0 Lifted_before_JI,0 Not_on_Rites_Ac,0 Transit_demand,0 Unstamped,0 deleted   
				from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and ji_status_cd=4 group by Ji_region 
				Union All 
				select Ji_region region,Ji_region Serial_Code,0 Material_Accepted,0 Finally_Rejected,0 Sorting,0 Rectification,Count(*)Price_Reduction,0 Lifted_before_JI,0 Not_on_Rites_Ac,0 Transit_demand,0 Unstamped,0 deleted 
				from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and ji_status_cd=5 group by Ji_region 
				Union All 
				select Ji_region region,Ji_region Serial_Code,0 Material_Accepted,0 Finally_Rejected,0 Sorting,0 Rectification,0 Price_Reduction,Count(*)Lifted_before_JI,0 Not_on_Rites_Ac,0 Transit_demand,0 Unstamped,0 deleted  
				from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and ji_status_cd=6 group by Ji_region 
				Union All 
				select Ji_region region,Ji_region Serial_Code,0 Material_Accepted,0 Finally_Rejected,0 Sorting,0 Rectification,0 Price_Reduction,0 Lifted_before_JI,Count(*)Not_on_Rites_Ac,0 Transit_demand,0 Unstamped,0 deleted  
				from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and ji_status_cd=9 group by Ji_region 
				Union All 
				select Ji_region region,Ji_region Serial_Code,0 Material_Accepted,0 Finally_Rejected,0 Sorting,0 Rectification,0 Price_Reduction,0 Lifted_before_JI,0 Not_on_Rites_Ac,Count(*)Transit_demand,0 Unstamped,0 deleted  
				from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and ji_status_cd=7 group by Ji_region 
				Union All 
				select Ji_region region,Ji_region Serial_Code,0 Material_Accepted,0 Finally_Rejected,0 Sorting,0 Rectification,0 Price_Reduction,0 Lifted_before_JI,0 Not_on_Rites_Ac,0 Transit_demand,Count(*)Unstamped,0 deleted   
				from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and ji_status_cd=8 group by Ji_region 
				Union all 
				select Ji_region region,Ji_region Serial_Code,0 Material_Accepted,0 Finally_Rejected,0 Sorting,0 Rectification,0 Price_Reduction,0 Lifted_before_JI,0 Not_on_Rites_Ac,0 Transit_demand,0 Unstamped,Count(*)deleted 
				from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and ji_status_cd=10 group by Ji_region) 
				group by region order by Serial_Code;
                
    OPEN p_Result_breakupComplaintsModels FOR
        SELECT
          CASE
            WHEN region = 'N' THEN 'Northern'
            WHEN region = 'E' THEN 'Eastern'
            WHEN region = 'W' THEN 'Western'
            WHEN region = 'S' THEN 'Southern'
            WHEN region = 'C' THEN 'Central'
          END AS region,
          CASE
            WHEN region = 'N' THEN 'A'
            WHEN region = 'E' THEN 'B'
            WHEN region = 'W' THEN 'C'
            WHEN region = 'S' THEN 'D'
            WHEN region = 'C' THEN 'E'
          END AS Serial_Code,
          SUM(D) AS D,
          SUM(S) AS S,
          SUM(W) AS W,
          SUM(E) AS E,
          SUM(C_C) AS C_C,
          SUM(P) AS P,
          SUM(N) AS N,
          SUM(M) AS M,
          SUM(L) AS L,
          SUM(O) AS O
        from 
        (
        select Ji_region region,Ji_region Serial_Code,Count(*)D,0 S,0 W,0 E,0 C_C,0 P,0 N,0 M,0 L,0 O 
        from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and defect_cd='D' group by Ji_region 
        Union All 
        select Ji_region region,Ji_region Serial_Code,0 D,Count(*)S,0 W,0 E,0 C_C,0 P,0 N,0 M,0 L,0 O 
        from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and defect_cd in ('S','V') group by Ji_region 
        Union All 
        select Ji_region region,Ji_region Serial_Code,0 D,0 S,Count(*)W,0 E,0 C_C,0 P,0 N,0 M,0 L,0 O 
        from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and defect_cd='W' group by Ji_region 
        Union All  
        select Ji_region region,Ji_region Serial_Code,0 D,0 S,0 W,Count(*)E,0 C_C,0 P,0 N,0 M,0 L,0 O  
        from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and defect_cd='E' group by Ji_region 
        Union All 
        select Ji_region region,Ji_region Serial_Code,0 D,0 S,0 W,0 E,Count(*)C_C,0 P,0 N,0 M,0 L,0 O 
        from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and defect_cd='C' group by Ji_region 
        Union All 
        select Ji_region region,Ji_region Serial_Code,0 D,0 S,0 W,0 E,0 C_C,Count(*)P,0 N,0 M,0 L,0 O  
        from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and defect_cd='P' group by Ji_region 
        Union All 
        select Ji_region region,Ji_region Serial_Code,0 D,0 S,0 W,0 E,0 C_C,0 P,Count(*)N,0 M,0 L,0 O 
        from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and defect_cd='N' group by Ji_region 
        Union All 
        select Ji_region region,Ji_region Serial_Code,0 D,0 S,0 W,0 E,0 C_C,0 P,0 N,Count(*)M,0 L,0 O 
        from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and defect_cd='M' group by Ji_region 
        Union All 
        select Ji_region region,Ji_region Serial_Code,0 D,0 S,0 W,0 E,0 C_C,0 P,0 N,0 M,Count(*)L,0 deleted  
        from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and defect_cd='L' group by Ji_region 
        Union all 
        select Ji_region region,Ji_region Serial_Code,0 D,0 S,0 W,0 E,0 C_C,0 P,0 N,0 M,0 L,Count(*)O 
        from T40_Consignee_Complaints where to_char(conclusion_dt,'yyyymm') = wYrMth and Ji_Required='Y' and defect_cd='O' group by Ji_region) 
        group by region order by Serial_Code;
        
    OPEN p_Result_othercasesComplaintsModels FOR
        SELECT
          region,
          SUM(Rec_Com_JI) AS Rec_Com_JI,
          SUM(Des_req_JI) AS Des_req_JI,
          ji_region AS region_cd
        from 
        (Select SUBSTR(JI_SNO,1,2)region,Count(*)Rec_Com_JI,0 Des_req_JI,ji_region from T40_Consignee_complaints where 
        to_char(ji_dt,'yyyymm')='wYrMth+"' and ji_required='Y' group by SUBSTR(JI_SNO,1,2),ji_region 
        union all 
        select SUBSTR(JI_SNO,1,2)region,0 Rec_Com_JI,Count(*)Des_req_JI,ji_region from  T40_Consignee_complaints where  
        to_char(conclusion_dt,'yyyymm')=wYrMth and ji_required='Y' group by SUBSTR(JI_SNO,1,2),ji_region) 
        group by region,ji_region order by region desc;
        
    OPEN p_Result_long_PendingModels FOR
        Select 
            insp_region region,
            ji_sno,
            to_char(ji_dt,'dd-mm-yyyy')pending_date,
            remarks ,
          ji_region AS region_cd
            from T40_Consignee_complaints
				where  ji_status_cd='0' and ji_required='Y' 
				and (sysdate - ji_dt)>=90 order by ji_dt;
                
    OPEN p_Result_cR_REJModels FOR
        Select case_No, 
            consignee,
            des_com,
            conclusion 
            from T81_CR_REJ 
				where region='C' 
				and rej_dt= wYrMth 
                order by rej_dt;
                
END sp_PCDOReport_Complaints;

=====================
create or replace PROCEDURE sp_PCDOReport_QualityofInspection (
    wYrMth IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_Result FOR

        SELECT
            R_NAME,
            SUM(C1) AS C1,
            SUM(C2) AS C2,
            SUM(C3) AS C3,
            SUM(C4) AS C4,
            SUM(C5) AS C5,
            SUM(C6) AS C6,
            ROUND(NVL(SUM(C2), 0) / SUM(C1) * 100, 2) AS AVE_Rejection,
            ROUND(NVL(SUM(C3), 0) / SUM(C1) * 100, 2) AS AVE_Cancell,
            ROUND(NVL(SUM(C5), 0) / SUM(C1) * 100, 2) AS AVE_Upto7,
            ROUND(NVL(SUM(C6), 0) / SUM(C1) * 100, 2) AS AVE_Beyond7
         from
            (
                SELECT SUBSTR(A.case_no,1,1) R_Name,(COUNT(*)) C1, 0 C2, 0 C3, 0 C4, 0 C5, 0 C6 FROM T20_IC A, T09_IE B, T22_BILL C  WHERE A.IE_CD=B.IE_CD AND C.BILL_NO=A.BILL_NO AND  
                to_char(c.bill_dt,'YYYYMM')=wYrMth And SUBSTR(A.case_no,1,1) not in ('C','Q') Group By SUBSTR(A.case_no,1,1)
                Union All 
                SELECT SUBSTR(A.case_no,1,1) R_Name,0 C1,COUNT(*) C2, 0 C3, 0 C4, 0 C5, 0 C6 FROM T20_IC A, T09_IE B WHERE A.IE_CD=B.IE_CD  
                AND A.ic_type_id=2 And SUBSTR(A.case_no,1,1)not in ('C','Q') AND A.bill_no in (Select bill_no from t22_bill where to_char(bill_dt,'YYYYMM')=wYrMth) Group By substr(A.CASE_NO,1,1) 
                Union All 
                SELECT SUBSTR(A.case_no,1,1) as R_Name,0 C1,0 C2, COUNT(*) C3, 0 C4, 0 C5, 0 C6 FROM T19_CALL_CANCEL A,
                T17_CALL_REGISTER B, T09_IE C WHERE A.CASE_NO=B.CASE_NO and A.CALL_RECV_DT=B.CALL_RECV_DT and A.CALL_SNO=B.CALL_SNO and B.IE_CD=C.IE_CD And SUBSTR(A.case_no,1,1) not in ('C','Q') AND to_char(a.cancel_date,'YYYYMM')=wYrMth Group By substr(A.CASE_NO,1,1) 
                Union All 
                Select substr(T20.CASE_NO,1,1) as R_Name,0 C1,0 C2, 0 C3,Round(SUM(nvl((T20.FIRST_INSP_DT-T20.CALL_DT),0))/ COUNT(*),2) C4, 0 C5, 0C6 FROM 
                T20_IC T20,T22_BILL T22, T09_IE T09,T05_VENDOR T05, T03_CITY T03, T13_PO_MASTER T13 WHERE T22.BILL_NO=T20.BILL_NO and  
                T20.IE_CD=T09.IE_CD and T20.CASE_NO=T13.CASE_NO and T13.VEND_CD=T05.VEND_CD and T05.VEND_CITY_CD=T03.CITY_CD And SUBSTR(T20.CASE_NO,1,1) not in ('C','Q') and to_char(T22.BILL_DT,'YYYYMM')=wYrMth  
                and (T20.CALL_DT > '01-Jan-2000') GROUP by substr(T20.CASE_NO,1,1)
                Union All 
                SELECT substr(T20.CASE_NO,1,1) as R_Name,0 C1,0 C2,0 C3,0 C4,Count(*) C5,0 C6 FROM t20_ic T20 WHERE (first_insp_dt - call_dt <= 7 )  
                AND bill_no in (Select bill_no from t22_bill where to_char(BILL_DT,'YYYYMM')=wYrMth) And SUBSTR(T20.CASE_NO,1,1) not in ('C','Q')  
                GROUP by substr(T20.CASE_NO,1,1) 
                Union All 
                SELECT substr(T20.CASE_NO,1,1) as R_Name,0 C1,0 C2,0 C3,0 C4, 0 C5,Count(*)C6 FROM t20_ic T20 WHERE (first_insp_dt - call_dt > 7 )  
                AND bill_no in (Select bill_no from t22_bill where to_char(BILL_DT,'YYYYMM')=wYrMth) And SUBSTR(T20.CASE_NO,1,1) not in ('C','Q') 
                GROUP by substr(T20.CASE_NO,1,1)
            ) 
            GROUP BY R_NAME
            ORDER BY R_NAME;


    END sp_PCDOReport_QualityofInspection;
    

===========================

create or replace PROCEDURE sp_PCDOReport_QualityofInspectionCentral (
    wYrMth IN VARCHAR2,
    CumYrMth IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR,
    p_Result_RSM OUT SYS_REFCURSOR,
    p_Result_URM OUT SYS_REFCURSOR,
    p_Result_JINDAL OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_Result FOR
    SELECT 
        DECODE(Client_name, 1, 'RSM', 2, 'URM', 3, 'JINDAL(Railway)', 4, 'JINDAL(NON-RLY)', 5, 'PLATE(BSP)') AS Client_name,
        DECODE(Client_name, 1, 'A', 2, 'B', 3, 'C', 4, 'D', 5, 'E') AS Serial_cd,
        SUM(IC_Issued) AS IC_Issued,
        SUM(IC_Issued_cum) AS IC_Issued_cum,
        SUM(TQY_Dis) AS TQY_Dis,
        SUM(TQY_Dis_cum) AS TQY_Dis_cum
    FROM (
        SELECT 
            client AS Client_name,
            client AS Serial_cd,
            SUM(NO_OF_IC_ISSUED) AS IC_Issued,
            0 AS IC_Issued_cum,
            SUM(TOTAL_QTY_DISPATCHED) AS TQY_Dis,
            0 AS TQY_Dis_cum
        FROM T78_CENTRAL_QOI
        WHERE QTY_DATE = wYrMth AND region_code = 'C'
        GROUP BY CLIENT
        UNION ALL
        SELECT 
            client AS Client_name,
            client AS Serial_cd,
            0 AS IC_Issued,
            SUM(NO_OF_IC_ISSUED) AS IC_Issued_cum,
            0 AS TQY_Dis,
            SUM(TOTAL_QTY_DISPATCHED) AS TQY_Dis_cum
        FROM T78_CENTRAL_QOI
        WHERE QTY_DATE BETWEEN CumYrMth AND wYrMth AND region_code = 'C'
        GROUP BY CLIENT
    )
    GROUP BY Client_name
    ORDER BY Serial_cd;
    
    OPEN p_Result_RSM FOR
    SELECT 
    DECODE(QOI_LEN, 1, '13M', 2, '26M', 3, '52M', 4, '65M') AS QOI_LEN,
    SUM(ACC52) AS ACC52,
    SUM(REJ52) AS REJ52,
    SUM(ACC60) AS ACC60,
    SUM(REJ60) AS REJ60
    FROM (
        SELECT 
            QOI_LENGTH AS QOI_LEN,
            SUM(ACCEPTED) AS ACC52,
            SUM(REJECTED) AS REJ52,
            0 AS ACC60,
            0 AS REJ60
        FROM T79_CENTRAL_QOINSP
        WHERE QOI_DATE = wYrMth
            AND WEIGHT = 1
            AND CLIENT = 1
            AND QOI_LENGTH IN (1, 2, 3, 4)
        GROUP BY QOI_LENGTH
    
        UNION ALL
    
        SELECT 
            QOI_LENGTH AS QOI_LEN,
            0 AS ACC52,
            0 AS REJ52,
            SUM(ACCEPTED) AS ACC60,
            SUM(REJECTED) AS REJ60
        FROM T79_CENTRAL_QOINSP
        WHERE QOI_DATE = wYrMth
            AND WEIGHT = 2
            AND CLIENT = 1
            AND QOI_LENGTH IN (1, 2, 3, 4)
        GROUP BY QOI_LENGTH
    ) 
    GROUP BY QOI_LEN
    ORDER BY QOI_LEN;
    
    OPEN p_Result_URM FOR
        SELECT 
            DECODE(qoi_length, 1, '13M', 2, '26M', 3, '52M', 4, '65M', 5, '86.67M', 7, '117M', 8, '130M') AS QOI_LEN,
            SUM(accepted) AS acc_urm,
            SUM(rejected) AS rej_urm
        FROM T79_CENTRAL_QOINSP
        WHERE qoi_date = wYrMth
            AND CLIENT = 2
            AND weight = 2
            AND qoi_length NOT IN (6)
        GROUP BY qoi_length
        ORDER BY qoi_length;

    OPEN p_Result_JINDAL FOR
        SELECT 
            DECODE(qoi_length, 1, '13M', 2, '26M', 6, '87M') AS QOI_LEN,
            SUM(accepted) AS acc_urm,
            SUM(rejected) AS rej_urm
        FROM T79_CENTRAL_QOINSP
        WHERE qoi_date = wYrMth
            AND CLIENT = 3
            AND weight = 2
            AND qoi_length IN (1, 2, 6)
        GROUP BY qoi_length
        ORDER BY qoi_length;

END sp_PCDOReport_QualityofInspectionCentral;

=======================
create or replace PROCEDURE sp_PCDOReport_ImprovementofQualityofService (
    wYrMth IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR,
    p_Result1 OUT SYS_REFCURSOR,
    p_Result2 OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_Result FOR
        SELECT 
        DECODE(SUBSTR(Case_No, 1, 1), 
            'N', 'Northern', 
            'E', 'Eastern', 
            'W', 'Western', 
            'S', 'Southern', 
            'C', 'Central') AS Region,
        DECODE(SUBSTR(Case_No, 1, 1), 
            'N', 'A', 
            'E', 'B', 
            'W', 'C', 
            'S', 'D', 
            'C', 'E') AS Serial_Code,
        COUNT(*) AS total
        FROM T44_SUPER_SURPRISE
        WHERE TO_CHAR(SUPER_SURPRISE_DT, 'YYYYMM') = wYrMth
        GROUP BY SUBSTR(Case_No, 1, 1)
        ORDER BY Serial_Code;

    OPEN p_Result1 FOR
        SELECT t08.co_cd as COD,
        INITCAP(T08.CO_NAME || '(' || t07.R_DESIGNATION || ')') as NameDesig, 
        INITCAP(T09.IE_NAME) as IEName, 
        INITCAP(V05.VENDOR)as Firm,
        INITCAP(T44.ITEM_DESC) as Item, 
        INITCAP(T44.PRE_INT_REJ) as PCR, 
        INITCAP(T44.DISCREPANCY) as Disc, 
        INITCAP(T44.OUTCOME) as otcome,
        substr(T44.SUPER_SURPRISE_NO,1,1) AS region_cd
        FROM 
        T44_SUPER_SURPRISE T44, T13_PO_MASTER T13, V05_VENDOR V05, T08_IE_CONTROLL_OFFICER T08,
        T09_IE T09, T07_RITES_DESIG t07 WHERE T44.CASE_NO=T13.CASE_NO AND T13.VEND_CD=V05.VEND_CD
         AND T44.CO_CD=T08.CO_CD AND T44.IE_CD=T09.IE_CD AND t08.co_desig= t07.r_desig_cd  AND
         to_char(T44.SUPER_SURPRISE_DT,'YYYYMM')=wYrMth

        ORDER BY T08.CO_NAME;

    OPEN p_Result2 FOR
        select CO_NAME,
                sum(TOTAL_NO_CALLS) TOTAL_NO_CALLS,
                sum(TOTAL_NC) TOTAL_NC, 
                sum(TOTAL_NC) || 'out of' || sum(TOTAL_NO_CALLS) as NOIC 
                ,co_cd
            from (
                select CO_NAME,
                count(*) TOTAL_NO_CALLS,
                0 TOTAL_NC
                ,t08.co_cd as co_cd
                from 
                    T17_CALL_REGISTER T17,
                    T08_IE_CONTROLL_OFFICER T08
                    
                WHERE 
                    T17.CO_CD=T08.CO_CD and 
                to_char(T17.CALL_RECV_DT,'YYYYMM')=wYrMth And 
                substr(T17.CASE_NO,1,1)='N'
                group by CO_NAME ,t08.co_cd
                UNION ALL 
                select CO_NAME,
                0 TOTAL_NO_CALLS,
                count(*) TOTAL_NC 
                ,t08.co_cd as co_cd
                from 
                    T41_NC_MASTER T41,
                    T08_IE_CONTROLL_OFFICER T08 
                WHERE 
                    T41.CO_CD=T08.CO_CD 
                And to_char(T41.NC_DT,'YYYYMM')=wYrMth
                And T41.REGION_CODE='N'
                group by CO_NAME,t08.co_cd)
            group by CO_NAME,co_cd;

END sp_PCDOReport_ImprovementofQualityofService;

=========================


create or replace PROCEDURE sp_PCDOReport_OutstandingRailways (
    wYrMth IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR
) AS
curr_yr_mth_out VARCHAR2(20); 
BEGIN
    
    SELECT to_char(LAST_DAY(to_date(wYrMth,'YYYYMM')),'DD-MON-YYYY') INTO curr_yr_mth_out FROM dual;
    
    OPEN p_Result FOR
       Select INITCAP(bpo_orgn) as bpo_orgn,
				sum(to_number(decode(region_code,'N',Round((AMOUNT_OUTSTANDING)/100000,2),'0'))) NR,
				sum(to_number(decode(region_code,'E',Round((AMOUNT_OUTSTANDING)/100000,2),'0'))) ER,
				sum(to_number(decode(region_code,'W',Round((AMOUNT_OUTSTANDING)/100000,2),'0'))) WR,
				sum(to_number(decode(region_code,'S',Round((AMOUNT_OUTSTANDING)/100000,2),'0'))) SR,
				sum(to_number(decode(region_code,'C',Round((AMOUNT_OUTSTANDING)/100000,2),'0'))) CR, 
				Round((sum(AMOUNT_OUTSTANDING)/100000),2)Total
				 from v22b_outstanding_bills where
				 bpo_type ='R' and
				 AMOUNT_OUTSTANDING >0 and
				 BILL_DT <= curr_yr_mth_out
				 group by bpo_orgn
				 order by Total desc;

END sp_PCDOReport_OutstandingRailways;

=============
create or replace PROCEDURE sp_PCDOReport_Top5OutstandingRailwayNonRailways (
    wYrMth IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR,
    p_Result1 OUT SYS_REFCURSOR
) AS
curr_yr_mth_Top VARCHAR2(20); 
BEGIN

    SELECT to_char(LAST_DAY(to_date(wYrMth,'YYYYMM')),'DD-MON-YYYY') INTO curr_yr_mth_Top FROM dual;

    OPEN p_Result FOR
       SELECT * From (Select INITCAP(bpo_orgn) as bpo_orgn,
				sum(to_number(decode(region_code,'N',Round((AMOUNT_OUTSTANDING)/100000,2),'0'))) NR,
				sum(to_number(decode(region_code,'E',Round((AMOUNT_OUTSTANDING)/100000,2),'0'))) ER,
				sum(to_number(decode(region_code,'W',Round((AMOUNT_OUTSTANDING)/100000,2),'0'))) WR,
				sum(to_number(decode(region_code,'S',Round((AMOUNT_OUTSTANDING)/100000,2),'0'))) SR,
				sum(to_number(decode(region_code,'C',Round((AMOUNT_OUTSTANDING)/100000,2),'0'))) CR, 
				Round((sum(AMOUNT_OUTSTANDING)/100000),2)Total,
				row_number() over (order by Round((sum(AMOUNT_OUTSTANDING)/100000),2) desc) as rn
				 from v22b_outstanding_bills where bpo_type ='R' and   
				 AMOUNT_OUTSTANDING >0 and BILL_DT <= curr_yr_mth_Top
				 group by bpo_orgn
				 order by Total desc)where rn<=5;

    OPEN p_Result1 FOR
        SELECT * From (Select INITCAP(bpo_orgn) as bpo_orgn,
				sum(to_number(decode(region_code,'N',Round((AMOUNT_OUTSTANDING)/100000,2),'0'))) NR,
				sum(to_number(decode(region_code,'E',Round((AMOUNT_OUTSTANDING)/100000,2),'0'))) ER,
				sum(to_number(decode(region_code,'W',Round((AMOUNT_OUTSTANDING)/100000,2),'0'))) WR,
				sum(to_number(decode(region_code,'S',Round((AMOUNT_OUTSTANDING)/100000,2),'0'))) SR,
				sum(to_number(decode(region_code,'C',Round((AMOUNT_OUTSTANDING)/100000,2),'0'))) CR, 
				Round((sum(AMOUNT_OUTSTANDING)/100000),2)Total,
				row_number() over (order by Round((sum(AMOUNT_OUTSTANDING)/100000),2) desc) as rn
				 from v22b_outstanding_bills where 
				 bpo_type!='R' and 
				 AMOUNT_OUTSTANDING >0 and
				 to_char(BILL_DT,'YYYYMM') <= wYrMth
				 group by bpo_orgn
				 order by Total desc)where rn<=5;

END sp_PCDOReport_Top5OutstandingRailwayNonRailways;

====================
create or replace PROCEDURE sp_PCDOReport_ClientContact (
    wYrMth IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR
) AS

BEGIN
    OPEN p_Result FOR
      select 
        TO_NUMBER(row_number() over (order by to_char(visit_dt, 'dd.mm.yyyy'))) as sn,
        to_char(visit_dt, 'dd.mm.yyyy') as Visit_dt, 
        (client_officer_name || ',' || client) as Detail_visit, 
        cm.co_name as Rites_officer, 
        highlights, 
        overall_outcome,
        region_cd
        from t58_client_contact cc 
        inner join t08_IE_CONTROLL_OFFICER cm on cc.rites_officer_cd=cm.co_cd
		where to_char(visit_dt, 'yyyymm')= wYrMth and TYPE_CB='C';

END sp_PCDOReport_ClientContact;

==================

create or replace PROCEDURE sp_PCDOReport_DFOVisit (
    wYrMth IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR
) AS

BEGIN
    OPEN p_Result FOR
      select 
        row_number() over (order by to_char(visit_dt, 'dd.mm.yyyy')) as sn,
        to_char(visit_dt, 'dd.mm.yyyy') as Visit_dt, 
        (client_officer_name || ',' || client) as Detail_visit, 
        cm.co_name as Rites_officer, 
        highlights, 
        overall_outcome, 
        out_amt ,
        region_cd
        from t58_client_contact cc inner join t08_IE_CONTROLL_OFFICER cm on cc.rites_officer_cd=cm.co_cd 
				where to_char(visit_dt, 'yyyymm')= wYrMth and TYPE_CB='D';

END sp_PCDOReport_DFOVisit;

============================
create or replace PROCEDURE sp_PCDOReport_Training (
    wYrMth IN VARCHAR2,
    CumYrMth IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR,
    p_Result1 OUT SYS_REFCURSOR
) AS

BEGIN
    OPEN p_Result FOR
     select decode(region_code,'N','Northern','E','Eastern','W','Western','S','Southern','C','Central')region_code,
				sum(Man_days) Man_days,sum(Trainee) Trainee,sum(Cum_Mandays) Cum_Mandays,sum(Cum_Trainee) Cum_Trainee,
				sum(IMan_days) IMan_days,sum(ITrainee) ITrainee,sum(Icum_Mandays) Icum_Mandays,sum(Icum_Trainee) Icum_Trainee 
				from(
				select C.Region region_code,SUM((course_dur_to- course_dur_fr)+1) Man_days,0 Trainee,0 Cum_Mandays,0 Cum_Trainee, 
				0 IMan_days,0 ITrainee,0 Icum_Mandays,0 Icum_Trainee from Training_course_master C, TRAINING_DETAILS T where C.COURSE_ID=T.COURSE_ID and c.training_category='O' and to_char(course_dur_fr, 'yyyymm')=wYrMth group by region  
				Union All 
				select tcm.region region_code,0 Man_days,Count(DISTINCT td.ie_cd)  Trainee,0 Cum_Mandays,0 Cum_Trainee,
				0 IMan_days,0 ITrainee,0 Icum_Mandays,0 Icum_Trainee from Training_course_master tcm inner join Training_Details td on tcm.Course_ID=td.Course_ID and tcm.training_category='O' where to_char(tcm.course_dur_fr, 'yyyymm')= wYrMth group by tcm.region  
				Union All 
				select C.Region region_code,0 Man_days,0 Trainee,SUM((course_dur_to- course_dur_fr)+1)Cum_Mandays,0 Cum_Trainee, 
				0 IMan_days,0 ITrainee,0 Icum_Mandays,0 Icum_Trainee from Training_course_master C, TRAINING_DETAILS T where C.COURSE_ID=T.COURSE_ID and c.training_category='O' and (to_char(course_dur_fr, 'yyyymm') between CumYrMth and wYrMth) group by region  
				Union All  
				select tcm.region region_code,0 Man_days,0 Trainee,0 Cum_Mandays,Count(DISTINCT td.ie_cd)  Cum_Trainee,0 IMan_days,0 ITrainee,0 Icum_Mandays,0 Icum_Trainee  
				from Training_course_master tcm inner join Training_Details td on tcm.Course_ID=td.Course_ID and tcm.training_category='O' where (to_char(course_dur_fr, 'yyyymm') between CumYrMth and wYrMth) group by tcm.region,to_char(course_dur_fr, 'yyyymm') 
				union all 
				select C.Region region_code,0 Man_days,0 Trainee,0 Cum_Mandays,0 Cum_Trainee,SUM((course_dur_to- course_dur_fr)+1) IMan_days,0 ITrainee,0 Icum_Mandays,0 Icum_Trainee from Training_course_master C, TRAINING_DETAILS T where C.COURSE_ID=T.COURSE_ID and c.training_category='I' and to_char(course_dur_fr, 'yyyymm')=wYrMth group by region  
				Union All 
				select tcm.region region_code,0 Man_days,0 Trainee,0 Cum_Mandays,0 Cum_Trainee,0 IMan_days,Count(DISTINCT td.ie_cd)  ITrainee,0 Icum_Mandays,0 Icum_Trainee from Training_course_master tcm inner join Training_Details td on tcm.Course_ID=td.Course_ID and tcm.training_category='I' where to_char(tcm.course_dur_fr, 'yyyymm')=wYrMth group by tcm.region  
				Union All 
				select C.Region region_code,0 Man_days,0 Trainee,0 Cum_Mandays,0 Cum_Trainee,0 IMan_days,0 ITrainee,SUM((course_dur_to- course_dur_fr)+1)Icum_Mandays,0 Icum_Trainee from Training_course_master C, TRAINING_DETAILS T where C.COURSE_ID=T.COURSE_ID and c.training_category='I' and (to_char(course_dur_fr, 'yyyymm') between CumYrMth and wYrMth) group by region 
				Union All  
				select tcm.region region_code,0 Man_days,0 Trainee,0 Cum_Mandays,0 Cum_Trainee,0 IMan_days,0 ITrainee,0 Icum_Mandays,Count(DISTINCT td.ie_cd) Icum_Trainee 
				from Training_course_master tcm inner join Training_Details td on tcm.Course_ID=td.Course_ID and tcm.training_category='I' where (to_char(course_dur_fr, 'yyyymm') between CumYrMth and wYrMth) group by tcm.region,to_char(course_dur_fr, 'yyyymm')) 
				group by region_code Order by region_code desc;

    OPEN p_Result1 FOR
        select decode(tcm.region,'N','Northern','E','Eastern','W','Western','S','Southern','C','Central')region, tcm.course_name course_name,to_char(tcm.course_dur_fr, 'dd-mm-yyyy') course_dur_fr,to_char(tcm.course_dur_to, 'dd-mm-yyyy') course_dur_to,decode(tcm.training_category,'I','Inside','O','Outside') category, tem.name name from Training_course_master tcm 
				inner join Training_Details td on tcm.Course_ID=td.Course_ID 
				inner join Trainee_employee_master tem on td.IE_CD=tem.IE_CD 
				where to_char(tcm.course_dur_fr, 'yyyymm')=wYrMth
				Order by Region desc;

END sp_PCDOReport_Training;

=========================
create or replace PROCEDURE sp_PCDOReport_TechnicalReferences (
    wYrMth IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR
) AS

BEGIN
    OPEN p_Result FOR
        Select  row_number() over (order by to_char(tr.tech_date, 'dd.mm.yyyy')) as sn,
            co.co_name cm_name,
            ie.ie_name ie_name,
            tr.tech_item_des item_des,
            tr.tech_spec_drg spec_drg,
            tr.tech_letter_no letter_no,
            to_char(tr.tech_date, 'dd.mm.yyyy') tech_date,
            tr.tech_ref_made ref_made,
            tr.tech_content tech_content ,
            tr.region_cd As region_cd
            from t66_tech_ref tr, t08_ie_controll_officer co, t09_ie ie where tr.tech_cm_cd= co.co_cd and tr.tech_ie_cd= ie.ie_cd
            and to_char(tr.tech_date, 'yyyymm')=wYrMth;

END sp_PCDOReport_TechnicalReferences;

===============
create or replace PROCEDURE sp_PCDOReport_Summary (
    wYrMth IN VARCHAR2,
    CumYrMth IN VARCHAR2,
    byear IN VARCHAR2,
    dmonth IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_Result FOR
        SELECT
            DECODE(Region_Code, 'N', 'Northern', 'E', 'Eastern', 'W', 'Western', 'S', 'Southern', 'C', 'Central', 'Q', 'QA Corporate') AS Region_Code,
            DECODE(Region_Code, 'N', 'A', 'E', 'B', 'W', 'C', 'S', 'D', 'C', 'E', 'Q', 'F') AS Serial_Code,
            ROUND((SUM(TURN_MONTH)) / 100000, 2) AS TURN_MONTH,
            ROUND((SUM(TURN_LAB_MONTH)) / 100000, 2) AS TURN_LAB_MONTH,
            ROUND((SUM(ADJ_MONTH)) / 100000, 2) AS ADJ_MONTH,
            ROUND((SUM(TURN_UPTO)) / 100000, 2) AS TURN_UPTO,
            ROUND((SUM(TURN_LAB_UPTO)) / 100000, 2) AS TURN_LAB_UPTO,
            ROUND((SUM(ADJ_UPTO)) / 100000, 2) AS ADJ_UPTO,
            ROUND(((SUM(B_TARGET)) / 12) * dmonth, 2) AS B_TARGET,
            SUM(CONT_MONTH) AS CONT_MONTH,
            SUM(CONT_UPTO) AS CONT_UPTO,
            SUM(SUPER_UPTO) AS SUPER_UPTO,
            SUM(TECH_UPTO) AS TECH_UPTO,
            SUM(CHECK_UPTO) AS CHECK_UPTO,
            ROUND((SUM(CCTM_EXP_FEE)) / 100000, 2) AS CCTM_EXP_FEE,
            ROUND(
                (ROUND((SUM(CCTM_EXP_FEE)) / 100000, 2) /
                (ROUND((SUM(TURN_UPTO)) / 100000, 2) +
                ROUND((SUM(TURN_LAB_UPTO)) / 100000, 2) -
                ROUND((SUM(ADJ_UPTO)) / 100000, 2))) * 100,
                2) AS OR_Actual
        FROM (
            SELECT
                Region_Code,
                region_code AS Serial_Code,
                SUM(NVL(INSP_FEE, 0)) AS TURN_MONTH,
                0 AS TURN_LAB_MONTH,
                0 AS ADJ_MONTH,
                0 AS TURN_UPTO,
                0 AS TURN_LAB_UPTO,
                0 AS ADJ_UPTO,
                0 AS B_TARGET,
                0 AS CONT_MONTH,
                0 AS CONT_UPTO,
                0 AS SUPER_UPTO,
                0 AS TECH_UPTO,
                0 AS CHECK_UPTO,
                0 AS CCTM_EXP_FEE
            FROM V22A_BILLING_SUMMARY
            WHERE SUBSTR(sector, 1, 1) IN ('1', '2', '3', '5', '6')
                AND BILLING_YR_MTH = wYrMth
            GROUP BY Region_Code

            UNION ALL

            SELECT
                Region_Code,
                region_code AS Serial_Code,
                0 AS TURN_MONTH,
                SUM(NVL(LAB_EXP, 0)) AS TURN_LAB_MONTH,
                0 AS ADJ_MONTH,
                0 AS TURN_UPTO,
                0 AS TURN_LAB_UPTO,
                0 AS ADJ_UPTO,
                0 AS B_TARGET,
                0 AS CONT_MONTH,
                0 AS CONT_UPTO,
                0 AS SUPER_UPTO,
                0 AS TECH_UPTO,
                0 AS CHECK_UPTO,
                0 AS CCTM_EXP_FEE
            FROM t59_lab_exp
            WHERE lab_bill_per = wYrMth
            GROUP BY Region_Code

            UNION ALL 
				Select Region_Code,region_code Serial_Code,0 TURN_MONTH,0 TURN_LAB_MONTH,sum(NVL(adjustment_amt,0)) ADJ_MONTH,0 TURN_UPTO,0 TURN_LAB_UPTO,0 ADJ_UPTO,0 B_TARGET,0 CONT_MONTH,0 CONT_UPTO,0 SUPER_UPTO,0 TECH_UPTO,0 CHECK_UPTO,0 CCTM_EXP_FEE 
				from t85_billing_adjustement_pcdo where adjusment_yr_mth=wYrMth group by Region_Code 
				UNION ALL 
				Select Region_Code,region_code Serial_Code,0 TURN_MONTH,0 TURN_LAB_MONTH,0 ADJ_MONTH,sum(NVL(INSP_FEE,0)) TURN_UPTO,0 TURN_LAB_UPTO,0 ADJ_UPTO,0 B_TARGET,0 CONT_MONTH,0 CONT_UPTO,0 SUPER_UPTO,0 TECH_UPTO,0 CHECK_UPTO,0 CCTM_EXP_FEE 
				from V22A_BILLING_SUMMARY where substr(sector,1,1) in ('1','2', '3', '5','6') and 
				BILLING_YR_MTH between CumYrMth and wYrMth group by Region_Code 
				UNION ALL 
				Select Region_Code,region_code Serial_Code,0 TURN_MONTH,0 TURN_LAB_MONTH,0 ADJ_MONTH,0 TURN_UPTO,sum(NVL(LAB_EXP,0)) TURN_LAB_UPTO,0 ADJ_UPTO,0 B_TARGET,0 CONT_MONTH,0 CONT_UPTO,0 SUPER_UPTO,0 TECH_UPTO,0 CHECK_UPTO,0 CCTM_EXP_FEE  
				from t59_lab_exp where lab_bill_per between CumYrMth and wYrMth group by Region_Code 
				UNION ALL 
				Select Region_Code,region_code Serial_Code,0 TURN_MONTH,0 TURN_LAB_MONTH,0 ADJ_MONTH,0 TURN_UPTO,0 TURN_LAB_UPTO,sum(NVL(adjustment_amt,0)) ADJ_UPTO,0 B_TARGET,0 CONT_MONTH,0 CONT_UPTO,0 SUPER_UPTO,0 TECH_UPTO,0 CHECK_UPTO,0 CCTM_EXP_FEE   
				from t85_billing_adjustement_pcdo where adjusment_yr_mth between CumYrMth and wYrMth group by Region_Code 
				UNION ALL 
				Select Region_Code,region_code Serial_Code,0 TURN_MONTH,0 TURN_LAB_MONTH,0 ADJ_MONTH,0 TURN_UPTO,0 TURN_LAB_UPTO,0 ADJ_UPTO,sum(NVL(B_TARGET,0)) B_TARGET,0 CONT_MONTH,0 CONT_UPTO,0 SUPER_UPTO,0 TECH_UPTO,0 CHECK_UPTO,0 CCTM_EXP_FEE   
				from T83_BE_TARGET where BE_PER=byear group by Region_Code 
				UNION ALL 
				select Region_Code,REGION_CODE Serial_Code,0 TURN_MONTH,0 TURN_LAB_MONTH,0 ADJ_MONTH,0 TURN_UPTO,0 TURN_LAB_UPTO,0 ADJ_UPTO,0 B_TARGET,Count(*) CONT_MONTH,0 CONT_UPTO,0 SUPER_UPTO,0 TECH_UPTO,0 CHECK_UPTO,0 CCTM_EXP_FEE 
				from T57_ONGOING_CONTRACTS T57 where to_char(CONT_SIGN_DT,'yyyyMM')=wYrMth group by REGION_CODE 
				UNION ALL 
				select Region_Code,REGION_CODE Serial_Code,0 TURN_MONTH,0 TURN_LAB_MONTH,0 ADJ_MONTH,0 TURN_UPTO,0 TURN_LAB_UPTO,0 ADJ_UPTO,0 B_TARGET,0 CONT_MONTH,Count(*) CONT_UPTO,0 SUPER_UPTO,0 TECH_UPTO,0 CHECK_UPTO,0 CCTM_EXP_FEE  
				from T57_ONGOING_CONTRACTS T57 where to_char(CONT_SIGN_DT,'yyyyMM') between CumYrMth and wYrMth group by REGION_CODE 
				UNION ALL 
				select substr(Case_No,1,1) Region_Code,substr(Case_No,1,1) Serial_Code,0 TURN_MONTH,0 TURN_LAB_MONTH,0 ADJ_MONTH,0 TURN_UPTO,0 TURN_LAB_UPTO,0 ADJ_UPTO,0 B_TARGET,0 CONT_MONTH,0 CONT_UPTO,count(*) as SUPER_UPTO,0 TECH_UPTO,0 CHECK_UPTO,0 CCTM_EXP_FEE from T44_SUPER_SURPRISE ts   
				where to_char(ts.SUPER_SURPRISE_DT,'yyyymm') between CumYrMth and wYrMth group by substr(Case_No,1,1) 
				UNION ALL 
				select REGION_CD Region_Code,REGION_CD Serial_Code,0 TURN_MONTH,0 TURN_LAB_MONTH,0 ADJ_MONTH,0 TURN_UPTO,0 TURN_LAB_UPTO,0 ADJ_UPTO,0 B_TARGET,0 CONT_MONTH,0 CONT_UPTO,0 SUPER_UPTO,count(*) as  TECH_UPTO,0 CHECK_UPTO,0 CCTM_EXP_FEE from t66_tech_ref tr   
				where to_char(tr.tech_date,'yyyymm') between CumYrMth and wYrMth  group by REGION_CD 
				UNION ALL 
				select substr(im.item_cd,1,1) Region_Code,substr(im.item_cd,1,1) Serial_Code,0 TURN_MONTH,0 TURN_LAB_MONTH,0 ADJ_MONTH,0 TURN_UPTO,0 TURN_LAB_UPTO,0 ADJ_UPTO,0 B_TARGET,0 CONT_MONTH,0 CONT_UPTO,0 SUPER_UPTO,0 TECH_UPTO,count(im.item_cd) as  CHECK_UPTO,0 CCTM_EXP_FEE from t61_item_master im   
				where to_char(im.creation_rev_dt,'yyyymm') between CumYrMth and wYrMth  group by substr(im.item_cd,1,1) 
				UNION ALL 
				SELECT Region_Code,Region_Code Serial_Code,0 TURN_MONTH,0 TURN_LAB_MONTH,0 ADJ_MONTH,
				0 TURN_UPTO,0 TURN_LAB_UPTO,0 ADJ_UPTO,0 B_TARGET,0 CONT_MONTH,0 CONT_UPTO,0 SUPER_UPTO,0 TECH_UPTO,0 CHECK_UPTO,sum(NVL(exp_amt,0)) CCTM_EXP_FEE FROM T63_EXP  
				WHERE exp_per BETWEEN CumYrMth AND wYrMth GROUP BY region_code 

        )
        GROUP BY Region_Code
        ORDER BY Serial_Code;
END sp_PCDOReport_Summary;

======================




 ALTER TABLE T02_USERS 
ADD MOBILE VARCHAR2(10 BYTE) ;

===========
CREATE TABLE IBS_USERS_OTP(
    ID NUMBER(6,0) NOT NULL,
	USER_ID CHAR(12 BYTE),
    MOBILE VARCHAR2(10 BYTE),
	OTP Varchar2(50),
	CREATEDDATE TIMESTAMP(6) WITH TIME ZONE,
	STATUS NUMBER(2,0)
)
ALTER TABLE IBS_USERS_OTP ADD (
  CONSTRAINT IBS_USERS_OTP_pk PRIMARY KEY (ID));
  
 CREATE SEQUENCE IBS_USERS_OTP_seq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE
  NOCACHE
  NOCYCLE;
   
ALTER TABLE IBS_USERS_OTP
    MODIFY ID NUMBER(6,0) DEFAULT IBS_USERS_OTP_seq.nextval;

============

ALTER TABLE T13_Po_Master ADD ContractID NUMBER(6,0)
ALTER TABLE T80_Po_Master ADD ContractID NUMBER(6,0)

==================

create or replace PROCEDURE Get_SP_DEO_CRIS_PurchesOrderList(
    p_Region IN NVARCHAR2,
    p_Result OUT SYS_REFCURSOR
)
AS
BEGIN
    OPEN p_Result FOR
    SELECT 
        RITES_CASE_NO AS CASE_NO,
        IMMS_POKEY,
        PO_NO,
        TO_CHAR(PO_DT, 'dd/mm/yyyy') AS PO_DT,
        TO_CHAR(RECV_DATE, 'dd/mm/yyyy') AS RECV_DT,
        H.IMMS_RLY_CD,
        H.IMMS_RLY_SHORTNAME,
        NVL2(R.RLY_CD, R.RLY_CD, H.IMMS_RLY_SHORTNAME) AS RLY_CD,
        IMMS_VENDOR_NAME || ',' || IMMS_VENDOR_DETAIL AS VEND_NAME,
        REMARKS,
        'Vendor/PO/' || PO_NO || '.pdf' AS PO_DOC,
        IMMS_POI_NAME || '/' || IMMS_POI_DETAIL AS POI,
        DECODE(REGION_CODE, 'N', 'NORTHERN', 'S', 'SOUTHERN', 'E', 'EASTERN', 'W', 'WESTERN', 'C', 'CENTRAL', 'NA') AS REGION,
        REGION_CODE
    FROM 
        IMMS_RITES_PO_HDR H
    LEFT JOIN 
        T91_RAILWAYS R ON H.IMMS_RLY_CD = R.IMMS_RLY_CD
    WHERE 
        (REGION_CODE = p_Region OR REGION_CODE IS NULL)
        AND PO_DT > TO_DATE('2021-03-31', 'yyyy-mm-dd') -- Assuming your database uses this date format
        AND RITES_CASE_NO IS NULL
    ORDER BY 
        REGION_CODE DESC, H.PO_DT DESC;
END;


=============

create or replace PROCEDURE SP_Get_DEO_CRIS_PurchesOrderData (
    p_POKey IN VARCHAR2,
    p_RlyCode IN VARCHAR2,
    p_Result OUT SYS_REFCURSOR
)
AS
BEGIN
    OPEN p_Result FOR
    SELECT 
        RITES_CASE_NO,
        IMMS_POKEY,
        IMMS_RLY_CD,
        RLY_CD,
        PURCHASER_CD AS PURCHASER_CD,
        IMMS_PURCHASER_CD,
        IMMS_PURCHASER_DETAIL,
        STOCK_NONSTOCK,
        INSPECTING_AGENCY,
        PO_OR_LETTER,
        PO_NO,
        TO_CHAR(PO_DT, 'dd/mm/yyyy') AS PO_DT,
        L5NO_PO,
        VEND_CD AS VEND_CD,
        IMMS_VENDOR_CD,
        IMMS_VENDOR_NAME || ',' || IMMS_VENDOR_DETAIL AS VENDOR,
        IMMS_RLY_SHORTNAME,
        REGION_CODE AS REGION_CODE,
        REMARKS,
        BPO_CD AS BPO_CD,
        IMMS_BPO_CD,
        IMMS_BPO_NAME AS BPO,
        POI_CD,
        TO_CHAR(PO_DT, 'YYYY') AS PO_YR,
        IMMS_POI_NAME || ',' || IMMS_POI_DETAIL AS MFG,
        (select RAILWAY from T91_RAILWAYS where RLY_CD= (Select nvl(RLY_CD,'XX') RLY_CD from T91_RAILWAYS WHERE IMMS_RLY_CD=p_RlyCode)) As RAILWAY
    FROM IMMS_RITES_PO_HDR
    WHERE IMMS_POKEY = p_POKey AND IMMS_RLY_CD = p_RlyCode;
END;

==========

