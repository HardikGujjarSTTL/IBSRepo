@model IBS.Models.ChatMessage

@{
    ViewData["Title"] = "Index";
    string SenderId = ViewBag.SenderId <= 0 ? "" : Convert.ToString(ViewBag.SenderId);
    string ReceiverId = Model.msg_recv_ID == "0" ? "" : Convert.ToString(Model.msg_recv_ID);
    string SiteUrl = Model.HostUrl;
}

<div class="list-inner">
    <div class="tast-list">
        <h2>Users Chat</h2>
    </div>
</div>
<div class="task-listinput">
    <form role="form" id="frmChatMessage">
        <div class="accordion-body chatArea">
            <div class="chatTopFilter">
                <div class="row my-0">
                    <div class="col-md-3">
                        <label for="Reference">Users</label>
                        <div class="userMultiSelect">@Html.ListBox("dpUser", new MultiSelectList(Common.GetUserMaster(), "Value", "Text"), new { multiple = "multiple" })</div>
                        @*<input type="file" id="fileupload">*@
                    </div>
                    <div class="col-md-8">
                        <label for="Reference">Message</label>
                        <input type="text" id="txtMessage" />
                    </div>
                    <div class="col-md-1 savenext-btn" style="margin-top:30px;">
                        <button type="button" class="save-btn active" id="btnSave" onclick="SendMessage(1);"><span class="fa fa-paper-plane"></span></button>
                    </div>
                </div>
            </div>
            <div class="chatBox">
                <div class="chatBoxHeader">
                    <h2>Message</h2>
                </div>
                <div class="messageBody">
                    <div class="chatBoxBody chatLeftBoxBody">
                    </div>
                    <div class="userChatBox">
                        <div class="chatBoxBody chatRightBoxBody">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<link href="~/css/chat.css" rel="stylesheet" />
<script src="~/js/signalr.min.js"></script>

<link href="~/lib/bootstrap-multiselect/css/bootstrap-multiselect.css" rel="stylesheet" />
<script src="~/lib/bootstrap-multiselect/js/bootstrap-multiselect.min.js"></script>

<script type="text/javascript">

    var connection = new signalR.HubConnectionBuilder().withUrl('@SiteUrl' + "/chatHub").build();
    var SenderId = "@SenderId";
    var ReceiverId = "@ReceiverId";
    //var currDate = @DateTime.Now.ToString("dd MMMM yyyy");
    var Cnt = 0;

    $(document).ready(function () {
        GetUserReceiverList();
        GetChatMessageList(ReceiverId);

        $('#dpUser').multiselect({
            includeSelectAllOption: true,
        });

        $('#fileupload').change(function () {
            var fileInput = this;
            var file = fileInput.files[0];
            
            //var formData = new FormData();
            //formData.append("SenderId", "1");
            //formData.append("ReceiverId", "12");
            //formData.append("message", "Test");
            //formData.append("MsgType", "1");

            const formData = new FormData();
            formData.append("file", fileInput.files[0]);
            connection.invoke("SendFile", formData);

            $.ajax({
                url: '@Url.Action("UploadFile", "Chat")',
                type: 'POST',
                data: { SingleFile: fileInput.files[0] },
                cache: false,
                processData: false,
                contentType: false
            }).done(function (response) {
                if (response != null) {
                    $(".chatLeftBoxBody").html("");
                    $(".chatLeftBoxBody").html(response);
                    $(".userList").removeClass("active");
                    $("#li" + ReceiverId).addClass("active");
                }
            });
        });
    });

    function GetUserReceiverList() {
        $.ajax({
            url: '@Url.Action("ChatUserReceiver", "Chat")',
            type: 'POST',
            cache: false,
            processData: false,
            contentType: false
        }).done(function (response) {
            if (response != null) {
                $(".chatLeftBoxBody").html("");
                $(".chatLeftBoxBody").html(response);
                $(".userList").removeClass("active");
                $("#li" + ReceiverId).addClass("active");
            }
        });
    }

    function GetChatMessageList(recvid) {
        ReceiverId = recvid;
        $.ajax({
            url: '@Url.Action("ChatMessageHistory", "Chat")/' + ReceiverId,
            type: 'POST',
            cache: false,
            processData: false,
            contentType: false
        }).done(function (response) {
            if (response != null) {
                $(".chatRightBoxBody").html("");
                $(".chatRightBoxBody").html(response);
                $(".userList").removeClass("active");
                $("#li" + ReceiverId).addClass("active");
                $('.chatBoxBody').scrollTop($('.chatBoxBody').height());

                Cnt = parseInt($("#hdnCurrDtCount").val());
            }
        });
    }

    function SendMessage(type) {
        
        const file = document.getElementById("fileupload").files[0];
        var reader = new FileReader();
        var arrBuffer = reader.readAsArrayBuffer(file);
        connection.invoke("SendFile", file);

        var message = "";
        var fileupload = uploadFiles();

        return;
        if (type == 1) {
            ReceiverId = $("#dpUser").val().join(",");
            message = $("#txtMessage").val();
        }
        else if (type == 2) {
            message = $("#txtMsg").val();
        }

        if (ReceiverId == "" || message == "") {
            //alert("Receiver and Message is required.")
            return;
        }
        connection.invoke("SendMessage", SenderId, ReceiverId, message, type, fileupload);

        if (type == 1) { $("#txtMessage").val(""); }
        else if (type == 2) { $("#txtMsg").val(""); }
    }

    connection.start().then(function () {
        connection.invoke("OnConnectedAsync", SenderId);
    });

    connection.on("ReceiveMessage", function (ReceiverId, message, MsgType) {
        if (MsgType == 1) {
            window.location.href = "@Url.Action("Index", "Chat")";
        }
        else {
            if (Cnt == 0) {
                var element = '<li><div class="messageDate"><span>' + "@DateTime.Now.ToString("dd MMMM yyyy")" + '</span></div></li>'
                $(".chatBodyText").append(element);
                Cnt = Cnt + 1;
            }
            if (SenderId != ReceiverId) {
                var element = '<li class="sendTextHolder" > <div class="sendText" >' + message + '<span class="timeStamp">' + "@DateTime.Now.ToString("hh:mm tt")" + '</span></div></li>';
                $(".chatBodyText").append(element);
                $('.chatBoxBody').scrollTop($('.chatBoxBody').height());
                $("#txtMsg").focus();
            }
            if (SenderId == ReceiverId) {
                var element = '<li class="reciveTextHolder" > <div class="recieveText" >' + message + '<span class="timeStamp">' + "@DateTime.Now.ToString("hh:mm tt")" + '</span></div></li>';
                $(".chatBodyText").append(element);
                $('.chatBoxBody').scrollTop($('.chatBoxBody').height());
                $("#txtMsg").focus();
            }
        }
    });

    $('#txtMessage').keypress(function (e) {
        if (e.keyCode == 13) {  // detect the enter key
            SendMessage(1);
        }
    });

    function uploadFiles() {
        const file = document.getElementById("fileupload").files[0];

        // Read the file as an ArrayBuffer
        const reader = new FileReader();
        reader.onload = function (e) {
            const arrayBuffer = e.target.result;

            // Convert the ArrayBuffer to a byte array
            const byteArray = new Uint8Array(arrayBuffer);
            return byteArray;
        }
        reader.readAsArrayBuffer(file);
    }

</script>