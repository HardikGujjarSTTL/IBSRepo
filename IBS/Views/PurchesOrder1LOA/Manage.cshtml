@model IBS.Models.PurchesOrder1LOAModel

@{
    ViewData["Title"] = "REGISTERED LOA ADD NEW ITEMS FORM Manage";
}

<form data-ajax="true" asp-antiforgery="true" asp-controller="PurchesOrder1LOA" asp-action="DetailsSave" data-ajax-method="post" data-ajax-complete="completed" id="frmDetails">

    <div class="list-inner">
        <div class="tast-list">
            <h2>@ViewData["Title"] </h2>
        </div>
        <input type="hidden" asp-for="CaseNo" />
        <input type="hidden" asp-for="PoNo" />
        <input type="hidden" asp-for="PoDt" />
        <input type="hidden" asp-for="VendName" />
    </div>
    <div class="accordion-body">
        <div class="row my-0">
            <div class="col-md-3 mb-3">
                <label for="Reference">Case Number</label>
                <input type="text" class="input" asp-for="CaseNo" maxlength="100" style="text-transform: uppercase; color:orangered;" readonly="readonly">
                <span asp-validation-for="CaseNo" class="text-danger"></span>
            </div>
            <div class="col-md-3 mb-3">
                <label for="Reference">PO Date</label>
                <input type="text" class="input" asp-for="PoDt" maxlength="30" style="text-transform: uppercase; color:orangered;" readonly="readonly">
                <span asp-validation-for="PoDt" class="text-danger"></span>
            </div>
        </div>
        <div class="row my-0">
            <div class="col-md-3 mb-3">
                <label for="Reference">Item Serial No.</label>
                <input type="text" class="input" asp-for="ItemSrno" maxlength="100" style="text-transform: uppercase; color:orangered;" readonly="readonly">
                <span asp-validation-for="ItemSrno" class="text-danger"></span>
            </div>
            <div class="col-md-3 mb-3">
                <label for="Reference">Item Description</label>
                @Html.DropDownListFor(model => model.lstItemDesc, new SelectList(IBS.Models.Common.GetRailPrices() , "Value", "Text"))
                <span asp-validation-for="lstItemDesc" class="text-danger"></span>
            </div>
            <div class="col-md-6 mb-3">
                <div class="reference">
                    @*<label for="Name">SNo.</label>*@
                    <textarea rows="4" asp-for="ItemDesc" style="text-transform: uppercase;"></textarea>
                    <span asp-validation-for="ItemDesc" class="text-danger"></span>
                </div>
            </div>
        </div>

        <div class="row my-0">
            <div class="col-md-12 mb-3">
                <label for="Reference">Consignee</label>
                @Html.DropDownListFor(model => model.ConsigneeCd, new SelectList(IBS.Models.Common.GetConsignee(Model.CaseNo) , "Value", "Text"))
                <span asp-validation-for="ConsigneeCd" class="text-danger"></span>
            </div>
        </div>
        <div class="row my-0">
            <div class="col-md-6 mb-3">
                <div class="reference">
                    <label for="Name">Quantity</label>
                    <input type="text" class="input" asp-for="Qty" style="text-transform: uppercase;">
                    <span asp-validation-for="Qty" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-4 mb-3">
                <label for="reference">Unit Of Measurment</label>
                @Html.DropDownListFor(model => model.UomCd, new SelectList(IBS.Models.Common.GetUOM() , "Value", "Text"),"--Select--",new { @onchange="GetUOMChanged()" })
                <span asp-validation-for="UomCd" class="text-danger"></span>
            </div>
            <div class="col-md-2 mb-3">
                <label for="reference">Value</label>
                <input type="text" class="input" asp-for="UOMFactor" style="text-transform: uppercase;" readonly="readonly">
            </div>
        </div>
        <div class="row my-0">
            <div class="col-md-6 mb-3">
                <div class="reference">
                    <label for="Name">Rate</label>
                    <input type="text" class="input" asp-for="Rate" style="text-transform: uppercase;" onblur="basevalue()">
                    <span asp-validation-for="Rate" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6 mb-3">
                <div class="reference">
                    <label for="Name">Base Value</label>
                    <input type="text" class="input" asp-for="BasicValue" style="text-transform: uppercase;">
                    <span asp-validation-for="BasicValue" class="text-danger"></span>
                </div>
            </div>
        </div>
        <div class="row my-0">
            <div class="col-md-4 mb-3">
                <div class="reference">
                    <label for="Name">Discount Type</label>
                    @Html.DropDownListFor(model => model.DiscountType, new SelectList(IBS.Models.Common.DiscountType() , "Value", "Text"),"--Select--")
                    <span asp-validation-for="DiscountType" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-2 mb-3">
                <div class="reference">
                    <label for="Name">Value</label>
                    <input type="text" class="input" asp-for="DiscountPer" style="text-transform: uppercase;" onblur="discountype();">
                    <span asp-validation-for="DiscountType" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6 mb-3">
                <label for="Reference">Discount</label>
                <input type="text" class="input" asp-for="Discount" style="text-transform: uppercase;" onblur="discountype();">
                <span asp-validation-for="Discount" class="text-danger"></span>
            </div>
        </div>
        <div class="row my-0">
            <div class="col-md-4 mb-3">
                <div class="reference">
                    <label for="Name">Excise Type</label>
                    @Html.DropDownListFor(model => model.ExciseType, new SelectList(IBS.Models.Common.ExciseType() , "Value", "Text"),"--Select--")
                    <span asp-validation-for="ExciseType" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-2 mb-3">
                <div class="reference">
                    <label for="Name">Value</label>
                    <input type="text" class="input" asp-for="ExcisePer" style="text-transform: uppercase;" onblur="excise();">
                    <span asp-validation-for="ExciseType" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6 mb-3">
                <div class="reference">
                    <label for="Name">Excise</label>
                    <input type="text" class="input" asp-for="Excise" style="text-transform: uppercase;" onblur="excise();">
                    <span asp-validation-for="Excise" class="text-danger"></span>
                </div>
            </div>
        </div>
        <div class="row my-0">
            <div class="col-md-6 mb-3">
                <div class="reference">
                    <label for="Name">GST/Sale Tax(%)</label>
                    <input type="text" class="input" asp-for="SalesTaxPer" style="text-transform: uppercase;" onblur="saletax();">
                    <span asp-validation-for="SalesTaxPer" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6 mb-3">
                <label for="Reference">Sale Tax</label>
                <input type="text" class="input" asp-for="SalesTax" style="text-transform: uppercase;" onblur="saletax();">
                <span asp-validation-for="SalesTax" class="text-danger"></span>
            </div>
        </div>
        <div class="row my-0">
            <div class="col-md-4 mb-3">
                <div class="reference">
                    <label for="Name">Other Charges Type</label>
                    @Html.DropDownListFor(model => model.OtChargeType, new SelectList(IBS.Models.Common.DiscountType() , "Value", "Text"),"--Select--")
                    <span asp-validation-for="OtChargeType" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-2 mb-3">
                <div class="reference">
                    <label for="Name">Value</label>
                    <input type="text" class="input" asp-for="OtChargePer" style="text-transform: uppercase;" onblur="othercharges();">
                    <span asp-validation-for="OtChargeType" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6 mb-3">
                <label for="Reference">Other Charges (AMT)</label>
                <input type="text" class="input" asp-for="OtherCharges" style="text-transform: uppercase;" onblur="saletax();">
                <span asp-validation-for="OtherCharges" class="text-danger"></span>
            </div>
        </div>
        <div class="row my-0">
            <div class="col-md-6 mb-3">
            </div>
            <div class="col-md-6 mb-3">
                <label for="Reference">Total Value</label>
                <input type="text" class="input" asp-for="Value" style="text-transform: uppercase;" onfocus="total();">
                <span asp-validation-for="Value" class="text-danger"></span>
            </div>
        </div>
        <div class="row my-0">
            <div class="col-md-6 mb-3">
                <div class="reference">
                    <label for="Name">Delivery Date</label>
                    <input type="text" class="datetime" asp-for="DelvDt" style="text-transform: uppercase;" readonly="readonly" onblur="cpy();">
                    <span asp-validation-for="DelvDt" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6 mb-3">
                <label for="Reference">Extended Delivery Date</label>
                <input type="text" class="datetime" asp-for="ExtDelvDt" style="text-transform: uppercase;" readonly="readonly">
                <span asp-validation-for="ExtDelvDt" class="text-danger"></span>
            </div>
        </div>
        <div class="savenext-btn">
            <button type="button" class="save-btn active" onclick="Save();">Save</button>
            <a asp-controller="PurchesOrder1LOA" asp-action="Index" class="reset-btn">Cancel</a>
            <button type="button" class="save-btn" onclick="Save();">Search</button>
        </div>
    </div>

    <section class="table-section">
        <div class="task-listinput">
            <div class="dash-table">
                <table id="dtList" class="table-responsive">
                    <thead>
                        <tr>
                            @*<th>#</th>
                            <th>Case Number</th>*@
                            <th>Item Sl. No.</th>
                            <th>Item description</th>
                            <th>Consignee</th>
                            <th>Quantity</th>
                            <th>Rate</th>
                            <th>Total Value(Inc. Taxes)</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </section>
</form>
@section scripts{
    <partial name="_DataTablesScriptsPartial" />
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(function () {
            setDateFormate();
            $("#UomCd").val(6);
            //$("#ItemDesc").val($('option:selected', $("#lstItemDesc")).text());
            GetUOMChanged();
            $("#lstItemDesc").change();
            InitializeDatatable();
        });
        function Save() {
            if ($("#frmDetails").valid()) {
                $("#frmDetails").submit();
            }
        }

        $("#lstItemDesc").change(function () {
            //$("#ItemDesc").val($('option:selected', $(this)).text());

            //alert($("#ItemDesc").val());
        });

        function setDateFormate() {
            $('#DelvDt').datepicker({
                changeMonth: true,
                changeYear: true,
                dateFormat: 'dd-mm-yy',
            });
            $('#ExtDelvDt').datepicker({
                changeMonth: true,
                changeYear: true,
                dateFormat: 'dd-mm-yy',
            });
        }

        function basevalue() {
            var qty;
            var rate;
            if ($.trim($('#Qty').val()) === "") {
                qty = 0;
            } else {
                qty = parseFloat($.trim($('#Qty').val()));
            }

            if ($.trim($('#Rate').val()) === "") {
                rate = 0;
            } else {
                rate = parseFloat($.trim($('#Rate').val()));
            }

            var uom = parseFloat($.trim($('#UOMFactor').val()));
            var basevalue = ((qty * rate) / uom);
            $('#BasicValue').val(Math.round(basevalue * 100) / 100);
        }

        function GetUOMChanged() {
            var UomCd = $('#UomCd').val();
            $.ajax({
                url: '@Url.Action("GetUOMChanged", "PurchesOrder1LOA")',
                type: "GET",
                dataType: "JSON",
                data: { id: UomCd },
                success: function (contacts) {
                    if (contacts.data && contacts.data.length > 0) {
                        $("#UOMFactor").val(contacts.data[0].UOMFactor);
                    }
                }
            });
        }

        function cpy() {
            var delvDateInput = $("#DelvDt").val();
            var podtInput = $("#PoDt").val();

            if (check_date(delvDateInput)) {
                if (compareDates(podtInput, delvDateInput, 'Delivery Date Cannot Be Earlier Than PO Date')) {
                    $("#DelvDt").val(delvDateInput);
                }
            }
        }

        function check_date(date) {
            // Add your check_date implementation here.
            // This function should validate the date format or any other requirements you have.
            return true; // Change this to return true or false based on the validation result.
        }

        function compareDates(date1, date2, errorMsg) {
            // Add your compareDates implementation here.
            // This function should compare the two dates and display the error message if needed.
            return true; // Change this to return true or false based on the comparison result.
        }

        function saletax() {
            var saleTaxPre = $.trim($("#SalesTaxPer").val());
            var discountAmt = $.trim($("#Discount").val());
            var exciseAmt = $.trim($("#Excise").val());

            if (saleTaxPre !== "") {
                var discountypeper = parseFloat(discountAmt !== "" ? discountAmt : 0);
                var excise = parseFloat(exciseAmt !== "" ? exciseAmt : 0);
                var stper = parseFloat(saleTaxPre);
                var basevalue = parseFloat($.trim($("#BasicValue").val()));
                var stamount = ((basevalue - discountypeper) + excise) * stper / 100;
                $("#SalesTax").val(Math.round(stamount * 100) / 100);
            } else {
                $("#SalesTax").val(0);
            }
        }

        function excise() {
            var ddlExciseType = $.trim($("#ExciseType").val());
            var discountAmt = $.trim($("#Discount").val());
            var excise = $.trim($("#Excise").val());

            if (ddlExciseType === "P") {
                var discountypeper = parseFloat(discountAmt !== "" ? discountAmt : 0);
                var exciseper = parseFloat(excise);
                var basevalue = parseFloat($.trim($("#BasicValue").val()));
                var exciseamount = ((basevalue - discountypeper) * exciseper) / 100;
                $("#ExcisePer").val(Math.round(exciseamount * 100) / 100);
            } else if (ddlExciseType === "L") {
                $("#ExcisePer").val(excise);
            } else {
                $("#ExcisePer").val(0);
                $("#Excise").val(0);
            }
        }

        function discountype() {
            var ddlDiscountType = $.trim($("#DiscountType").val());
            var txtDiscountPer = $.trim($("#DiscountPer").val());
            var txtBaseValue = $.trim($("#BasicValue").val());
            var txtQty = $.trim($("#txtQty").val());

            if (ddlDiscountType === "P") {
                var discountypeper = parseFloat(txtDiscountPer);
                var basevalue = parseFloat(txtBaseValue);
                var discountamount = (basevalue * discountypeper) / 100;
                $("#Discount").val(Math.round(discountamount * 100) / 100);
            } else if (ddlDiscountType === "L") {
                $("#Discount").val(txtDiscountPer);
            } else if (ddlDiscountType === "N") {
                var discountperno = parseFloat(txtDiscountPer);
                var qty = parseFloat(txtQty);
                $("#Discount").val(discountperno * qty);
            } else {
                $("#Discount").val(0);
                $("#DiscountPer").val(0);
            }
        }

        function othercharges() {
            var ddlOCType = $.trim($("#OtChargeType").val());
            var txtOtherCharges = $.trim($("#OtChargePer").val());
            var txtBaseValue = $.trim($("#BasicValue").val());
            var txtQty = $.trim($("#txtQty").val());

            if (ddlOCType === "P") {
                var otherper = parseFloat(txtOtherCharges);
                var basevalue = parseFloat(txtBaseValue);
                var otheramount = (basevalue * otherper) / 100;
                $("#OtherCharges").val(Math.round(otheramount * 100) / 100);
            } else if (ddlOCType === "L") {
                $("#OtherCharges").val(txtOtherCharges);
            } else if (ddlOCType === "N") {
                var otherperno = parseFloat(txtOtherCharges);
                var qty = parseFloat(txtQty);
                $("#OtherCharges").val(otherperno * qty);
            } else {
                $("#OtherCharges").val(0);
                $("#OtChargePer").val(0);
            }
        }

        function total() {
            var txtBaseValue = $.trim($("#BasicValue").val());
            var txtSaleTaxAmt = $.trim($("#SalesTax").val());
            var txtExciseAmt = $.trim($("#Excise").val());
            var txtDiscountAmt = $.trim($("#Discount").val());
            var txtOtherChargesAmt = $.trim($("#OtherCharges").val());

            var basevalue = parseFloat(txtBaseValue);
            var saletaxamt = (txtSaleTaxAmt === "") ? 0 : parseFloat(txtSaleTaxAmt);
            var exciseamt = (txtExciseAmt === "") ? 0 : parseFloat(txtExciseAmt);
            var discountamt = (txtDiscountAmt === "") ? 0 : parseFloat(txtDiscountAmt);
            var othercharges = (txtOtherChargesAmt === "") ? 0 : parseFloat(txtOtherChargesAmt);

            var totalvalue1 = basevalue - discountamt;
            var totalvalue2 = totalvalue1 + exciseamt;
            var totalvalue3 = totalvalue2 + saletaxamt;
            var totalvalue = totalvalue3 + othercharges;

            $("#Value").val(Math.round(totalvalue * 100) / 100);
        }

        function InitializeDatatable() {
            var CaseNo = $("#CaseNo").val();
            var type = "L";
            var PoDt = $("#PoDt").val();
            var ItemSrno = $("#ItemSrno").val();
            var ConsigneeCd = $("#ConsigneeCd").val();
            var ItemDesc = $("#ItemDesc").val();

            $("#dtList").DataTable({
                stateSave: false,// Design Assets
                autoWidth: true,
                scrollX: true,
                scrollCollapse: true,
                processing: true, // ServerSide Setups
                serverSide: true,
                destroy: true,
                paging: true,// Paging Setups
                searching: true,// Searching Setups
                ajax: {// Ajax Filter
                    url: "@Url.Action("LoadTableItemDetails", "PurchesOrder1LOA")",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: function (d) {
                        var AdditionalValues = {
                            "CaseNo": CaseNo,
                            "ItemSrno": ItemSrno,
                            "type": type,
                            "PoDt": PoDt,
                            "ConsigneeCd": ConsigneeCd,
                            "ItemDesc": ItemDesc
                        };
                        d.AdditionalValues = AdditionalValues;
                        return JSON.stringify(d);
                    }
                },

                columns: [// Columns Setups
                    //{
                    //    data: '', orderable: false, width: '5%',
                    //    render: function (data, type, row, meta) {
                    //        return meta.row + meta.settings._iDisplayStart + 1;
                    //    }
                    //},
                    //{ data: "CaseNo" },
                    { data: "ItemSrno" },

                    //{
                    //    data: "PoDt",
                    //    render: function (data, type, row) {
                    //        if (type === "display" || type === "filter") {// If display or filter data is requested, format the date
                    //            return data != null && data != "" ? moment(data).format("DD-MM-YYYY") : "";
                    //        }
                    //        return data;
                    //    }
                    //},
                    { data: "ItemDesc" },
                    { data: "ConsigneeName" },
                    { data: "Qty" },
                    { data: "Rate" },
                    { data: "Value" },
                    {
                        data: null, orderable: false,
                        render: function (data, type, row) {
                            var CaseNo = data.CaseNo;
                            var ItemSrno = data.ItemSrno;
                            var PoDt = moment(data.PoDt).format("DD-MM-YYYY");
                            var lstItemDesc = $("#lstItemDesc").val();

                            var editUrl = '@Url.Action("Manage", "PurchesOrder1LOA")?CaseNo=' + CaseNo + "&ItemSrno=" + ItemSrno + "&type=L" + "&PoDt=" + PoDt + "&lstItemDesc=" + lstItemDesc;
                            var html = '<div align=\"center\" class=\"reportIcon\"> <a href=\"' + editUrl + '\" class=\"edit\"><i class=\"fa fa-pencil\" title="Edit"></i></a>';
                            html += '</div>';
                            return html;
                        }
                    },

                ],
                "order": [[0, "asc"]]
            });
        }

        completed = function (response) {
            var res = response.responseJSON;
            ShowHideMsgNew(res.status, res.responseText);
            //window.location.href = "/PurchesOrder1LOA";
            window.location.href = '@Url.Action("Index", "PurchesOrder1LOA")';
        };
    </script>
}