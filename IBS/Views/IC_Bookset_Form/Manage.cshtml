@model IBS.Models.IC_Bookset_FormModel

@{
    ViewData["Title"] = "Manage IC Book Set";
    string Region = IBS.Helper.SessionHelper.UserModelDTO.Region;
    bool IsReadOnly = Model != null & Model.Id > 0;
}
<div class="list-inner">
    <div class="tast-list">
        <h2>Manage IC Book Set</h2>
    </div>
</div>
<section>
    <div class="task-listinput">
        
            <form role="form" asp-controller="IC_Bookset_Form" asp-action="Manage" id="frmICBooksetForm">
                <input type="hidden" asp-for="Region" />
                <input type="hidden" asp-for="_SetNoFr" />
                <input type="hidden" asp-for="_SetNoTo" />
                <div class="accordion-body">
                    <div class="row my-0">
                        <div class="col-md-4 mb-3">
                            <label for="BkNo">Book No <i class="text-danger">*</i></label>
                            <input type="text" class="input" asp-for="BkNo" maxlength="4" style="text-transform: uppercase;" readonly="@IsReadOnly" />
                            <span asp-validation-for="BkNo" class="text-danger"></span>
                        </div>
                        <div class="col-md-2 mb-3">
                            <label for="SetNoFr">Set No. From <i class="text-danger">*</i></label>
                            <input type="text" class="input" asp-for="SetNoFr" maxlength="3" onkeypress="return isNumber(event)" />
                            <span asp-validation-for="SetNoFr" class="text-danger"></span>
                        </div>
                        <div class="col-md-2 mb-3">
                            <label for="SetNoTo">Set No. To <i class="text-danger">*</i></label>
                            <input type="text" class="input" asp-for="SetNoTo" maxlength="3" onkeypress="return isNumber(event)" />
                            <span asp-validation-for="SetNoTo" class="text-danger"></span>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="IssueToIecd">IE To Whom Issued <i class="text-danger">*</i></label>
                            @Html.DropDownListFor(model => model.IssueToIecd, Common.GetIEIEToWhomIssued(Region), "--Select--",  new { @class = "" })
                            <span asp-validation-for="IssueToIecd" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row my-0">
                        <div class="col-md-4 mb-3">
                            <label for="IssueDt">Date of Issue To IE <i class="text-danger">*</i></label>
                            <input asp-for="IssueDt" type="text" class="datepicker" placeholder="DD/MM/YYYY" data-rule-checkIssueDt="true" />
                            <span asp-validation-for="IssueDt" class="text-danger"></span>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="IssueToIecd">Book Submitted</label>
                            @Html.DropDownListFor(model => model.BkSubmitted, new SelectList(Common.GetBookSubmitted() , "Value", "Text"), new { @class = "" })
                            <span asp-validation-for="BkSubmitted" class="text-danger"></span>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="BkSubmitDt">Book Submit Date</label>
                            <input asp-for="BkSubmitDt" type="text" class="datepicker" placeholder="DD/MM/YYYY" />
                            <span asp-validation-for="BkSubmitDt" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row my-0">
                        <div class="col-lg-12">
                    <div class="alert alert-primary center">Last Set No. Issued/Cancelled By The IE in Current Financial Year (Not a Mendatory Field)</div>
                    </div>
                    </div>
                    <div class="row my-0">
                        <div class="col-md-4 mb-3">
                            <label for="BkSubmitDt">Cut Off Date</label>
                            <input asp-for="CutOffDt" type="text" class="datepicker" placeholder="DD/MM/YYYY" />
                            <span asp-validation-for="CutOffDt" class="text-danger"></span>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="BkSubmitDt">Last Set No</label>
                            <input type="text" class="input" asp-for="CutOffSet" maxlength="3" onkeypress="return isNumber(event)" />
                            <span asp-validation-for="CutOffSet" class="text-danger"></span>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="ICtype">IC Type<i class="text-danger">*</i></label>
                            @Html.DropDownListFor(model => model.ICType, new SelectList(Common.ICType() , "Value", "Text"),"--Select--",  new { @class = "" })
                            <span asp-validation-for="ICType" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="savenext-btn">
                        <a asp-controller="IC_Bookset_Form" asp-action="Index" class="reset-btn">Cancel</a>
                        <button type="button" class="save-btn active" onclick="SubmitICBooksetData();">Save</button>
                    </div>
                </div>
            </form>
        
    </div>
</section>

@section scripts{
    <partial name="_ValidationScriptsPartial" />

    <script type="text/javascript">

        $(function () {
            $("#IssueDt").datepicker({
                changeMonth: true,
                changeYear: true,
                dateFormat: 'dd/mm/yy',
                maxDate: new Date()
            }).mask("00/00/0000");

            jQuery.validator.addMethod("checkIssueDt", function (value, element) {
                var now = new Date();
                var IssueDt = moment(value, "DD/MM/YYYY");
                var myDate = new Date(IssueDt);
                return myDate < now;
            }, "The Date Of Issue To IE Cannot be greater then today's date.");
        });

        $("#SetNoFr,#SetNoTo,#CutOffSet").on("blur", function () {
            $(this).addLeadingZeros(3);
        });

        $.fn.addLeadingZeros = function (length) {
            if (this.val() == "") return;
            for (var el of this) {
                _value = el.value.replace(/^0+/, '');
                length = length - _value.length;
                if (length > 0) {
                    while (length--) _value = '0' + _value;
                }
                el.value = _value;
            }
        };

        function SubmitICBooksetData() {
            $("#spnErrorMsgIssueDt").html("");

            if ($("#frmICBooksetForm").valid()) {
                $("#frmICBooksetForm").submit();
            }
        }

    </script>
}