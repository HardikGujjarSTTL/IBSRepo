@model IBS.Models.ProjectDetails

@{
    ViewData["Title"] = "Index";
}

<div class="list-inner">
    <div class="tast-list">
        <h2>Project Details</h2>
    </div>
</div>

<div class="task-listinput">
    <form asp-controller="" asp-action="" id="frmCityMaster">
        <input type="hidden" value="0" id="In_ID" />
        <div class="accordion-body">
            <div class="row my-0">
                <div class="col-md-4 mb-3">
                    <label for="Reference">Project Name</label>
                    <input type="text" class="input" asp-for="ProjectName" maxlength="50" />
                </div>
                <div class="col-md-4 mb-4">
                    <label for="Reference">Start Date</label>
                    <input type="text" class="input datepicker" asp-for="StartDate" maxlength="300" />
                    <span asp-validation-for="StartDate" class="text-danger"></span>
                </div>
                <div class="col-md-4 mb-4">
                    <label for="Reference">Completion Date</label>
                    <input type="text" class="input datepicker" asp-for="CompletionDate" maxlength="300" />
                    <span asp-validation-for="CompletionDate" class="text-danger"></span>
                </div>
            </div>
        </div>
        <div class="accordion-body">
            <div class="row my-0">
                <div class="col-md-3 mb-3">
                    <label for="Reference">Sanctioned strength</label>
                    @Html.DropDownListFor(model => model.SancStrength, new SelectList(IBS.Models.Common.SanctionedStrength(), "Value", "Text"), new { })
                </div>
                <div class="col-md-3 mb-3">
                    <label for="Reference">Department</label>
                    @Html.DropDownListFor(model => model.Disc, new SelectList(IBS.Models.Common.DiscDepartment(), "Value", "Text"), new { })
                </div>
                <div class="col-md-3 mb-3">
                    <label for="Reference">Number</label>
                    <input type="text" class="input" asp-for="Numbers" onkeypress="return isNumber(event)" maxlength="50" />
                </div>
                <div class="col-md-3 mb-3 savenext-btn">
                    <button type="button" id="BtnAdd" class="save-btn active">Add</button>
                </div>
            </div>
        </div>
        <div class="row my-0">
            <div class="col-md-12 mb-3">
                <section class="table-section">
                    <div class="task-listinput">
                        <div class="dash-table">
                            <table id="dtProject" class="table-responsive">
                                <thead>
                                    <tr>
                                        <th>Sanctioned Strength</th>
                                        <th>Department</th>
                                        <th>Number</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </section>
            </div>
        </div>
        <div id="modal-delete-conf-valuation-detail" class="modal fade" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Confirmation!</h5>
                        <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete this record?</p>
                    </div>
                    <div class="modal-footer">
                        <div class="savenext-btn">
                            <button type="button" class="reset-btn" data-bs-dismiss="modal">No</button>
                            <button type="button" class="save-btn active" id="btnDeletevaluationDetail" data-id="">Yes</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="savenext-btn">
            <button type="button" id="BtnSave" class="save-btn active">Save</button>
        </div>
    </form>
</div>

@section scripts {

    <partial name="_DataTablesScriptsPartial" />
    <partial name="_ValidationScriptsPartial" />

    <script type="text/javascript">
        $(document).ready(function () {

            $("#BtnSave").on("click", function () {
                var formData = {
                    SancStrength: $("#SancStrength").val(),
                    ProjectName: $("#ProjectName").val(),
                    StartDate: $("#StartDate").val(),
                    CompletionDate: $("#CompletionDate").val(),
                    Disc: $("#Disc").val(),
                    Numbers: $("#Numbers").val(),
                }
                $.post("@Url.Action("ProjectDetailsSave", "ProjectDetails")", { model: formData }, function (response) {
                    if (response.status) {
                        ShowHideMsgNew(response.status, response.responseText);
                    }
                });
            });

            $("#BtnAdd").on("click", function () {
                var formData = {
                    In_ID: $("#In_ID").val(),
                    SancStrength: $("#SancStrength").val(),
                    Disc: $("#Disc").val(),
                    Numbers: $("#Numbers").val(),
                }
                $.post("@Url.Action("SaveDetails", "ProjectDetails")", { model: formData }, function (response) {
                    ShowHideMsgNew(response.status, response.responseText);
                    if (response.status) {
                        InitializeClusterData();
                        $("#In_ID").val("0");
                    }
                });
            });

            function EditProject(id) {
                $.ajax({
                    url: '@Url.Action("EditProject", "InspectionEngineers")?id=' + id,
                    type: 'GET',
                    cache: false,
                    processData: false,
                    contentType: false
                }).done(function (response) {
                    if (response.status) {
                        $("#In_ID").val(response.list.In_ID);
                    }
                });
            }

            $('#dtProject tbody').on('dblclick', 'tr', function () {
                var rowData = $('#dtProject').DataTable().row($(this).closest('tr')).data();
                EditIECluster(rowData.ID);
            });

            function DeleteProject(id) {
                $("#btnDeletevaluationDetail").attr("data-id", id);
                $("#modal-delete-conf-valuation-detail").modal("show");
            }

            $("#btnDeletevaluationDetail").click(function () {
                $.ajax({
                    url: '@Url.Action("DeleteprojectDetail", "ProjectDetails")?id=' + $(this).attr("data-id"),
                    type: 'POST',
                    cache: false,
                    processData: false,
                    contentType: false
                }).done(function (response) {
                    ShowHideMsgNew(response.status, response.responseText);
                    if (response.status) {
                        $("#btnDeletevaluationDetail").attr("data-id", "");
                        $("#modal-delete-conf-valuation-detail").modal('hide');
                        InitializeClusterData();
                    }
                });
            });

            function InitializeClusterData() {
                $("#dtProject").DataTable({
                    stateSave: false,// Design Assets
                    autoWidth: true,
                    scrollX: true,
                    scrollCollapse: true,
                    processing: true, // ServerSide Setups
                    serverSide: true,
                    destroy: true,
                    paging: true,// Paging Setups
                    searching: true,// Searching Setups
                    ajax: {// Ajax Filter
                        url: "@Url.Action("LoadTable")",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: function (d) {
                            var AdditionalValues = {
                            };
                            d.AdditionalValues = AdditionalValues;
                            return JSON.stringify(d);
                        }
                    },
                    columns: [// Columns Setups

                        { data: "SancStrength" },
                        { data: "Disc" },
                        { data: "Numbers" },
                        {
                            data: null, orderable: false,
                            render: function (data, type, row) {
                                var id = data.In_ID;
                                var html = '<div align=\"center\" class=\"reportIcon actionCenter\"> <a onclick="EditProject(' + id + ');" href="javascript:void(\'0\');" class=\"edit\"><i class=\"fa fa-pencil\" title="Edit"></i></a>';
                                html += '<a onclick="DeleteProject(' + id + ');"  href="javascript:void(\'0\');" id=\"' + id + '\" class=\"delete\"><i class=\"fa fa-trash\" title="Delete" style="margin:10px;"></i>';
                                html += '</div>';
                                return html;
                            }
                        },
                    ],
                    "order": [[0, "asc"]]
                });
            }

        });
    </script>
}