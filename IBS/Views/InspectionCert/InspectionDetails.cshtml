@model IBS.Models.InspectionCertModel

@{
    ViewData["Title"] = "Inspection Certificate";
}
<div class="list-inner">
    <div class="tast-list">
        <h2>Inspection Certificate</h2>
    </div>
</div>

<div class="task-listinput" id="tab-1">
    <form role="form" asp-controller="InspectionCert" asp-action="InspectionDetails" id="frmDetails">
        <input type="hidden" asp-for="Caseno" />
        <input type="hidden" asp-for="Callrecvdt" />
        <input type="hidden" asp-for="Callsno" />
        <input type="hidden" asp-for="SelectRadio" />
        <input type="hidden" asp-for="ActionType" />
        <input type="hidden" asp-for="Au" />
        <input type="hidden" asp-for="Bpo" />
        <input type="hidden" asp-for="IeCd" />
        <input type="hidden" asp-for="ItemSrnoPo" />

        <input type="hidden" asp-for="City" />
        <input type="hidden" asp-for="State" />
        <input type="hidden" asp-for="Pincode" />
        <input type="hidden" asp-for="BpoType" />
        <input type="hidden" asp-for="BillNo" />
        <input type="hidden" asp-for="chkABill" />
        <input type="hidden" asp-for="Callstatus" />
        <input type="hidden" asp-for="CallCancelCharges" />

        <input type="hidden" name="hdnUploadedDocumentList_tab-1" id="hdnUploadedDocumentList_tab-1" value="" />

        <div class="boxRadius highlightBox">
            <table class="borderTable">
                <tr>
                    <td class="w-25">
                        <label for="Reference">Case No. : </label>
                    </td>
                    <td class="w-25">
                        <b><span id="lblCaseNo"></span></b>
                        <label class="normalText">@Model.Caseno</label>
                    </td>
                    <td class="w-25"><label for="Reference">Call Date - SNo. : </label></td>
                    <td class="w-25"><label class="normalText">@Convert.ToDateTime(@Model.Callrecvdt).ToString("dd/MM/yyyy") - @Model.Callsno </label></td>
                </tr>
                <tr>
                    <td><label for="Reference">Stock/Non Stock : </label></td>
                    <td><label class="normalText">@Model.StockNonstock</label></td>
                    <td><label for="Reference">Inspecting Er. : </label></td>
                    <td><label class="normalText">@Model.IeName</label></td>
                </tr>
                <tr>
                    <td><label for="Reference">Contract No. : </b></label></td>
                    <td>
                        <b><span id="lblCaseNo" class="darkRedBoldText"></span></b>
                        <label class="lineBreak normalText">@Model.PoNo</label>
                    </td>
                    <td>
                        <label for="Reference">Date : </label>
                    </td>
                    <td> <label class="normalText">@Convert.ToDateTime(@Model.PoDt).ToString("dd/MM/yyyy")</label></td>
                </tr>
                <tr>
                    <td><label for="Reference">PO Source : </label></td>
                    <td><label class="normalText">@Model.PoSource</label></td>
                    <td><label for="Reference">Vendor : </label></td>
                    <td>
                        <b><span id="lblCaseNo" class="darkRedBoldText"></span></b>
                        <label class="normalText">@Model.VendName</label>
                    </td>
                </tr>
                <tr>
                    <td><label for="Reference">Name & Address of the party in whose favour invoice is to be raised : </label></td>
                    <td>
                        <b><span id="lblCaseNo" class="darkRedBoldText"></span></b>
                        <label class="normalText">@Model.BPOCall</label>
                    </td>
                    <td><label for="Reference">GSTIN No. of the party in whose favour invoice is to be raised : </label></td>
                    <td><label class="normalText">@Model.GSTINCall</label></td>
                </tr>
                <tr>
                    <td><label for="Reference" id="lblIrfcBpo">IRFC BPO : </label></td>
                    <td>
                        @Html.DropDownListFor(model => model.IrfcBpo, new SelectList(IBS.Models.Common.GetBPOList(), "Value", "Text"), "--Select--")
                    </td>
                    <td><label for="Reference">IRFC Funded : </label></td>
                    <td>
                        <span id="lblCaseNo"></span>
                        @Html.DropDownListFor(model => model.IrfcFunded, new SelectList(IBS.Models.Common.OnlineCallStatus(), "Value", "Text"))
                    </td>
                </tr>
                @if (Model.BillNo != null)
                {
                    <tr>
                        <td><label for="Reference" id="lblIrfcBpo">Bill No : </label></td>
                        <td>
                            <b><span class="darkRedBoldText"></span></b>
                            <label class="normalText">@Model.BillNo</label>
                        </td>
                        <td><label for="Reference" id="lblIrfcBpo">Material Value : </label></td>
                        <td>
                            <b><span class="darkRedBoldText"></span></b>
                            <label class="normalText">@Model.TMValue</label>
                        </td>
                    </tr>
                    <tr>
                        <td><label for="Reference">Insp Fee : </label></td>
                        <td>
                            <b><span id="lblCaseNo" class="darkRedBoldText"></span></b>
                            <label class="normalText">@Model.TIFee</label>
                        </td>
                        <td><label for="Reference">Net Fee : </label></td>
                        <td>
                            <b><span id="lblCaseNo" class="darkRedBoldText"></span></b>
                            <label class="normalText">@Model.NetFee</label>
                        </td>
                    </tr>

                    <tr>
                        @if (Model.InvoiceNo != null)
                        {
                            <td><label for="Reference">Invoice No. : </label></td>
                            <td>
                                <b><span id="lblCaseNo" class="darkRedBoldText"></span></b>
                                <label class="normalText">@Model.InvoiceNo</label>
                            </td>
                        }
                        @if (Model.ActionType == "A")
                        {
                            <td><label for="Reference">Advance : </label></td>
                            <td>
                                <b><span id="lblCaseNo" class="darkRedBoldText"></span></b>
                                <label class="normalText">@Model.AdvBill</label>
                            </td>
                        }
                    </tr>
                }
            </table>
        </div>

        <div class="accordion-body">
            <div class="row">
                <div class="col-md-12">
                    <div class="reference">
                        @*<h3 class="heading3">Consignee</h3>*@
                        <label for="Reference">Consignee</label>
                    </div>
                </div>
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.Consignee, new SelectList(IBS.Models.Common.GetConsignee(Model.Caseno), "Value", "Text"))
                </div>
            </div>
            <div class="row my-0">
                <div class="col-md-12">
                    <div class="reference">
                        @*<h3 class="heading3">Recipient GSTIN No.</h3>*@
                        <label for="Reference">Recipient GSTIN No.</label>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="custom-readio">
                        <div class="company-checkbox">
                            <div class="remember">
                                <div class="remecheckbox">
                                    <ul class="radioListForm">
                                        <li>
                                            <input type="radio" asp-for="ConsigneeGST" value="rdbConsignee" id="ConsigneeGST_Y" onchange="ConsigneeGSTChanged();" />
                                            <label for="ConsigneeGST_Y">Consignee GSTIN</label>
                                        </li>
                                        <li>
                                            <input type="radio" asp-for="ConsigneeGST" value="rdbBPO" id="ConsigneeGST_N" onchange="ConsigneeGSTChanged();" />
                                            <label for="ConsigneeGST_N">BPO GSTIN</label>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="reference">
                        <label for="Reference">GSTIN No. <span class="text-danger">*</span></label>
                        <input type="text" class="input" asp-for="GstinNo" maxlength="30" readonly>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="reference">
                        <label for="Reference">Legal Name</label>
                        <input type="text" class="input" asp-for="LegalName" maxlength="100" style="text-transform: uppercase;">
                        <span id="lblCity" style="color:#d52127;"></span>
                        <span id="lblState" style="color:#d52127;"></span>
                        <span id="lblPincode" style="color:#d52127;"></span>
                        @*<span style="color:#d52127;" class="note">@Model.City @Model.State @Model.Pincode</span>*@
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="reference btnAlign">
                        @*<label for="Reference">GSTIN No. & Legal Name</label>*@
                        <div class="savenext-btn">
                            <button type="button" class="save-btn active" id="btnGSTNUpdate" onclick="GSTNUpdate();">GSTIN No. & Legal Name Update</button>
                        </div>

                    </div>
                </div>
            </div>

            <div class="row my-0">
                <div class="col-md-4 mb-3">
                    <div class="reference">
                        <label for="Reference">IC Type</label>
                        @Html.DropDownListFor(model => model.IcTypeId, new SelectList(IBS.Models.Common.GetICType(), "Value", "Text"), "--Select--")
                    </div>
                </div>
                <div class="col-md-4 mb-3 divCnoteBill" style="display:none;">
                    <div class="reference">
                        <label for="BillNo">Bill No. for which Credit Note is biegn prepared <span class="text-danger">*</span></label>
                        <input type="text" class="input" asp-for="CnoteBillNo" maxlength="100" style="text-transform: uppercase;" onchange="OnBillNoChanged()">
                        <span id="spnBillNo" class="darkRedBoldText"></span>
                    </div>
                </div>
                <div class="col-md-4 mb-3 divCnoteBill" style="display:none;">
                    <div class="reference">
                        <label for="Reference"><br /></label>
                        <div class="savenext-btn">
                            <button type="button" class="save-btn active" id="btnBillVerify">Verify</button>
                        </div>
                    </div>
                </div>

            </div>

            <div class="row my-0">
                <div class="col-md-1 mb-3">
                    <label for="Reference btnAlign">AU Code : </label>
                    <input type="text" class="input" asp-for="Au" maxlength="100" style="text-transform: uppercase;color:#d52127;" readonly>
                    @*<label class="darkRedBoldText">@Model.Au</label>*@
                </div>
                <div class="col-md-11 mb-3">
                    <label for="Reference btnAlign">Bill Paying Officer : </label>
                    <input type="text" class="input" asp-for="BpoName" maxlength="100" style="text-transform: uppercase;color:#d52127;" readonly>
                    @*<label class="darkRedBoldText">@Model.BpoName</label>*@
                </div>
            </div>

            <div class="row my-0">
                @if (@Model.Callstatus != "C")
                {
                    <div class="col-md-4 mb-3 CallRejCan">
                        <div class="reference">
                            <label for="Bkno">Book No. <span class="text-danger">*</span></label>
                            <input type="text" class="input" asp-for="Bkno" maxlength="4" style="text-transform: uppercase;">
                        </div>
                    </div>
                    <div class="col-md-4 mb-3 CallRejCan">
                        <div class="reference">
                            <label for="Setno">Set No. <span class="text-danger">*</span></label>
                            <input type="text" class="input" asp-for="Setno" maxlength="3" style="text-transform: uppercase;">
                        </div>
                    </div>
                }

                <div class="col-md-4 mb-3">
                    <div class="reference">
                        <label for="Reference">Cert No.</label>
                        <input type="text" class="input" asp-for="CertNo" maxlength="100" style="text-transform: uppercase;">
                    </div>
                </div>

                <div class="col-md-4 mb-3">
                    <div class="reference">
                        <label for="Reference">Cert Date (DD/MM/YYYY)</label>
                        <input type="text" class="datepicker" asp-for="CertDt" maxlength="100" style="text-transform: uppercase;" placeholder="DD/MM/YYYY">
                    </div>
                </div>
                <div class="col-md-4 mb-3 CallRejCan">
                    <div class="reference">
                        <label for="Reference">Install No</label>
                        <input type="text" class="input" asp-for="CallInstallNo" maxlength="100" style="text-transform: uppercase;">
                    </div>
                </div>
                <div class="col-md-4 mb-3 CallRejCan">
                    <div class="reference">
                        <label for="Reference">Install Part</label>
                        @Html.DropDownListFor(model => model.FullPart, new SelectList(IBS.Models.Common.GetFPart(), "Value", "Text"), "--Select--")
                    </div>
                </div>
            </div>

            <div class="row my-0">
                <div class="col-md-4 mb-3 CallRejCan">
                    <div class="reference">
                        <label for="Reference">No. of Visits</label>
                        <input type="text" class="input" asp-for="NoOfInsp" maxlength="100" style="text-transform: uppercase;">
                    </div>
                </div>
                <div class="col-md-4 mb-3 CallRejCan">
                    <div class="reference">
                        <label for="Reference"><a onclick="lnkbtnMRDT();" title="Click here to refresh Call / Material Rediness Date from [Call Registration] Form">Call/Material Readiness Date</a></label>
                        @if (@Model.ActionType == "A")
                        {
                            <input type="text" class="datepicker" asp-for="DtInspDesire" maxlength="100" style="text-transform: uppercase;" placeholder="DD/MM/YYYY">
                        }
                        else
                        {
                            <input type="text" class="datepicker" asp-for="CallDt" maxlength="100" style="text-transform: uppercase;" placeholder="DD/MM/YYYY">
                        }

                    </div>
                </div>
                <div class="col-md-4 mb-3 CallRejCan">
                    <div class="reference">
                        <label for="FirstInspDt">First Insp Date(dd/mm/yyyy) <span class="text-danger">*</span></label>
                        <input type="text" class="datepicker" asp-for="FirstInspDt" maxlength="100" style="text-transform: uppercase;" placeholder="DD/MM/YYYY">
                        @*<span asp-validation-for="FirstInspDt" class="text-danger" id="spnFirstInspDt"></span>*@
                    </div>
                </div>
            </div>
            <div class="row my-0">
                <div class="col-md-4 mb-3 CallRejCan">
                    <div class="reference">
                        <label for="LastInspDt">Last Insp Date(dd/mm/yyyy) <span class="text-danger">*</span></label>
                        <input type="text" class="datepicker" asp-for="LastInspDt" maxlength="100" style="text-transform: uppercase;" placeholder="DD/MM/YYYY">
                        @*<span asp-validation-for="LastInspDt" class="text-danger" id="spnLastInspDt"></span>*@
                    </div>
                </div>
                <div class="col-md-4 mb-3 CallRejCan">
                    <div class="reference">
                        <label for="Reference">Other Insp Dates</label>
                        <input type="text" class="input" asp-for="OtherInspDt" maxlength="100">
                    </div>
                </div>
                <div class="col-md-4 mb-3 CallRejCan">
                    <div class="reference">
                        <label for="Reference">IC Submit Date</label>
                        <input type="text" class="datepicker" asp-for="ICSubmitDt" maxlength="100" style="text-transform: uppercase;" placeholder="DD/MM/YYYY">
                    </div>
                </div>
            </div>
            <div class="row my-0">
                <div class="col-md-4 mb-3 CallRejCan">
                    <div class="reference">
                        <label for="Reference">Sealing Pattern</label>
                        @Html.DropDownListFor(model => model.StampPatternCd, new SelectList(IBS.Models.Common.GetSealing(), "Value", "Text"), "--Select--")
                        <textarea class="input" asp-for="StampPattern" style="text-transform: uppercase;display:none;"></textarea>
                    </div>
                </div>
                <div class="col-md-4 mb-3 CallRejCan">
                    <div class="reference">
                        <label for="Reference">Photo Attached</label>
                        @Html.DropDownListFor(model => model.Photo, new SelectList(IBS.Models.Common.OnlineCallStatus(), "Value", "Text"), "--Select--")
                    </div>
                </div>
            </div>

            @if (Model.Callstatus == "R")
            {
                <div class="row my-0">
                    <div class="col-md-8 mb-3">
                        <div class="reference">
                            <label for="Reference">Reasons for Rejection</label>
                            <textarea class="input" asp-for="ReasonReject"></textarea>
                        </div>
                    </div>
                </div>
            }


            <div class="savenext-btn center CallRejCan">
                @if (@Model.STS != "X")
                {
                    <button type="button" class="save-btn active" id="btnSave">Save</button>
                    <button type="button" class="save-btn active" id="btnDelete" style="display:none;">Delete</button>
                }
                <a asp-controller="InspectionCert" asp-action="Index" class="reset-btn">Cancel</a>
            </div>
        </div>
        <div class="alert alert-warning center dtList">
            BILL ITEM DETAILS
        </div>
        <div id="divgrid" class="dtList">
            <section class="table-section">
                <div class="task-listinput">
                    <div class="dash-table">
                        <table id="dtList" class="table-responsive nowrap">
                            <thead>
                                <tr>
                                    <th>Action</th>
                                    <th>Item SNo.</th>
                                    <th>Item Desc</th>
                                    <th>UOM</th>
                                    <th>Qty. Ord</th>
                                    <th>Cumm Qty off Prev</th>
                                    <th>Qty Prev Passed</th>
                                    <th>Qty Off Now</th>
                                    <th>Qty Passed</th>
                                    <th>Qty Rejected</th>
                                    <th>Qty Due</th>
                                    <th>Rate</th>
                                    <th>Sales Tax(%)</th>
                                    <th>Sales Tax</th>
                                    <th>Excise (%)</th>
                                    <th>Excise</th>
                                    <th>Discount (%)</th>
                                    <th>Discount</th>
                                    <th>Other Charges</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </section>
        </div>

        <div class="alert alert-warning center dtListC" style="display:none;">
            CANCELLATION BILL DETAILS
        </div>

        <div class="accordion-body dtListC">
            <div class="row my-0">
                <div class="col-md-4 mb-3">
                    <div class="reference">
                        <label for="Reference">Call Cancellation Type</label>
                        @Html.DropDownListFor(model => model.CallCancelStatus, new SelectList(IBS.Models.Common.CallCancelStatus(), "Value", "Text"), "--Select--")
                    </div>
                </div>
                <div class="col-md-4 mb-3">
                    <div class="reference">
                        <label for="Reference">Material Value </label>
                        <input type="text" class="input" asp-for="CallCancelAmount" readonly>
                    </div>
                </div>
                <div class="col-md-4 mb-3">
                    <div class="reference">
                        <label for="Reference">Cancellation Changes </label>
                        <input type="text" class="input" asp-for="CallCancelCharges" readonly>
                    </div>
                </div>
            </div>
        </div>

        <div class="alert alert-warning center dtListRej" style="display:none;">
            REJECTION BILL DETAILS
        </div>

        <div class="accordion-body dtListRej">
            <div class="row my-0">
                <div class="col-md-4 mb-3">
                    <div class="reference">
                        <label for="Reference">Local or Outstation</label>
                        @Html.DropDownListFor(model => model.LocalOutstation, new SelectList(IBS.Models.Common.RejectionType(), "Value", "Text"), "--Select--")
                    </div>
                </div>
                <div class="col-md-4 mb-3">
                    <div class="reference">
                        <label for="Reference">Rejection Charges (Exclusive of Taxes) </label>
                        <input type="text" class="input" asp-for="RejectionCharge" readonly>
                    </div>
                </div>
                <div class="col-md-4 mb-3">
                    <div class="reference">
                        <label for="Reference">Material Value </label>
                        <input type="text" class="input" asp-for="RejectMaterialValue" readonly>
                    </div>
                </div>
            </div>
        </div>

        <div class="alert alert-warning center">
            BILL GENERATION  <span style="color:#d52127;">(Don't use this option for Mulitiple IC - One Bill generation)</span>
        </div>
        <div class="accordion-body">
            <div class="row my-0">
                <div class="col-md-4 mb-3">
                    <div class="reference">
                        <label for="Reference">Bill Date <span style="color:#d52127;">*</span></label>
                        <input type="text" class="datepicker" asp-for="BillDt" maxlength="100" style="text-transform: uppercase;" placeholder="DD/MM/YYYY">
                        <span id="spnBillDt" style="color:#d52127;"></span>
                    </div>
                </div>
                <div class="col-md-4 mb-3" style="display:none;">
                    <div class="reference btnAlign">
                        @*<label for="Reference" id="lblBillDtUpdate">Bill Date</label>*@
                        <div class="savenext-btn">
                            <button type="button" class="save-btn active" id="btnBillDtUpdate">Bill Date Update</button>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 mb-3 CallRejCan">
                    <div class="reference">
                        <label for="Reference">Min Fee Payble (if any) </label>
                        <input type="text" class="input" asp-for="MinFee" maxlength="100" style="text-transform: uppercase;" onkeypress="return isNumber(event)">
                        <span id="spnMinFee" style="color:#d52127;"></span>
                    </div>
                </div>
                <div class="col-md-4 mb-3 CallRejCan">
                    <div class="reference">
                        <label for="Reference">Max Fee Allowed (if any) </label>
                        <input type="text" class="input" asp-for="MaxFee" maxlength="100" style="text-transform: uppercase;" onkeypress="return isNumber(event)">
                        <span id="spnMaxFee" style="color:#d52127;"></span>
                    </div>
                </div>
            </div>
            <div class="row my-0">

                <div class="col-md-4 mb-3 RlyBpoFee" style="display:none;">
                    <div class="reference">
                        <label for="Reference">Rly BPO Fee <span style="color:#d52127;">*</span></label>
                        @Html.DropDownListFor(model => model.RlyBpoFee, new SelectList(IBS.Models.Common.RlyBPOFee(), "Value", "Text"))
                        <span id="spnRlyBpoFee" style="color:#d52127;"></span>
                    </div>
                </div>
                <div class="col-md-4 mb-3 BpoFee" style="display:none;">
                    <div class="reference">
                        <label for="Reference">FEE <span style="color:#d52127;">*</span></label>
                        <input type="text" class="input" asp-for="BpoFee" maxlength="100" style="text-transform: uppercase;">
                        <span id="spnBpoFee" style="color:#d52127;"></span>
                    </div>
                </div>
                @*@if (Model.BpoType == "R" && Model.BpoFeeType == "P" && Model.IcTypeId == 1)
                {
                <div class="col-md-4 mb-3 RlyBpoFee">
                <div class="reference">
                <label for="Reference">Rly BPO Fee</label>
                @Html.DropDownListFor(model => model.RlyBpoFee, new SelectList(IBS.Models.Common.RlyBPOFee() , "Value", "Text"))
                </div>
                </div>
                }
                else
                {
                <div class="col-md-4 mb-3 BpoFee">
                <div class="reference">
                <label for="Reference">FEE</label>
                <input type="text" class="input" asp-for="BpoFee" maxlength="100" style="text-transform: uppercase;">
                </div>
                </div>
                }*@
                <div class="col-md-4 mb-3">
                    <div class="reference">
                        <label for="Reference">FEE Type <span style="color:#d52127;">*</span></label>
                        @Html.DropDownListFor(model => model.BpoFeeType, new SelectList(IBS.Models.Common.GetFeeType(), "Value", "Text"), "--Select--", new { @class = "", onChange = "onBpoFeeType()" })
                        <span id="spnBpoFeeType" style="color:#d52127;"></span>
                    </div>
                </div>
                @if (@Convert.ToInt32(Convert.ToDateTime(@Model.CertDt).ToString("yyyyMMdd")) >= @Convert.ToInt32(20170701))
                {
                    <div class="col-md-4 mb-3">
                        <div class="reference">
                            <label for="Reference">TAX GST Type <span style="color:#d52127;">*</span></label>
                            @Html.DropDownListFor(model => model.TaxType, new SelectList(IBS.Models.Common.GetTaxType_GST(), "Value", "Text"), "--Select--")
                            <span id="spnTaxType" style="color:#d52127;"></span>
                        </div>
                    </div>
                }
                else
                {
                    <div class="col-md-4 mb-3">
                        <div class="reference">
                            <label for="Reference">TAX Type <span style="color:#d52127;">*</span></label>
                            @Html.DropDownListFor(model => model.BpoTaxType, new SelectList(IBS.Models.Common.GetTAXType(), "Value", "Text"), "--Select--")
                            <span id="spnBpoTaxType" style="color:#d52127;"></span>
                        </div>
                    </div>
                }
            </div>

            <div class="row my-0">
                <div class="col-md-1 mb-3">
                    <div class="reference">
                        <label for="Reference">BPO.</label>
                        <input type="text" class="input" asp-for="BpoCd" maxlength="100" style="text-transform: uppercase;" readonly>
                    </div>
                </div>
                <div class="col-md-11 mb-3">
                    <div class="reference">
                        <label for="Reference"><span style="color:#d52127;">Only For Display in Invoice</span></label>
                        @Html.DropDownListFor(model => model.Bpo, new SelectList(IBS.Models.Common.GetBPOList(Model.BpoCd), "Value", "Text"))
                    </div>
                </div>

            </div>

            <div class="row my-0">
                <div class="col-md-3 mb-3">
                    <div class="reference">
                        <label for="Reference">Cancellation OR Rejection Fee Bills</label>
                        @Html.DropDownListFor(model => model.CanOrRejctionFee, new SelectList(IBS.Models.Common.OnlineCallStatus(), "Value", "Text"))
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <div class="reference">
                        <label for="Reference">Remarks (if any) </label>
                        <textarea class="input" asp-for="Remarks"></textarea>
                        @* <span id="spnRemarks" style="color:#d52127;"></span> *@
                    </div>
                </div>
                <div class="col-md-3 mb-3 CallRejCan">
                    <div class="reference btnAlign">
                        <div class="custom-control custom-checkbox" id="OuterDivOrBody">
                            <label class="custom-checkbox">
                                @*<input type="checkbox" class="custom-control-input" id="chkABill" asp-for="chkABill" />*@
                                @if (Model.AdvBill == "A")
                                {
                                    <input type="checkbox" id="chkABill" name="chkABill" asp-for="chkABill" checked />
                                }
                                else
                                {
                                    <input type="checkbox" id="chkABill" name="chkABill" asp-for="chkABill" />
                                }
                                Advance Bill

                            </label>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row my-0">
                <div class="col-lg-6">
                    <div class="alert alert-info UploadDoc mb-0">
                        <div class="row">
                            <div class="col-md-12">
                                <span style="color:#d52127;">
                                    Upload a scanned copy of Invoice Supporting Documents in "PDF" format from here. Scanned copy should be in Black & White and Low DPI.
                                </span>
                            </div>
                        </div>
                        <div class="row my-0">
                            <div class="col-md-12">
                                <partial name="_FileUploader" model="(IBS.Models.FileUploaderDTO)ViewBag.ICDocument" />
                            </div>
                            <div class="col-md-12">
                                <div class="savenext-btn">
                                    <button type="button" class="save-btn active" id="btnUpload" onclick="UploadDocument()">Upload Invoice Supporting Docs</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">

                    <div class="row center my-0 btnGbill">
                        <div class="col-md-12">
                            <div class="alert alert-warning">
                                <span style="color:#d52127;">* Enter Fee Details Before Generating Bill !!!</span>
                                <div>
                                    @if (@Model.STS != "X")
                                    {
                                        <button type="button" class="commonBtn" id="btnGBill" ToolTip="Please Save the Inspection Certificate and Edit Items Qty Passed, Rejected and Due before Generating the Bill!!!">Generate Bill</button>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row my-0 center">

                        <div class="col-md-12">
                            <div class="alert alert-warning mb-0">
                                <span style="color:#d52127;">
                                    * Enter Remarks (If Any) before clicking "Return Bills to Railways" button, these Remarks will be saved in IBS & sent to Railways in Returned Bill.
                                </span>
                                <div class="center">

                                    <button type="button" class="commonBtn" id="btnReturnBill">Return Bills to Railways</button>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>

            @if (Model.BillNo != null)
            {
                <div class="row my-0 center lblBillDt">
                    <div class="col-md-12 mb-3">
                        <label>Bill Date : @Convert.ToDateTime(@Model.BillDt).ToString("dd/MM/yyyy")</label>
                    </div>
                </div>
            }
        </div>

    </form>
</div>

<div id="EditCallDetailsModal" class="modal" tabindex="-1" role="dialog">
</div>

<div id="PopUp" class="modal" tabindex="-1" role="dialog" >
</div>


@section scripts {
    <partial name="_DataTablesScriptsPartial" />
    <partial name="_ValidationScriptsPartial" />
    <script type="text/javascript">
        $(document).ready(function () {
            $("#DtInspDesire").datepicker({ minDate: -1, maxDate: -2 }).attr('readonly', 'readonly');
            $("#CallDt").datepicker({ minDate: -1, maxDate: -2 }).attr('readonly', 'readonly');
            $("#ICSubmitDt").datepicker({ minDate: -1, maxDate: -2 }).attr('readonly', 'readonly');
            
            $('#OuterDivOrBody').delegate('#chkABill', 'change', function () {
                if (this.checked) {
                    $("#chkABill").val('A');
                }
                else {
                    $("#chkABill").val('X');
                }
            });
            if ($("#BpoType").val() == "R" && $("#BpoFeeType").val() == "P" && $("#IcTypeId").val() == 1) {
                $(".RlyBpoFee").show();
                $(".BpoFee").hide();
            }
            else {
                $(".RlyBpoFee").hide();
                $(".BpoFee").show();
            }

            var GSTNo = $("#GstinNo").val();
            if (GSTNo == "") {
                $('#GstinNo').prop('readonly', false);
                $("#btnGSTNUpdate").show();
            }
            if (GSTNo != "" || GSTNo != "X") {
                $("#ConsigneeGST_N").prop("checked", true);
            }
            if ($("#IrfcFunded").val() == "N") {
                $("#IrfcBpo").hide();
                $("#lblIrfcBpo").hide();
                $("#ConsigneeGST_Y").prop("checked", true);
                // $("input[name='ConsigneeGST']").prop('disabled', true);
            }
            else {
                $("#IrfcBpo").show();
                $("#lblIrfcBpo").show();
                $("input[name='ConsigneeGST']").prop('disabled', true);
            }
            if ($("#STS").val() != "X") {
                //$("#btnGBill").text("Update Bill");
                if ($("#BillNo").val() != "")
                    $("#btnGBill").text("Update Bill");
            }

            ConsigneeGSTChanged();
            $('input[type=radio][name=ConsigneeGST]').change();

            if ($("#BillDt").val() != "") {
                $("#btnBillDtUpdate").show();
            }

            if ($("#IcTypeId").val() == "9") {
                $(".divCnoteBill").show();
                if ($("#CnoteBillNo").val() != null) {
                    $("#IcTypeId").prop('disabled', true);
                    $("#CnoteBillNo").prop('disabled', true);
                    $("#btnBillVerify").hide();
                }
                else {
                    $("#IcTypeId").prop('disabled', false);
                    $("#CnoteBillNo").prop('disabled', false);
                    $("#btnBillVerify").show();
                }
            }

            $("#IcTypeId").change(function () {
                if ($("#IcTypeId").val() == "9") {
                    $(".divCnoteBill").show();
                }
                else {
                    $(".divCnoteBill").hide();
                }
            });

            const urlParams = new URLSearchParams(window.location.search);
            const actiontype = urlParams.get('ActionType');
            
            $("#ActionType").val(actiontype);
            if (actiontype == "A") {
                $("#IcTypeId").val("1");

                if ($("#Callstatus").val() == "C" || $("#Callstatus").val() == "CB") {
                    $("#btnGBill").show();
                    $(".UploadDoc").show();
                }
                else if ($("#Callstatus").val() == "R" || $("#Callstatus").val() == "RB") {
                    $("#LocalOutstation").prop('disabled', true);
                    $("#btnGBill").show();
                    $(".UploadDoc").show();
                }
                else {
                    $("#btnGBill").hide();
                    $(".UploadDoc").hide();
                }
                $(".lblBillDt").hide();
                $("#IrfcBpo").hide();
                $("#lblIrfcBpo").hide();
                $("#lblBillDtUpdate").hide();
                $("#btnBillDtUpdate").hide();

                if ($("#IrfcFunded").val() == "Y") {

                    $("#IrfcBpo").show();
                    $("#lblIrfcBpo").show();
                }

            }
            if (actiontype == "M") {
                // $('input[type=radio][name=ConsigneeGST]').change();
                
                if ($("#SelectRadio").val() == "rdbBPO") {
                    $("#ConsigneeGST_N").prop("checked", true);
                }
                else
                {
                    $("#ConsigneeGST_Y").prop("checked", true);
                }

                $("#IcTypeId").prop('disabled', false);
                InitializeDatatable();

                if ($("#BillNo").val() == "") {
                    $("#BillNo").text("Generate Bill");
                }
                else {
                    $("#BillNo").text("Update Bill");
                    ShowHideMsgNew(true, "The bill has been generated for this IC Vide Bill No : " + $("#BillNo").val());
                }
                // $("#btnSave").hide();
            }
            if (actiontype == "D") {
                $("#btnDelete").show();
                $("#btnSave").hide();
            }

            if ($("#Callstatus").val() == "C" || $("#Callstatus").val() == "CB") {
                $(".dtList").hide();
                $(".dtListC").show();
                $(".CallRejCan").hide();
                $(".dtListRej").hide();

                $("#CallCancelStatus").prop('disabled', true);
                $("#BpoFee").val($("#CallCancelCharges").val());
                if ($("#CallCancelStatus").val() == "N") {
                    $("#CallCancelAmount").val("0");
                    $("#CallCancelCharges").val("0");
                    $("#BpoFee").val("0");
                }
                if($("#Callstatus").val() == "CB")
                {
                    $(".btnGbill").hide();
                }

                $("#IcTypeId").val(6);
                $("#IcTypeId").prop('disabled', true);
                $("#CanOrRejctionFee").val("Y");
                $("#CanOrRejctionFee").prop('disabled', true);
                $("#BpoFeeType").val("L");
                $("#BpoFeeType").prop('disabled', true);

            }
            else if ($("#Callstatus").val() == "R" || $("#Callstatus").val() == "RB") {
                RejectionMatrialValue();
                $("#IcTypeId").val(2);
                $("#IcTypeId").prop('disabled', true);

                $(".dtList").hide();
                $(".dtListC").hide();
                $(".dtListRej").show();
                
                $(".CallRejCan").hide();
                $("#CanOrRejctionFee").val("Y");
                $("#CanOrRejctionFee").prop('disabled', true);
                $("#BpoFeeType").val("L");
                $("#BpoFeeType").prop('disabled', true);
                if ($("#Callstatus").val() == "RB") {
                    $(".btnGbill").hide();
                }
                $("#BpoFee").val($("#RejectionCharge").val());
                $("#LocalOutstation").prop('disabled', true);
            }
            else {
                $(".dtList").show();
                $(".dtListC").hide();
                $(".CallRejCan").show();
                $(".dtListRej").hide();
                $("#CanOrRejctionFee").val("N");
                $("#CanOrRejctionFee").prop('disabled', false);
                $("#BpoFeeType").prop('disabled', false);
            }

        });

        function RejectionMatrialValue() {
            var selectedValue = $('#LocalOutstation').val();
            var CaseNo = $("#Caseno").val();
            var DesireDt = $("#Callrecvdt").val();
            var CallSno = $("#Callsno").val();
            $.ajax({
                url: '@Url.Action("LocalOutstation", "InspectionCert")',
                type: 'GET',
                data: { selectedValue: selectedValue, CaseNo: CaseNo, CallSno: CallSno, DesireDt: DesireDt },
                success: function (data) {
                    $('#RejectMaterialValue').val(data.RejectMaterialValue);
                },
            });
        }

        $("#StampPatternCd").change(function () {
            if ($("#StampPatternCd").val() == "O") {
                $("#StampPattern").show();
            }
            else {
                $("#StampPattern").hide();
            }
        });

        $("#IrfcBpo").change(function () {
            $('input[type=radio][name=ConsigneeGST]').change();
        });

        $("#IrfcFunded").change(function () {
            if ($("#IrfcFunded").val() == "Y") {
                $("#IrfcBpo").show();
                $("#lblIrfcBpo").show();
                $("input[name='ConsigneeGST']").prop('disabled', true);
                $("#btnGSTNUpdate").prop('disabled', false);
                $("#ConsigneeGST_Y").prop("checked", false);
                $("#ConsigneeGST_N").prop("checked", false);
            }
            else {
                $("#IrfcBpo").hide();
                $("#lblIrfcBpo").hide();
                $("input[name='ConsigneeGST']").prop('disabled', false);
                $("#btnGSTNUpdate").prop('disabled', true);
                $("#ConsigneeGST_Y").val("rdbConsignee");
                // $("#ConsigneeGST_Y").prop("checked", true);
                ConsigneeGSTChanged();
                $('input[type=radio][name=ConsigneeGST]').change();
            }
        });

        $("#BpoCd").change(function () {
            var BpoCd = $("#BpoCd").val();
            $.ajax({
                url: '@Url.Action("GetBPOList", "InspectionCert")',
                type: "GET",
                dataType: "JSON",
                data: { "BpoCd": BpoCd },
                success: function (contacts) {
                    $("#Bpo").html(""); // clear before appending new list
                    if (contacts && contacts.length > 0) {
                        if (Bpo > 0) {
                            $.each(contacts, function (i, cnt) {
                                $("#Bpo").append($('<option></option>').val(cnt.Value).html(cnt.Text));
                            });
                            $("#Bpo").val(Bpo);
                        } else {
                            $.each(contacts, function (i, cnt) {
                                $("#Bpo").append($('<option></option>').val(cnt.Value).html(cnt.Text));
                            });
                        }
                    }
                }
            });
        });

        function StateWiseGST(StateCode) {
            $.ajax({
                url: '@Url.Action("GetTaxTypeList", "InspectionCert")',
                type: "GET",
                dataType: "JSON",
                data: { "StateCode": StateCode },
                success: function (contacts) {
                    $("#TaxType").html("");
                    if (contacts && contacts.length > 0) {
                        if (TaxType > 0) {
                            $.each(contacts, function (i, cnt) {
                                $("#TaxType").append($('<option></option>').val(cnt.Value).html(cnt.Text));
                            });
                            $("#TaxType").val(Bpo);
                        } else {
                            $.each(contacts, function (i, cnt) {
                                $("#TaxType").append($('<option></option>').val(cnt.Value).html(cnt.Text));
                            });
                        }
                    }
                }
            });
        }

        function GSTNUpdate() {
            var ConsigneeGST = $("input[name='ConsigneeGST']:checked").val();
            $("#SelectRadio").val(ConsigneeGST);
            var GstinNo = $("#GstinNo").val();
            var LegalName = $("#LegalName").val();
            if (GstinNo == "" || GstinNo == null) {
                ShowHideMsgNew(false, "Please add Gstin No");
                return;
            }
            if (LegalName == "" || LegalName == null) {
                ShowHideMsgNew(false, "Please add Legal Name");
                return;
            }
            var formData = new FormData($("#frmDetails")[0]);
            $.ajax({
                url: '@Url.Action("UpdateGST", "InspectionCert")',
                type: "POST",
                dataType: "JSON",
                data: formData,
                processData: false, // Prevent jQuery from converting the data to a string
                contentType: false,
                success: function (response) {
                    if (response.success) {
                        ShowHideMsgNew(true, "GSTIN NO. & LEGAL NAME HAS BEEN UPDATED!!!");
                    }
                }
            });
        }

        function ConsigneeGSTChanged() {
            $('input[type=radio][name=ConsigneeGST]').change(function () {
                var ConsigneeCd = $("#Consignee").val();

                var checkedValue = $("input[name='ConsigneeGST']:checked").val();
                if ($("#IrfcFunded").val() == "N") {
                    if (checkedValue == 'rdbConsignee') {
                        $.ajax({
                            url: '@Url.Action("GetConsignee", "InspectionCert")',
                            type: "GET",
                            dataType: "JSON",
                            data: { "ConsigneeCd": ConsigneeCd },
                            success: function (contacts) {
                                if (contacts.data && contacts.data.length > 0) {
                                    $("#lblCity").text("City : " + contacts.data[0].City);
                                    $("#lblState").text(",State : " + contacts.data[0].State);
                                    $("#lblPincode").text(",PIN : " + contacts.data[0].Pincode);

                                    $("#GstinNo").val(contacts.data[0].GstinNo);
                                    $("#LegalName").val(contacts.data[0].LegalName);

                                    $('#GstinNo').prop('readonly', true);

                                    $("#City").val(contacts.data[0].City);
                                    $("#State").val(contacts.data[0].State);
                                    $("#Pincode").val(contacts.data[0].Pincode);
                                    StateWiseGST(contacts.data[0].StateID);
                                }
                            }
                        });
                    }
                    else {
                        var BPOCd = $("#BpoCd").val();
                        $.ajax({
                            url: '@Url.Action("GetBPO", "InspectionCert")',
                            type: "GET",
                            dataType: "JSON",
                            data: { "BPOCd": BPOCd },
                            success: function (contacts) {
                                if (contacts.data && contacts.data.length > 0) {
                                    if (contacts.data && contacts.data.length > 0) {

                                        $("#lblCity").text("City : " + contacts.data[0].City);
                                        $("#lblState").text(",State : " + contacts.data[0].State);
                                        $("#lblPincode").text(",PIN : " + contacts.data[0].Pincode);

                                        $("#GstinNo").val(contacts.data[0].GstinNo);
                                        $("#LegalName").val(contacts.data[0].LegalName);

                                        $('#GstinNo').prop('readonly', true);

                                        $("#City").val(contacts.data[0].City);
                                        $("#State").val(contacts.data[0].State);
                                        $("#Pincode").val(contacts.data[0].Pincode);
                                        StateWiseGST(contacts.data[0].StateID);
                                    }
                                }
                            }
                        });

                    }
                }
            });
        }

        function OnBillNoChanged() {
            var BillNo = $("#CnoteBillNo").val();
            var CaseNo = $("#Caseno").val();

            if (BillNo == "" || BillNo == null) {
                ShowHideMsgNew(false, "Please add Bill No");
                return false;
            }

            if (BillNo != "" && CaseNo != null) {
                $.ajax({
                    url: '@Url.Action("GetBillDetails", "InspectionCert")',
                    type: "GET",
                    dataType: "JSON",
                    data: { "BillNo": BillNo },
                    success: function (contacts) {
                        
                        if (contacts.data && contacts.data.length > 0) {
                            var CaseN = contacts.data[0].Caseno;
                            if (CaseNo == CaseN) {
                                ShowHideMsgNew(true, "Valid Bill No.");
                                $("#btnBillVerify").hide();
                                $("#CnoteBillNo").attr("disabled", "disabled");
                            }

                            // if (CaseN == BillNo) {
                            //     ShowHideMsgNew(true, "Valid Bill No.");
                            //     $("#btnBillVerify").hide();
                            //     $("#CnoteBillNo").attr("disabled", "disabled");
                            // }
                            else {
                                $("#CnoteBillNo").val("");
                                ShowHideMsgNew(false, "Invalid Bill No. This Bill No. does not belong to this PO");
                            }
                        }
                        else {
                            $("#CnoteBillNo").val("");
                            ShowHideMsgNew(false, "Invalid Bill No. This Bill No. does not belong to this PO");
                        }
                    }
                });
            }
        }

        $("#btnBillVerify").click(function () {
            var BillNo = $("#BillNo").val();
            var CaseNo = $("#Caseno").val();

            if (BillNo == "" || BillNo == null) {
                ShowHideMsgNew(false, "Please add Bill No");
                return false;
            }

            if (BillNo != "" && CaseNo != null) {
                $.ajax({
                    url: '@Url.Action("GetBillDetails", "InspectionCert")',
                    type: "GET",
                    dataType: "JSON",
                    data: { "BillNo": BillNo },
                    success: function (contacts) {
                        
                        if (contacts.data && contacts.data.length > 0) {
                            var CaseN = contacts.data[0].Caseno;
                            // if (CaseNo == CaseN) {
                            //     ShowHideMsgNew(true, "Valid Bill No.");
                            //     $("#btnBillVerify").hide();
                            // }
                            if (CaseN == $("#CnoteBillNo").val()) {
                                ShowHideMsgNew(true, "Valid Bill No.");
                                $("#btnBillVerify").hide();
                            }
                            else {
                                $("#BillNo").val("");
                                ShowHideMsgNew(false, "Invalid Bill No. This Bill No. does not belong to this PO");
                            }

                        }
                        else {
                            $("#BillNo").val("");
                            ShowHideMsgNew(false, "Invalid Bill No. This Bill No. does not belong to this PO");
                        }
                    }
                });
            }
        });

        $("#btnSave").click(function () {
            var ConsigneeGST = $("input[name='ConsigneeGST']:checked").val();
            $('select').prop('disabled', false);
            $("#SelectRadio").val(ConsigneeGST);
            if ($("#IcTypeId").val() == "9") {
                if ($("#CnoteBillNo").val() == "") {
                    ShowHideMsgNew(false, "Bill No are required.");
                    return;
                }
            }

            if ($("#GstinNo").val() == "") {
                ShowHideMsgNew(false, "Gstin No are required.");
                return;
            }
            if ($("#Callstatus").val() != "C") {

                if ($("#Bkno").val() == "" || $("#Bkno").val() == null) {
                    ShowHideMsgNew(false, "Bk No are required.");
                    return;
                }
                if ($("#Setno").val() == "" || $("#Setno").val() == null) {
                    ShowHideMsgNew(false, "Set No are required.");
                    return;
                }
            }
            if ($("#FirstInspDt").val() == "") {
                ShowHideMsgNew(false, "First Insp Date required.");
                return;
            }
            if ($("#LastInspDt").val() == "") {
                ShowHideMsgNew(false, "Last Insp Date required.");
                return;
            }

            var Caseno = $("#Caseno").val();
            var Callrecvdt = $("#Callrecvdt").val();
            var Callsno = $("#Callsno").val();
            var BkNo = $("#BkNo").val();
            var SetNo = $("#SetNo").val();


            event.preventDefault();
            var formData = $("#frmDetails").serialize();
            $.get("@Url.Action("Validation", "InspectionCert")", formData, function (response) {
                if (response.status) {
                    if (response.responseText != "") {
                        ShowHideMsgNew(false, response.responseText);
                    }
                    else {
                        $.post("@Url.Action("InspectionCertSave", "InspectionCert")", formData, function (response) {
                            ShowHideMsgNew(response.status, response.responseText);
                            if ($("#Callstatus").val() != "C") {
                                if (response.status) {
                                    if (response.BkNo != null && response.SetNo != null) {
                                        var redirectUrl = '@Url.Action("InspectionDetails", "InspectionCert")' + '?CaseNo=' + Caseno + '&CallRecvDt=' + Callrecvdt + '&CallSno=' + Callsno + '&Bkno=' + response.BkNo + '&Setno=' + response.SetNo + '&ActionType=M';
                                        setTimeout(function () {
                                            window.location.href = redirectUrl;
                                        }, 1000);
                                    }

                                }
                            }
                            else {
                                // var FirstInspDt = $("#FirstInspDt").val();
                                // alert(FirstInspDt);
                                var redirectUrl = '@Url.Action("InspectionDetails", "InspectionCert")' + '?CaseNo=' + Caseno + '&CallRecvDt=' + Callrecvdt + '&CallSno=' + Callsno + '&ActionType=M';
                                setTimeout(function () {
                                    window.location.href = redirectUrl;
                                }, 1000);
                            }

                        });
                    }
                }
            });

            //event.preventDefault();
            //var formData = $("#frmDetails").serialize();

            return false;
        });

        $("#btnReturnBill").click(function () {
            if ($("#BillNo").val() == "" || $("#BillNo").val() == null) {
                ShowHideMsgNew(false, "Please add Bill number.");
                return;
            }
            event.preventDefault();
            var formData = $("#frmDetails").serialize();
            $.post("@Url.Action("ReturnBillSubmit", "InspectionCert")", formData, function (response) {
                if (response.status) {
                    if (response.responseText == 'U') {
                        ShowHideMsgNew(true, "Your Record is updated.");
                    }
                    else {
                        ShowHideMsgNew(false, "This bill is not returned from railways.");
                    }
                }
            });
            return false;
        });

        function InitializeDatatable() {
            var Caseno = $("#Caseno").val();
            var Callrecvdt = $("#Callrecvdt").val();
            var Callsno = $("#Callsno").val();
            var Consignee = $("#Consignee").val();
            $("#dtList").DataTable({
                stateSave: false,
                autoWidth: true,
                //scrollX: true,
                scrollCollapse: true,
                processing: true,
                serverSide: true,
                destroy: true,
                paging: true,
                searching: true,
                ajax: {
                    url: "@Url.Action("LoadTableDetails", "InspectionCert")",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: function (d) {
                        var AdditionalValues = {
                            "Caseno": Caseno,
                            "Callrecvdt": Callrecvdt,
                            "Callsno": Callsno,
                            "Consignee": Consignee
                        };
                        d.AdditionalValues = AdditionalValues;
                        return JSON.stringify(d);
                    }
                },
                columns: [
                    {
                        data: null, orderable: false,
                        render: function (data, type, row) {
                            var _ItemSrnoPo = data.ItemSrnoPo;
                            var html = '<div align=\"center\" class=\"reportIcon actionCenter\"> <a onclick="OpenEditCallDetailsModal(\'' + _ItemSrnoPo + '\'); return false; " href="javascript: void (\'0\');" class=\"edit\"><i class=\"fa fa-pencil\" title="Edit"></i></a>';
                            html += '</div>';
                            return html;
                        }
                    },
                    { data: "ItemSrnoPo" },
                    { data: "ItemDescPo" },
                    { data: "UomSDesc" },
                    { data: "QtyOrdered" },
                    { data: "CumQtyPrevOffered" },
                    { data: "CumQtyPrevPassed" },
                    { data: "QtyToInsp" },
                    { data: "QtyPassed" },
                    { data: "QtyRejected" },
                    { data: "QtyDue" },
                    { data: "Rate" },
                    { data: "SalesTaxPer" },
                    { data: "SalesTax" },
                    { data: "ExcisePer" },
                    { data: "Excise" },
                    { data: "DiscountPer" },
                    { data: "Discount" },
                    { data: "OtherCharges" },
                ],
                "order": [[0, "desc"]],
                "initComplete": function (settings, json) {
                    $("#dtList").wrap("<div style='overflow:auto; width:100%;position:relative;'></div>");
                },
            });
        }

        function OpenEditCallDetailsModal(ItemSrnoPo) {
            $("#ItemSrnoPo").val(ItemSrnoPo);
            var _CaseNo = $("#Caseno").val();
            var _CallRecvDt = $("#Callrecvdt").val();
            var _CallSno = $("#Callsno").val();
            $.ajax({
                url: '@Url.Action("EditListDetails", "InspectionCert")?ItemSrnoPo=' + ItemSrnoPo + "&CaseNo=" + _CaseNo + "&CallRecvDt=" + _CallRecvDt + "&CallSno=" + _CallSno,
                type: 'POST',
                cache: false,
                processData: false,
                contentType: false
            }).done(function (response) {
                if (response != null) {
                    $("#EditCallDetailsModal").html("");
                    $("#EditCallDetailsModal").html(response);
                    $("#EditCallDetailsModal").modal('show');
                }
            });
        }

        function UpdateCallDetails() {
            
            var CaseNo = $("#Caseno").val();
            var CallRecvDt = $("#Callrecvdt").val();
            var CallSno = $("#Callsno").val();
            var ItemSrnoPo = $("#ItemSrnoPo").val();
            var ItemDescPo = $("#ItemDescPo").val();
            var QtyToInsp = $("#QtyToInsp").val();
            var QtyPassed = $("#QtyPassed").val();
            var QtyRejected = $("#QtyRejected").val();
            var OtherCharges = $("#OtherCharges").val();

            var QtyOrdered = $("#QtyOrdered").val();
            var QtyDue = $("#QtyDue").val();


            $("#spnQtyToInsp").html("");
            $("#spnQtyPassed").html("");
            $("#spnQtyRejected").html("");
            $("#spnQtyDue").html("");
            $("#spnOtherCharges").html("");

            var IsValid = true;

            if (QtyToInsp == "") {
                //ShowHideMsgNew(false, "Please add Qty Off Now.");
                $("#spnQtyToInsp").html("Please add Qty Off Now.");
                IsValid = false;
            }
            if (QtyPassed == "") {
                //ShowHideMsgNew(false, "Please add Qty Passed.");
                $("#spnQtyPassed").html("Please add Qty Passed.");
                IsValid = false;
            }
            if (QtyRejected == "") {
                //ShowHideMsgNew(false, "Please add Qty Rejected.");
                $("#spnQtyRejected").html("Please add Qty Passed.");
                IsValid = false;
            }
            if (QtyDue == "") {
                //ShowHideMsgNew(false, "Please add Qty Due.");
                $("#spnQtyDue").html("Please add Qty Passed.");
                IsValid = false;
            }
            if (OtherCharges == "") {
                //ShowHideMsgNew(false, "Please add Other Charges.");
                $("#spnOtherCharges").html("Please add Other Charges.");
                IsValid = false;
            }
            if (ItemDescPo == "") {
                //ShowHideMsgNew(false, "Please add Description.");
                $("#spnItemDescPo").html("Please add Description.");
                IsValid = false;
            }

            if (parseInt(QtyToInsp) > parseInt(QtyOrdered)) {
                $("#spnQtyToInsp").html("Please add less then Qty Ord.");
                $("#QtyToInsp").val("0");
                IsValid = false;
            }
            if (parseInt(QtyPassed) > parseInt(QtyToInsp)) {
                $("#spnQtyPassed").html("Please add less then Qty Off Now.");
                $("#QtyPassed").val("0");
                IsValid = false;
            }

            var QtyR = parseInt(QtyToInsp) - parseInt(QtyPassed);
            if (parseInt(QtyRejected) > parseInt(QtyR)) {
                $("#spnQtyRejected").html("Less then Qty Off Now - Qty Passed.");
                $("#QtyRejected").val("0");
                IsValid = false;
            }
            var QtyD = parseInt(QtyToInsp) - parseInt(QtyPassed) - parseInt(QtyRejected);
            if (parseInt(QtyDue) > parseInt(QtyD)) {
                $("#spnQtyDue").html("Less then Qty Off Now - Qty Passed - Qty Rejected.");
                $("#QtyDue").val("0");
                IsValid = false;
            }

            if (!IsValid) return;

            let myObject = { CaseNo, CallRecvDt, CallSno, ItemSrnoPo, ItemDescPo, QtyToInsp, QtyToInsp, QtyPassed, QtyRejected, QtyDue };
            $.post("@Url.Action("UpdateCallDetails", "InspectionCert")", $.param(myObject), function (response) {
                if (response.status) {
                    $("#EditCallDetailsModal").modal('hide');
                    ShowHideMsgNew(response.status, response.responseText);
                    InitializeDatatable();
                }
                else {
                    ShowHideMsgNew(response.status, response.responseText);
                }
            });
        }

        $("#btnGBill").click(function () {

            //if ($("#chkABill").is(":checked")) {
            //    $("#chkABill").val('A');
            //}
            //else {
            //    $("#chkABill").val('X');
            //}
            // $("#CallCancelStatus").prop('disabled', false);

            var ConsigneeGST = $("input[name='ConsigneeGST']:checked").val();
            $('select').prop('disabled', false);
            $("#SelectRadio").val(ConsigneeGST);

            $('select').prop('disabled', false);
            var chkABill = $('input[name="chkABill"]:checked').val();
            if (chkABill == "on") {
                $("#chkABill").val('A');
            }
            else {
                $("#chkABill").val('X');
            }

            $("#spnMinFee").html("");
            $("#spnMaxFee").html("");

            $("#spnRlyBpoFee").html("");
            $("#spnBpoFee").html("");
            $("#spnBpoFeeType").html("");
            $("#spnTaxType").html("");
            $("#spnBpoTaxType").html("");


            $("#spnBillDt").html("");
            if ($("#BillDt").val() == "") {
                $("#spnBillDt").html("Please add Bill Date.");
                return;
            }
            if ($("#BpoType").val() == "R" && $("#BpoFeeType").val() == "P" && $("#IcTypeId").val() == 1) {
                if ($("#RlyBpoFee").val() == "") {
                    $("#spnRlyBpoFee").html("FEE are required.");
                    return;
                }
            }
            else {
                if ($("#BpoFee").val() == "") {
                    $("#spnBpoFee").html("FEE are required.");
                    return;
                }
            }
            if ($("#BpoFeeType").val() == "") {
                $("#spnBpoFeeType").html("FEE Type are required.");
                return;
            }

            var CertDt = $("#CertDt").val();
            if (CertDt >= "01/07/2017") {
                if ($("#TaxType").val() == "") {
                    $("#spnTaxType").html("Tax Type are required.");
                    return;
                }
            }
            else {
                if ($("#BpoTaxType").val() == "") {
                    $("#spnBpoTaxType").html("Tax Type are required.");
                    return;
                }
            }

            if ($("#MinFee").val() == null) {
                $("#spnMinFee").html("Please Minimum 0 fees required.");
                return;
            }
            if ($("#MaxFee").val() == null) {
                $("#spnMaxFee").html("Please Maximum 0 fees required.");
                return;
            }

            if($("#CallCancelStatus").val() == "N")
            {
                ShowHideMsgNew(false, "Call Non-Chargeable bill not generated.");
                return;
            }
            
            var CaseNo = $("#Caseno").val();
            var Callrecvdt = $("#Callrecvdt").val();
            var Callsno = $("#Callsno").val();

            event.preventDefault();
            var formData = $("#frmDetails").serialize();
            $.post("@Url.Action("BillUpdate", "InspectionCert")", formData, function (response) {
                if (response.status) {
                    if (response.responseText == "Update Successfully.") {
                        var BillNo = response.Id;
                        PopUp(BillNo, CaseNo, Callrecvdt, Callsno);
                    }
                    else {
                        ShowHideMsgNew(false, response.responseText);
                    }
                }
                else {
                    ShowHideMsgNew(response.status, response.responseText);
                }
            });
        });

        function PopUp(BillNo, CaseNo, Callrecvdt, Callsno) {
            let myObject = { BillNo, CaseNo, Callrecvdt, Callsno };
            // var url = '@Url.Action("BillingClientReport", "BillingReports")?' + $.param(myObject);

            $.ajax({
                // url: '@Url.Action("PopUp", "InspectionCert")?BillNo=' + BillNo,
                url: '@Url.Action("PopUp", "InspectionCert")?' + $.param(myObject),
                type: 'GET',
                cache: false,
                processData: false,
                contentType: false
            }).done(function (response) {
                if (response != null) {
                    $("#PopUp").html("");
                    $("#PopUp").html(response);
                    $("#PopUp").modal('show');
                }
            });
        }

        $('#PopUp').on('hidden.bs.modal', function () {
            PopUpOk();
        })

        function PopUpOk() {
            $("#PopUp").modal('hide');
            var CaseNo = $("#Caseno").val();
            var Callrecvdt = $("#Callrecvdt").val();
            var Callsno = $("#Callsno").val();
            
            if ($("#Callstatus").val() == "C" || $("#Callstatus").val() == "CB" || $("#Callstatus").val() == "R" || $("#Callstatus").val() == "RB") {
                window.location.href = '@Url.Action("InspectionDetails", "InspectionCert")?CaseNo=' + CaseNo + "&CallRecvDt=" + Callrecvdt + "&CallSno=" + Callsno + "&ActionType=M";
            }
            else {
                location.reload();
            }
        }

        $("#btnBillDtUpdate").click(function () {
            var BillNo = $("#BillNo").val();
            var BillDt = $("#BillDt").val();

            if ($("#BillNo").val() == null || $("#BillNo").val() == "") {
                $("#spnBillNo").html("Please add Bill No.");
                return;
            }
            if ($("#BillDt").val() == null || $("#BillDt").val() == "") {
                $("#spnBillNo").html("Please add Bill Date.");
                return;
            }
            let myObject = { BillNo, BillDt };
            $.post("@Url.Action("BillDateUpdate", "InspectionCert")", $.param(myObject), function (response) {
                if (response.status) {
                    ShowHideMsgNew(response.status, response.responseText);
                }
            });
        });

        function UploadDocument() {
            if (!SaveSingleDocuments("tab-1")) { return; }
            if ($("#BillNo").val() == null || $("#BillNo").val() == "") {
                $("#spnBillNo").html("Please add Bill No.");
                return;
            }
            var BillNo = $("#BillNo").val();
            var FrmCollection = $("#hdnUploadedDocumentList_tab-1").val();
            let myObject = { BillNo, FrmCollection };

            $.post("@Url.Action("DocumentSave", "InspectionCert")", $.param(myObject), function (response) {
                if (response.status) {
                    ShowHideMsgNew(response.status, response.responseText);
                }
            });
        }

        function lnkbtnMRDT() {
            var CaseNo = $("#Caseno").val();
            var CallRecvDt = $("#Callrecvdt").val();
            var CallSno = $("#Callsno").val();
            var FirstInspDt = $("#FirstInspDt").val();



            let myObject = { CaseNo, CallRecvDt, CallSno, FirstInspDt };
            $.post("@Url.Action("BillDateUpdate", "InspectionCert")", $.param(myObject), function (response) {
                if (response.status) {
                    ShowHideMsgNew(response.status, response.responseText);
                }
            });
        }

        function onBpoFeeType() {
            var BpoFeeType = $("#BpoFeeType").val();

            if ($("#BpoType").val() == "R" && $("#BpoFeeType").val() == "P" && $("#IcTypeId").val() == 1) {
                $(".RlyBpoFee").show();
                $(".BpoFee").hide();
            }
            else {
                $(".RlyBpoFee").hide();
                $(".BpoFee").show();
            }

            // if(BpoFeeType == "P")
            // {
            //     $(".RlyBpoFee").show();
            //     $(".BpoFee").hide();
            // }
            // else
            // {
            //     $(".RlyBpoFee").hide();
            //     $(".BpoFee").show();
            // }
        }

    </script>
}
