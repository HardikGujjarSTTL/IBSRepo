@model IBS.Models.RoleModel

@{
    ViewData["Title"] = "Manage User Role";
    string clsView = "";
    if (Model.Id > 0)
    {
        clsView = "Permission_View";
    }
}
<div class="list-inner">
    <div class="tast-list">
        <h2>Manage User Role</h2>
    </div>
    <div>
        <a asp-action="Index" asp-controller="UserRole" class="formBtn viewall-btn">View List</a>
    </div>
</div>
<section class="@clsView">
    <div class="task-listinput">
        <form data-ajax="true" asp-antiforgery="true" asp-controller="UserRole" asp-action="UserRoleSave" data-ajax-method="post" data-ajax-complete="completed" id="frmUserRole">
            <input type="hidden" asp-for="Id" />
            <div class="accordion-body">
                <div class="row my-0">
                    <div class="col-md-4 mb-3">
                        <label for="Reference">User Type</label>
                        @Html.DropDownListFor(model => model.UserType, new SelectList(IBS.Models.Common.GetUserTypeLogin(), "Value", "Text"), "--Select--")
                        <span asp-validation-for="Roledescription" class="text-danger"></span>
                    </div>
                    <div class="col-md-4 mb-3">
                        <label for="Reference">User Name</label>
                        @* @Html.DropDownListFor(model => model.User_ID, new SelectList(IBS.Models.Common.GetUsers() , "Value", "Text"),"--Select--", new { @class = "select2" }) *@
                        @if (Model.User_ID != null)
                        {
                            @Html.DropDownListFor(
                                     model => model.User_ID,
                                     new SelectList(Common.GetUsersgetbyID(Model.User_ID), "Value", "Text", Model.User_ID),
                                     "--Select--",
                                     new { @class = "select2", id = "User_ID" }
                                     )
                        }
                        else
                        {
                            @Html.DropDownListFor(
                                     model => model.User_ID,
                                     new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"),
                                     "--Select--",
                                     new { @class = "select2", id = "User_ID" }
                                     )
                        }
                        <span asp-validation-for="Rolename" class="text-danger"></span>
                    </div>
                    <div class="col-md-4 mb-3">
                        <label for="Reference">Role Name</label>
                        @Html.DropDownListFor(model => model.RoleId, new SelectList(IBS.Models.Common.GetRoles(), "Value", "Text"), "--Select--")
                        <span asp-validation-for="Roledescription" class="text-danger"></span>
                    </div>
                </div>
                <div class="savenext-btn">
                    @*<a asp-controller="UserRole" asp-action="Index" class="reset-btn">Cancel</a>*@
                    <button type="button" class="save-btn active Permission_Save" onclick="Save();">Save</button>
                </div>
            </div>
        </form>
    </div>
</section>
@section scripts {
    <partial name="_DataTablesScriptsPartial" />
    <partial name="_ValidationScriptsPartial" />
    <script type="text/javascript">
        //$(".select2").select2();
        // $('.select2).select2({
        //           minimumInputLength: 3
        //  });
        function Save() {
            if ($("#frmUserRole").valid()) {
                $("#frmUserRole").submit();
            }
        }
        completed = function (response) {
            var res = response.responseJSON;
            ShowHideMsgNew(res.status, res.responseText);
            if (res.status) {
                window.location.href = '@Url.Action("Index", "UserRole")';
            }
        };

        $(document).ready(function () {
            var userType = $("#UserType").val();
            $('#User_ID').select2({
                ajax: {
                    url: '@Url.Action("SearchUsers", "UserRole")',
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {
                            searchTerm: params.term || '',
                            userType: $("#UserType").val()
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data.data
                        };
                    },
                    cache: true
                },
                minimumInputLength: 1
            });
        });
    </script>
}