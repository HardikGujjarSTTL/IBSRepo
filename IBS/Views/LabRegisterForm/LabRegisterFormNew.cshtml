@model IBS.Models.LABREGISTERModel

@{
    // ViewData["Title"] = "LAB REGISTER";
    
    string clsView = "";
    if (Model.LabID != "0")
    {
       
        clsView = "Permission_View";
    }
}
<div class="list-inner">
    <div class="tast-list">
        <h2>LAB REGISTER FORM</h2>
    </div>
    <div>
        <a asp-action="Index" asp-controller="LabRegisterForm" class="formBtn viewall-btn">View List</a>
    </div>
</div>

@* <style>
    tr:nth-child(even) {
    background-color: #f0f8ff; /* Light Blue */
}

/* Style for table cells */
td {
    height: 50px;
    padding: 10px;
    border: 1px solid #b0c4de;
    vertical-align: top;
}
    table {
  width: 100%;
  border-collapse: collapse;
  border-top: 2px solid #b0c4de; /* Add top border */
  background-color: #f0f8ff;
  margin-bottom: 20px; /* Add margin at the bottom for spacing */
}

/* Style for table cells */
td {
  height: 50px; /* Adjust the height of table cells */
  padding: 5px;
  vertical-align: top;
}

/* Style for labels */
label {
  display: block; /* Make labels block-level to occupy the whole cell width */
  font-weight: bold;
}

/* Style for input fields */
input[type="text"],
input[type="date"] {
  width: 100%;
  height: 42px;
  border: 1px solid #cccccc;
  border-radius: 6px;
  padding: 5px;
  box-sizing: border-box; /* Ensure the padding is included in the width */
}

/* Style for error message */
.text-danger {
  color: red;
  margin-left: 6%;
}

/* Style for left-aligned button */
.left-button {
  float: left;
  margin-right: 10px;
}

/* Style for right-aligned button */
.right-button {
  float: right;
  margin-left: 10px;
}

/* Clear floating elements */
.clearfix::after {
  content: "";
  display: table;
  clear: both;
}
    .table-responsive {
    overflow-x: auto;
    height:190px;
}
    .custom-textarea {
    width: 400px;
    height:auto; 
}
.table-section {
        width: 100%;
        /*height: 400px;*/ /* Set the desired height */
        overflow-y: auto; /* Enable vertical scrollbar if table exceeds height */
    }

    /* Set table width to 100% and disable horizontal scrollbar */
    #dtlabregdtl {
        width: 100%;
        table-layout: fixed;
    }

    /* Style table header cells */
    #dtlabregdtl th {
        background-color: #f2f2f2;
        border: 1px solid #dddddd;
        padding: 8px;
        text-align: left;
    }

    /* Style table body cells */
    #dtlabregdtl td {
        border: 1px solid #dddddd;
        padding: 8px;
        text-align: left;
    }

    /* Add custom scrollbar style for the table section */
    .table-section::-webkit-scrollbar {
        width: 8px;
    }

    .table-section::-webkit-scrollbar-thumb {
        background-color: #888;
        border-radius: 4px;
    }

    .table-section::-webkit-scrollbar-thumb:hover {
        background-color: #555;
    }
</style> *@
<h2>@ViewData["Title"]</h2>
<section class="@clsView">
    <div class="task-listinput">
        <div class="accordion-body">
            <div class="row my-0">
                <div class="col-md-4 mb-4">
                    <label for="Reference">Sample Registration No.</label>
                    <input type="text" id="lblRNo" class="input" readonly="readonly" />

                </div>

                <div class="col-md-4 mb-4">
                    <label for="Reference">Sample Registration Date</label>
                    <input type="text" id="dtregdt" class="input datepicker" />

                </div>
                <div class="col-md-4 mb-4">
                    <label for="Reference">Case No</label>
                    <input type="text" id="lblCaseNo" class="input" readonly="readonly" />
                </div>
            </div>
            <div class="row my-0">
                <div class="col-md-2 mb-4">
                    <label for="Reference">Call Date</label>
                    <input type="text" id="lblCallDT" class="input" readonly="readonly" />

                </div>

                <div class="col-md-2 mb-4">
                    <label for="Reference">Call SNO</label>
                    <input type="text" id="lblCallSno" class="input" readonly="readonly" />

                </div>
                <div class="col-md-8 mb-4">
                    <label for="Reference">Vendor</label>
                    <input type="text" id="lblVend" class="input" readonly="readonly" />
                    <input type="hidden" id="lblVENDCD" class="input" readonly="readonly" />
                </div>
            </div>

            <div class="row my-0">
                <div class="col-md-4 mb-4">
                    <label for="Reference">IE</label>
                    <input type="text" id="lblIE" class="input" readonly="readonly" />
                    <input type="hidden" id="lblIECD" class="input" readonly="readonly" />
                </div>

                <div class="col-md-4 mb-4">
                    <label for="Reference">Date of Dispatch of Sample</label>
                    <input type="text" id="dtdispatch" class="input datepicker" />

                </div>
                <div class="col-md-4 mb-4">
                    <label for="Reference">Date of Drawal of Sample</label>
                    <input type="text" id="dtdrawal" class="input datepicker" />

                </div>
            </div>
            <div class="row my-0">
                <div class="col-md-4 mb-4">
                    <label for="Reference">Date of Receipt of Sample</label>
                    <input type="text" id="dtreceipt" class="input datepicker" />

                </div>
                <div class="col-md-8 mb-4">
                    <label class="control-label">Testing Type</label>
                    </br>
                    @Html.RadioButtonFor(m => m.TestingType, "Normal", new { @class = "text-darkblue font-bold font-size-8pt", @tabindex = "5",@id = "N",@onchange = "ToggleInfo(this);" })
                    Normal
                    @Html.RadioButtonFor(m => m.TestingType, "Re-Testing", new { @class = "text-darkblue font-bold font-size-8pt", @tabindex = "6" ,@id = "RT",@onchange = "ToggleInfo(this);"})
                    Re-Testing
                    @Html.RadioButtonFor(m => m.TestingType, "Private_Case", new { @class = "text-darkblue font-bold font-size-8pt", @tabindex = "5",@id = "PC",@onchange = "ToggleInfo(this);"})
                    Private Case
                    @Html.RadioButtonFor(m => m.TestingType, "IREPS_Case", new { @class = "text-darkblue font-bold font-size-8pt", @tabindex = "6" ,@id = "IC",@onchange = "ToggleInfo(this);"})
                    IREPS Case
                </div>
               
                    
               
            </div>
            <div class="row my-0">
                <div class="col-md-4 mb-4">
                    <label for="Reference">Total Testing Fee</label>
                    <input type="text" id="lbltotf" class="input" readonly="readonly" />

                </div>

                <div class="col-md-4 mb-4">
                    <label for="Reference">Total Handling Charges</label>
                    <input type="text" id="lblthc" class="input" readonly="readonly" />

                </div>
                <div class="col-md-4 mb-4">
                    <label for="Reference">Total Service Tax</label>
                    <input type="text" id="lblservicetax" class="input" readonly="readonly" />

                </div>
            </div>
            <div class="row my-0">
                <div class="col-md-4 mb-4">
                    <label for="Reference">Total Lab Charges</label>
                    <input type="text" id="lbltolc" class="input" readonly="readonly" />

                </div>

                <div class="col-md-4 mb-4">
                    <label for="Reference">Total TDS</label>
                    <input type="text" id="lbltotds" class="input" readonly="readonly" />

                </div>
                <div class="col-md-4 mb-4">
                    <label for="Reference">Amount Recieved</label>
                    <input type="text" id="lblar" class="input" readonly="readonly" />

                </div>
            </div>
            <div class="row my-0">
                <div class="col-md-4 mb-4">
                    <label for="Reference">Total Amount Cleared</label>
                    <input type="text" id="lbltotalamtcl" class="input" readonly="readonly" />

                </div>

                <div class="col-md-4 mb-4">
                    <label for="Reference">Code No</label>
                    <input type="text" id="txtcodeno" class="input" />

                </div>
                <div class="col-md-4 mb-4">
                    <label for="Reference">Code Date</label>
                    <input type="text" id="dtcode" class="input datepicker" />

                </div>
            </div>
            <div class="row my-0" style="display:none;">
                <div class="col-md-4 mb-4">
                    <label for="Reference">Invoice No</label>
                    <input type="text" id="lblinvno" class="input" readonly="readonly" />

                </div>

                <div class="col-md-4 mb-4">
                    <label for="Reference">Invoice Dt</label>
                    <input type="text" id="lblinvdt" class="input" readonly="readonly" />

                </div>

            </div>
            <div class="row my-0">
                <input type="hidden" id="lblSno" class="input" readonly="readonly" />
                <div class="col-md-12 mb-4">
                    <label for="Reference">Item</label>
                    @Html.DropDownListFor(model => model.Item, new SelectList(IBS.Models.Common.GetItem(@Model.CaseNo,Model.CallRecDt,Model.CallSNO) , "Value", "Text"),"",new { @id = "ddlitem"})

                </div>
            </div>
            <div class="row my-0">

                <div class="col-md-12 mb-4" style="margin-top:auto;">
                    <textarea asp-for="ItemNm" class="form-control custom-textarea" id="txtitemnm" style="height:auto;"></textarea>
                </div>
            </div>
            <div class="row my-0">
                <div class="col-md-4 mb-4">
                    <label for="Reference">No. Of Samples</label>
                    <input type="text" id="txtnofsm" class="input" oninput="this.value = this.value.replace(/[^0-9]/g, '')" />

                </div>

                <div class="col-md-4 mb-4">
                    <label for="Reference">Test Category</label>
                    @Html.DropDownListFor(model => model.Item, new SelectList(IBS.Models.Common.GetTestCat() , "Value", "Text"),"",new { @id = "ddlcat" })

                </div>
                <div class="col-md-4 mb-4">
                    <label for="Reference">Test to be Conducted</label>
                    @Html.DropDownListFor(model => model.TestToBe, new SelectList(IBS.Models.Common.TestToBe() , "Value", "Text"),new { @id = "ddltestto" })

                </div>

            </div>
            <div class="row my-0">

                <div class="col-md-12 mb-4" style="margin-top:auto;">

                    @Html.DropDownListFor(model => model.TestTobeCon, new SelectList(IBS.Models.Common.TestToBeConducted() , "Value", "Text"),new { @id = "ddltesttobecon",style="display:none;" })
                    <textarea asp-for="TestTobeCon" class="custom-textarea" id="txttesttobeCon" style="display:none;"></textarea>
                </div>
            </div>
            <div class="row my-0">

                <div class="col-md-12 mb-4">
                    <label for="Reference">Lab</label>
                    @Html.DropDownListFor(model => model.Item, new SelectList(IBS.Models.Common.GetLab() , "Value", "Text"),"",new { @id = "ddllab" })
                </div>
            </div>
            <div class="row my-0">
                <div class="col-md-4 mb-4">
                    <label for="Reference">Date of Sample Dispatched to Lab</label>
                    <input type="text" id="dtofdistolab" class="input datepicker" />

                </div>

                <div class="col-md-4 mb-4">
                    <label for="Reference">Date of Test Report Required</label>
                    <input type="text" id="dtofrr" class="input datepicker" />

                </div>
                <div class="col-md-4 mb-4">
                    <label for="Reference">Date of Receipt of Test Report</label>
                    <input type="text" id="dtoftestr" class="input datepicker" />

                </div>
            </div>
            <div class="row my-0">
                <div class="col-md-4 mb-4">
                    <label for="Reference">Testing Fee</label>
                    <input type="text" id="testingfee" class="input" oninput="this.value = this.value.replace(/[^0-9]/g, '')"/>

                </div>

                <div class="col-md-4 mb-4">
                    <label for="Reference">Service Tax</label>
                    <input type="text" id="sertax" class="input" oninput="this.value = this.value.replace(/[^0-9]/g, '')" />

                </div>
                <div class="col-md-4 mb-4">
                    <label for="Reference">Handling Charges</label>
                    <input type="text" id="handlingcharges" class="input" oninput="this.value = this.value.replace(/[^0-9]/g, '')" />

                </div>
            </div>
            <div class="row my-0">
                <div class="col-md-3 mb-4">
                    <label for="Reference">Discipline</label>
                    @Html.DropDownListFor(model => model.Item, new SelectList(IBS.Models.Common.Discipline() , "Value", "Text"),new { @id = "ddldisc"})

                </div>
                <div class="col-md-3 mb-4">
                    <label>Testing Result</label>
                    @Html.DropDownListFor(model => model.TestingResult, new SelectList(IBS.Models.Common.GetStatus() , "Value", "Text"),"",new { @id = "ddlstatus" })
                </div>
            
                <div class="col-md-6 mb-4">
                    <label>Remarks</label>
                    <textarea asp-for="Remarks" class="form-control custom-textarea" id="txtremarks"></textarea>
                </div>
            </div>
            <div class="savenext-btn" style="margin-left:40%">
                <button type="button" class="save-btn active Permission_Save" onclick="AddNewLabDetails();">Save</button>
            </div>

            
        </div>
    </div>
</section>
@*</form>*@
@section scripts{
    <partial name="_DataTablesScriptsPartial" />
    <partial name="_ValidationScriptsPartial" />
    <script>
        $("#ddltestto").change(function(){
            if($("#ddltestto").val() == "D"){
                $("#txttesttobeCon").css("display", "none");
                $("#ddltesttobecon").css("display","block"); 
            }
            else
            {
                $("#ddltesttobecon").css("display","none");
                $("#txttesttobeCon").css("display", "block");
            }
        })
       
        
        $(function () {
            $("#txttesttobeCon").css("display", "block");
            $('#N').prop('checked', true);
            $(".datepicker").datepicker({
                dateFormat: "dd/mm/yy" 
            });
            var today = new Date();
             
            // $("#dtregdt").val(('0' + (today.getMonth() + 1)).slice(-2) + '/' + ('0' + today.getDate()).slice(-2) + '/' + (today.getFullYear()));
            // $("#spnregdt").val(('0' + (today.getMonth() + 1)).slice(-2) + '/' + ('0' + today.getDate()).slice(-2) + '/' + (today.getFullYear()));
            var today = new Date();
            var dd = ('0' + today.getDate()).slice(-2);
            var mm = ('0' + (today.getMonth() + 1)).slice(-2);
            var yyyy = today.getFullYear();

            $("#dtregdt").val(dd + '/' + mm + '/' + yyyy);
            $("#spnregdt").val(dd + '/' + mm + '/' + yyyy);

             AddNewLabReg();
             
        });
        $("#ddlitem").change(function(){
           
            var name = $("#ddlitem option:selected").text();
              $("#txtitemnm").val(name);
          })
          function ToggleInfo(el) {
            var result = el.value;
            sessionStorage.setItem('result', result);
        }
        function cancel(){
             window.location.href = "/LabRegisterForm/Index";
        }

        function AddNewLabReg(){
            
            var CaseNo = '@ViewBag.CN';
            var CallDt = '@ViewBag.CDT';
            var CallSno = '@ViewBag.CSN';
            //$("#lblRNo").text(RegNo).css("color", "red");
            var url = '@Url.Action("FormNew", "LabRegisterForm")';
            $.ajax({
                //url: '/LabRegisterForm/FormNew',
                url:url,
                type: "POST",
                dataType: "JSON",
                data: { CaseNo: CaseNo, CallDt: CallDt, CallSno: CallSno },

                success: function (success) {
                    
                    var calldt = CallDt;
                    var parts = CallDt.split('/');
                    var convertedDate = parts[0] + '/' + parts[1] + '/' + parts[2];

                    $("#lblCaseNo").val(CaseNo);
                    $("#lblCallDT").val(convertedDate);
                    $("#lblCallSno").val(CallSno);
                        $("#lblVend").val(success.Vendor);
                        $("#lblIE").val(success.IE);
                    $("#lblIECD").val(success.IECode);
                    $("#lblVENDCD").val(success.VendorCode);
                }

            });
        }
       

        function AddNewLabDetails(){

            var dtofrrValue = $("#dtregdt").val();
            var wFrmDtO1 = "";

            if (dtofrrValue) {
                var parts1 = dtofrrValue.split('/');
                if (parts1.length === 3) {
                    wFrmDtO1 = parts1[1] + '/' + parts1[0] + '/' + parts1[2];
                }
            }
            else {
                var wFrmDtO1 = "";
            }

            var dtoftestrValue = $("#dtdrawal").val();
            var wFrmDtO2 = "";

            if (dtoftestrValue) {
                var parts2 = dtoftestrValue.split('/');
                if (parts2.length === 3) {
                    wFrmDtO2 = parts2[1] + '/' + parts2[0] + '/' + parts2[2];
                }
            }
            else {
                var wFrmDtO2 = "";
            }

            var dtofdistolabValue = $("#dtreceipt").val();
            var wFrmDtO3 = "";

            if (dtofdistolabValue) {
                var parts3 = dtofdistolabValue.split('/');
                if (parts3.length === 3) {
                    wFrmDtO3 = parts3[1] + '/' + parts3[0] + '/' + parts3[2];
                }
            }
            else {
                var wFrmDtO3 = "";
            }
            var dtdispatch = $("#dtdispatch").val();
            var wFrmDtO4 = "";

            if (dtdispatch) {
                var parts4 = dtdispatch.split('/');
                if (parts4.length === 3) {
                    wFrmDtO4 = parts4[1] + '/' + parts4[0] + '/' + parts4[2];
                }
            }
            else {
                var wFrmDtO4 = "";
            }
            var dtcode = $("#dtcode").val();
            var wFrmDtO5 = "";

            if (dtcode) {
                var parts5 = dtcode.split('/');
                if (parts5.length === 3) {
                    wFrmDtO5 = parts5[1] + '/' + parts5[0] + '/' + parts5[2];
                }
            }
            else {
                var wFrmDtO5 = "";
            }

            var dtofrr = $("#dtofrr").val();
            var wFrmDtO6 = "";

            if (dtofrr) {
                var parts6 = dtofrr.split('/');
                if (parts6.length === 3) {
                    wFrmDtO6 = parts6[1] + '/' + parts6[0] + '/' + parts6[2];
                }
            }
            else {
                var wFrmDtO6 = "";
            }
            var dtoftestr = $("#dtoftestr").val();
            var wFrmDtO7 = "";

            if (dtoftestr) {
                var parts7 = dtoftestr.split('/');
                if (parts7.length === 3) {
                    wFrmDtO7 = parts7[1] + '/' + parts7[0] + '/' + parts7[2];
                }
            }
            else {
                var wFrmDtO7 = "";
            }
            var dtofdistolab = $("#dtofdistolab").val();
            var wFrmDtO8 = "";

            if (dtofdistolab) {
                var parts8 = dtofdistolab.split('/');
                if (parts8.length === 3) {
                    wFrmDtO8 = parts8[1] + '/' + parts8[0] + '/' + parts8[2];
                }
            }
            else {
                var wFrmDtO8 = "";
            }
            var lblCallDT = $("#lblCallDT").val();
            var wFrmDtO9 = "";

            if (lblCallDT) {
                var parts9 = lblCallDT.split('/');
                if (parts9.length === 3) {
                    wFrmDtO9 = parts9[1] + '/' + parts9[0] + '/' + parts9[2];
                }
            }
            else {
                var wFrmDtO9 = "";
            }


            var LABREGISTERModel = {
                SampleRegNo: $("#lblRNo").val(),
                SampleRegDate: wFrmDtO1,
                SampleDrawalDate: wFrmDtO2,
                SampleReceiptDate: wFrmDtO3,
                SampleDispatchDate: wFrmDtO4,
                IECode: $("#lblIECD").val(),
                CaseNo: $("#lblCaseNo").val(),
                CallRecDt: wFrmDtO9,
                CallSNO: $("#lblCallSno").val(),
                VendorCode: $("#lblVENDCD").val(),
                TestingType: sessionStorage.getItem('result'),
                CodeNo: $("#txtcodeno").val(),
                CodeDate: wFrmDtO5,

                SNO: $("#lblSno").val(),
                ItemDesc: $("#txtitemnm").val(),
                Qty: $("#txtnofsm").val(),
                TestCategoryCode: $("#ddlcat").val(),
                TestToBe: $("#ddltestto").val(),
                TestTobeCon: $("#ddltesttobecon").val(),
                Test: $("#txttesttobeCon").val(),
                LabID: $("#ddllab").val(),
                DTestingFee: $("#testingfee").val(),
                DServiceTax: $("#sertax").val(),
                DHandlingCharges: $("#handlingcharges").val(),
                TestReportRequestDate: wFrmDtO6,
                TestReportReceiveDate: wFrmDtO7,
                TestStatus: $("#ddlstatus").val(),
                DRemarks: $("#txtremarks").val(),
                SampleDispatchLabDate: wFrmDtO8,
                DISCIPLINE_ID: $("#ddldisc").val(),

                TotalTestingFee: $("#lbltotf").val(),
                TotalServiceTax: $("#lblservicetax").val(),
                TotalHandlingCharges: $("#lblthc").val(),
                TotalLabCharges: $("#lbltolc").val()

            };
            var url = '@Url.Action("InsertLabReg", "LabRegisterForm")';
            $.ajax({
                type: 'POST',
                contentType: "application/json",
                //url: "/LabRegisterForm/InsertLabReg",
                url:url,
                dataType: "json",
                data: JSON.stringify(LABREGISTERModel),
                success: function (res) {
                    //var message = '@ViewBag.Message';
                    //var regnoblcnk = '@ViewBag.regnoblank';
                    //if(message != ""){
                    //    alert(message);
                    //}
                    //if (regnoblcnk != "") {
                    //    alert(regnoblcnk);
                    //}
                    if (res == true) {

                        alert('Data Saved Successfully!');
                        window.location.href = "@Url.Action("Index", "LabRegisterForm")";
                    }
                    else {

                        alert('Error Occurred. Contact Your admin!');
                        //alert(error);
                    }

                },
                error: function (res) {
                    //var message = '@ViewBag.Message';
                    //var regnoblcnk = '@ViewBag.regnoblank';
                    //if (message != "") {
                    //    alert(message);
                    //}
                    //if (regnoblcnk != "") {
                    //    alert(regnoblcnk);
                    //}
                    if (res == true) {

                        alert('Data Saved Successfully!');
                        window.location.href = "@Url.Action("Index", "LabRegisterForm")";
                    }
                    else {
                        alert('Error Occurred. Contact Your admin!');
                        //alert(error);
                    }

                }
            });

        }
    </script>
}

