@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor;
@{
    string Region = ViewBag.Region;
    string ReportType = !string.IsNullOrEmpty(HttpContextAccessor.HttpContext.Request.Query["ReportType"]) ? Convert.ToString(HttpContextAccessor.HttpContext.Request.Query["ReportType"]) : "";
    string ReportTitle = string.Empty;

    if (ReportType == "IE_X") ReportTitle = "IE Performance";
    else if (ReportType == "CLUSTER_X") ReportTitle = "Cluster Wise Performance Report";
    else if (ReportType == "RWB") ReportTitle = "Region Wise Billing Summary";
    else if (ReportType == "R") ReportTitle = "Region Wise Comparison of Outstanding";
    else if (ReportType == "ICSUBMIT") ReportTitle = "IC Submission Report";
    else if (ReportType == "CALLSWITHOUTIC") ReportTitle = "Pending IC's Against Calls where Material has been Sccepted or Rejected";
    else if (ReportType == "SUPSUR") ReportTitle = "Super Surprise Details";
    else if (ReportType == "SUPSURPSUMM") ReportTitle = "CO Wise Super Surprise Summary";
    else if (ReportType == "CONSIGN_REJECT") ReportTitle = "Online Consignee Rejection Report";
    else if (ReportType == "X") ReportTitle = "Outstanding of One Region Over Other";
    else if (ReportType == "CLIENTWISEREJ") ReportTitle = "Rejection Details Client Wise";
    else if (ReportType == "NON_CONFORMITY") ReportTitle = "Format for Monthly Non Conformity Report";
    else if (ReportType == "PENDING_CALLS") ReportTitle = "Overdue/Pending Calls";
    else if (ReportType == "COUNTIC") ReportTitle = "CM and IE wise IC issued but not recieved";
    else if (ReportType == "HIGHVALUE") ReportTitle = "Tentative Inspection Fee Wise Pending Call";
    else if (ReportType == "REMARKING") ReportTitle = "Call Remarking Detail";
    else if (ReportType == "CALL_DETAILS") ReportTitle = "Call Details Dashborad";

    ViewData["Title"] = ReportTitle;
}

<div class="list-inner">
    <div class="tast-list">
        <h2>@ReportTitle</h2>
    </div>
</div>
<div class="task-listinput">
    <div class="accordion-body">
        <div class="task-inner row report1" style="display: none">
            <div class="col-md-3">
                <div class="input-search">
                    <label for="FromDate">For The Period From</label>
                    <input type="text" class="datepicker" id="FromDate" placeholder="DD/MM/YYYY" />
                    <span class="text-danger field-validation-error" id="spnErrorFromDate"></span>
                </div>
            </div>
            <div class="col-md-3">
                <div class="input-search">
                    <label for="ToDate">To</label>
                    <input type="text" class="datepicker" id="ToDate" placeholder="DD/MM/YYYY" />
                    <span class="text-danger field-validation-error" id="spnErrorToDate"></span>
                </div>
            </div>
            <div class="col-md-3" style="margin-top: 30px;">
                <div class="savenext-btn">
                    <button type="button" class="save-btn active" onclick="ViewReport1();">Submit</button>
                    <button type="button" class="reset-btn" onclick="ClearControls1();">Clear</button>
                </div>
            </div>
        </div>
        <div class="task-inner row RWB" style="display: none">
            <div class="col-md-12 mb-3">
                <div class="custom-readio">
                    <div class="company-checkbox">
                        <div class="remember">
                            <div class="remecheckbox">
                                <input type="radio" id="SummaryReport1" name="RWBSummaryReport" value="SummaryReport1" checked>
                                <label for="SummaryReport1">Summary Report For the Month</label>
                            </div>
                        </div>
                        <div c lass="remember">
                            <div class="remecheckbox">
                                <input type="radio" id="SummaryReport2" name="RWBSummaryReport" value="SummaryReport2">
                                <label for="SummaryReport2">Summary Report For the Given Period</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-2 mb-3">
                <label for="FromMonth" id="lblFromMonth">Month</label> <br />
                @Html.DropDownList("FromMonth", Common.GetMonths())
            </div>
            <div class="col-md-2 mb-3">
                <label for="FromYear" id="lblFromYear">Year</label> <br />
                @Html.DropDownList("FromYear", Common.GetYears())
            </div>
            <div class="col-md-2 mb-3 RWBSummaryReportTo" style="display: none">
                <label for="ToMonth">To Month</label> <br />
                @Html.DropDownList("ToMonth", Common.GetMonths())
            </div>
            <div class="col-md-2 mb-3 RWBSummaryReportTo" style="display: none">
                <label for="ToYear">To Year</label> <br />
                @Html.DropDownList("ToYear", Common.GetYears())
            </div>
            <div class="col-md-3" style="margin-top: 30px;">
                <div class="savenext-btn">
                    <button type="button" class="save-btn active" onclick="ViewReportRWB();">Submit</button>
                    <button type="button" class="reset-btn" onclick="ClearControlsRWB();">Clear</button>
                </div>
            </div>
        </div>
        <div class="task-inner row RWCO" style="display: none">
            <div class="col-md-3 mb-3">
                <div class="input-search">
                    <label for="FromDate_RWCO">Client wise Outstanding Statement as on</label>
                    <input type="text" class="datepicker" id="FromDate_RWCO" placeholder="DD/MM/YYYY" />
                    <span class="text-danger field-validation-error" id="spnErrorFromDate_RWCO"></span>
                </div>
            </div>
            <div class="col-md-12">
                <div class="custom-readio">
                    <div class="company-checkbox">
                        <div class="remember">
                            <div class="remecheckbox">
                                <input type="radio" id="ClientWiseOutstanding1" name="ClientWiseOutstanding" value="1" checked>
                                <label for="ClientWiseOutstanding1">Client Wise</label>
                            </div>
                        </div>
                        <div c lass="remember">
                            <div class="remecheckbox">
                                <input type="radio" id="ClientWiseOutstanding2" name="ClientWiseOutstanding" value="2">
                                <label for="ClientWiseOutstanding2">Sorted on Outstanding(Outstanding amount is greater then zero OR Total Suspense is greater then zero)</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3" style="margin-top: 30px;">
                <div class="savenext-btn">
                    <button type="button" class="save-btn active" onclick="ViewReportRWCO();">Submit</button>
                    <button type="button" class="reset-btn" onclick="ClearControlsRWCO();">Clear</button>
                </div>
            </div>
        </div>
        <div class="task-inner row SuperSurprise" style="display: none">
            <div class="col-md-3 mb-3">
                <div class="input-search">
                    <label for="FromDateSuperSurprise">For The Period From</label>
                    <input type="text" class="datepicker" id="FromDateSuperSurprise" placeholder="DD/MM/YYYY" />
                    <span class="text-danger field-validation-error" id="spnErrorFromDateSuperSurprise"></span>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="input-search">
                    <label for="ToDateSuperSurprise">To</label>
                    <input type="text" class="datepicker" id="ToDateSuperSurprise" placeholder="DD/MM/YYYY" />
                    <span class="text-danger field-validation-error" id="spnErrorToDateSuperSurprise"></span>
                </div>
            </div>
            <div class="col-md-12 mb-3">
                <div class="custom-readio">
                    <div class="company-checkbox">
                        <div class="remember">
                            <div class="remecheckbox">
                                <input type="radio" id="CM1" name="CM" value="CM1" checked>
                                <label for="CM1">All CM</label>
                            </div>
                        </div>
                        <div c lass="remember">
                            <div class="remecheckbox">
                                <input type="radio" id="CM2" name="CM" value="CM2">
                                <label for="CM2">Particular CM</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-3 CM" style="display: none;">
                @Html.DropDownList("ParticularCM", Common.GetControllingOfficers(Region))
            </div>
            <div class="col-md-12 mb-3">
                <div class="custom-readio">
                    <div class="company-checkbox">
                        <div class="remember">
                            <div class="remecheckbox">
                                <input type="radio" id="Sector1" name="Sector" value="Sector1" checked>
                                <label for="Sector1">All scope of sector where Item is covered</label>
                            </div>
                        </div>
                        <div c lass="remember">
                            <div class="remecheckbox">
                                <input type="radio" id="Sector2" name="Sector" value="Sector2">
                                <label for="Sector2">Particular scope of sector where Item is covered</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-3 Sector" style="display: none;">
                @Html.DropDownList("ParticularSector",  new SelectList(Common.GetScopeOfsector() , "Value", "Text"))
            </div>
            <div class="col-md-12" style="margin-top: 30px;">
                <div class="savenext-btn">
                    <button type="button" class="save-btn active" onclick="ViewReportSuperSurprise();">Submit</button>
                    <button type="button" class="reset-btn" onclick="ClearControlsSuperSurprise();">Clear</button>
                </div>
            </div>
        </div>
        <div class="task-inner row ConsignReject" style="display: none">
            <div class="col-md-3">
                <label for="RegionConsignReject">For The Region</label>
                @Html.DropDownList("RegionConsignReject", new SelectList(Common.GetRegion() , "Value", "Text"), "--All--")
            </div>
            <div class="col-md-3">
                <label for="RegionStatus">Status</label>
                @Html.DropDownList("RegionStatus", new SelectList(Common.GetOnlineStatus() , "Value", "Text"), "--All--")
            </div>
            <div class="col-md-3">
                <div class="input-search">
                    <label for="FromDateConsignReject">For The Period From</label>
                    <input type="text" class="datepicker" id="FromDateConsignReject" placeholder="DD/MM/YYYY" />
                    <span class="text-danger field-validation-error" id="spnErrorFromDateConsignReject"></span>
                </div>
            </div>
            <div class="col-md-3">
                <div class="input-search">
                    <label for="ToDateConsignReject">To</label>
                    <input type="text" class="datepicker" id="ToDateConsignReject" placeholder="DD/MM/YYYY" />
                    <span class="text-danger field-validation-error" id="spnErrorToDateConsignReject"></span>
                </div>
            </div>
            <div class="col-md-3" style="margin-top: 30px;">
                <div class="savenext-btn">
                    <button type="button" class="save-btn active" onclick="ViewReportConsignReject();">Submit</button>
                    <button type="button" class="reset-btn" onclick="ClearControlsConsignReject();">Clear</button>
                </div>
            </div>
        </div>
        <div class="task-inner row OutstandingOverRegion" style="display: none">
            <div class="col-md-3 mb-3">
                <div class="input-search">
                    <label for="FromDateOutstandingOverRegion">Client wise Outstanding Statement as on</label>
                    <input type="text" class="datepicker" id="FromDateOutstandingOverRegion" placeholder="DD/MM/YYYY" />
                    <span class="text-danger field-validation-error" id="spnErrorFromDateOutstandingOverRegion"></span>
                </div>
            </div>
            <div class="col-md-3" style="margin-top: 30px;">
                <div class="savenext-btn">
                    <button type="button" class="save-btn active" onclick="ViewReportOutstandingOverRegion();">Submit</button>
                    <button type="button" class="reset-btn" onclick="ClearControlsOutstandingOverRegion();">Clear</button>
                </div>
            </div>
        </div>
        <div class="task-inner row ClientWiseRejection" style="display: none">
            <div class="col-md-3 mb-3">
                <label for="ClientType_ClientWiseRejection">Client</label>
                @Html.DropDownList("ClientType_ClientWiseRejection", new SelectList(Common.ClientType() , "Value", "Text"), "--Select--", new { @onchange = "BindBPORailway();" })
                <span class="text-danger field-validation-error" id="spnErrorClientTypeClientWiseRejection"></span>
            </div>
            <div class="col-md-3 mb-3" style="margin-top: 34px;">
                @Html.DropDownList("BPORailway_ClientWiseRejection", Common.GetBPORailway(""),  "--Select--")
                <span class="text-danger field-validation-error" id="spnErrorBPORailwayClientWiseRejection"></span>
            </div>
            <div class="col-md-3 mb-3">
                <div class="input-search">
                    <label for="FromDateClientWiseRejection">For The Period From</label>
                    <input type="text" class="datepicker" id="FromDateClientWiseRejection" placeholder="DD/MM/YYYY" />
                    <span class="text-danger field-validation-error" id="spnErrorFromDateClientWiseRejection"></span>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="input-search">
                    <label for="ToDateClientWiseRejection">To</label>
                    <input type="text" class="datepicker" id="ToDateClientWiseRejection" placeholder="DD/MM/YYYY" />
                    <span class="text-danger field-validation-error" id="spnErrorToDateClientWiseRejection"></span>
                </div>
            </div>
            <div class="col-md-3">
                <div class="savenext-btn">
                    <button type="button" class="save-btn active" onclick="ViewReportClientWiseRejection();">Submit</button>
                    <button type="button" class="reset-btn" onclick="ClearControlsClientWiseRejection();">Clear</button>
                </div>
            </div>
        </div>
        <div class="task-inner row NonConformity" style="display: none">
            <div class="col-md-12 mb-3">
                <div class="custom-readio">
                    <div class="company-checkbox">
                        <div class="remember">
                            <div class="remecheckbox">
                                <input type="radio" id="SummaryReport3" name="NonConformitySummaryReport" value="SummaryReport3" checked>
                                <label for="SummaryReport3">Summary Report For the Month</label>
                            </div>
                        </div>
                        <div c lass="remember">
                            <div class="remecheckbox">
                                <input type="radio" id="SummaryReport4" name="NonConformitySummaryReport" value="SummaryReport4">
                                <label for="SummaryReport4">Summary Report For the Given Period</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <label for="FromMonthNonConformity" id="lblFromMonthNonConformity">Month</label> <br />
                @Html.DropDownList("FromMonthNonConformity", Common.GetMonths())
            </div>
            <div class="col-md-2">
                <label for="FromYearNonConformity" id="lblFromYearNonConformity">Year</label> <br />
                @Html.DropDownList("FromYearNonConformity", Common.GetYears())
            </div>
            <div class="col-md-2 NonConformitySummaryReportTo" style="display: none">
                <label for="ToMonthNonConformity">To Month</label> <br />
                @Html.DropDownList("ToMonthNonConformity", Common.GetMonths())
            </div>
            <div class="col-md-2 NonConformitySummaryReportTo" style="display: none">
                <label for="ToYearNonConformity">To Year</label> <br />
                @Html.DropDownList("ToYearNonConformity", Common.GetYears())
            </div>
            <div class="col-md-4">
                <label for="IecdNonConformity">IE</label> <br />
                @Html.DropDownList("IecdNonConformity", Common.GetIEIEToWhomIssued(Region), new { @class = "" })
            </div>
            <div class="col-md-3" style="margin-top: 30px;">
                <div class="savenext-btn">
                    <button type="button" class="save-btn active" onclick="ViewReportNonConformity();">Submit</button>
                    <button type="button" class="reset-btn" onclick="ClearControlsNonConformity();">Clear</button>
                </div>
            </div>
        </div>
        <div class="task-inner row TentativeInspection" style="display: none">
            <div class="col-md-3 mb-3">
                <div class="input-search">
                    <label for="FromDateTentativeInspection">For The Period From</label>
                    <input type="text" class="datepicker" id="FromDateTentativeInspection" placeholder="DD/MM/YYYY" />
                    <span class="text-danger field-validation-error" id="spnErrorFromDateTentativeInspection"></span>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="input-search">
                    <label for="ToDateTentativeInspection">To</label>
                    <input type="text" class="datepicker" id="ToDateTentativeInspection" placeholder="DD/MM/YYYY" />
                    <span class="text-danger field-validation-error" id="spnErrorToDateTentativeInspection"></span>
                </div>
            </div>
            <div class="col-md-12 mb-3">
                <div class="custom-readio">
                    <div class="company-checkbox">
                        <div class="remember">
                            <div class="remecheckbox">
                                <input type="radio" id="CM3" name="TentativeInspectionCM" value="CM3" checked>
                                <label for="CM3">All CM</label>
                            </div>
                        </div>
                        <div c lass="remember">
                            <div class="remecheckbox">
                                <input type="radio" id="CM4" name="TentativeInspectionCM" value="CM4">
                                <label for="CM4">Particular CM</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-3 TentativeInspectionCM" style="display: none;">
                @Html.DropDownList("ParticularCM2", Common.GetControllingOfficers(Region))
            </div>
            <div class="col-md-12">
                <div class="custom-readio">
                    <label>Report To be Sorted On</label>
                    <div class="company-checkbox">
                        <div class="remember">
                            <div class="remecheckbox">
                                <input type="radio" id="InspFee" name="SortedOn" value="InspFee" checked>
                                <label for="InspFee">Insp Fee</label>
                            </div>
                        </div>
                        <div class="remember">
                            <div class="remecheckbox">
                                <input type="radio" id="DeliveryPeriod" name="SortedOn" value="DeliveryPeriod">
                                <label for="DeliveryPeriod">Delivery Period</label>
                            </div>
                        </div>
                        <div class="remember">
                            <div class="remecheckbox">
                                <input type="radio" id="DesireDate" name="SortedOn" value="DesireDate">
                                <label for="DesireDate">Desire Date</label>
                            </div>
                        </div>
                        <div class="remember">
                            <div class="remecheckbox">
                                <input type="radio" id="PendingSince" name="SortedOn" value="PendingSince">
                                <label for="PendingSince">Pending Since</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12" style="margin-top: 30px;">
                <div class="savenext-btn">
                    <button type="button" class="save-btn active" onclick="ViewReportTentativeInspection();">Submit</button>
                    <button type="button" class="reset-btn" onclick="ClearControlsTentativeInspection();">Clear</button>
                </div>
            </div>
        </div>
        <div class="task-inner row CallRemarking" style="display: none">
            <div class="col-md-3 mb-3">
                <div class="input-search">
                    <label for="FromDateCallRemarking">For The Period From</label>
                    <input type="text" class="datepicker" id="FromDateCallRemarking" placeholder="DD/MM/YYYY" />
                    <span class="text-danger field-validation-error" id="spnErrorFromDateCallRemarking"></span>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="input-search">
                    <label for="ToDateCallRemarking">To</label>
                    <input type="text" class="datepicker" id="ToDateCallRemarking" placeholder="DD/MM/YYYY" />
                    <span class="text-danger field-validation-error" id="spnErrorToDateCallRemarking"></span>
                </div>
            </div>
            <div class="col-md-6 mb-3" style="margin-top: 30px;">
                <div class="custom-readio">
                    <div class="company-checkbox">
                        <div class="remember">
                            <div class="remecheckbox">
                                <input type="radio" id="InitiatedDate" name="CallRemarkingDate" value="InitiatedDate" checked>
                                <label for="InitiatedDate">By Remark Initiated Date</label>
                            </div>
                        </div>
                        <div c lass="remember">
                            <div class="remecheckbox">
                                <input type="radio" id="ApprovedDate" name="CallRemarkingDate" value="ApprovedDate">
                                <label for="ApprovedDate">By Remark Approved Date</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-3" >
                <label for="CallsStatus">Status of Calls</label>
                @Html.DropDownList("CallsStatus", new SelectList(Common.GetCallsStatus() , "Value", "Text"), "--All--")
            </div>
            <div class="col-md-3" style="margin-top: 30px;">
                <div class="savenext-btn">
                    <button type="button" class="save-btn active" onclick="ViewReportCallRemarking();">Submit</button>
                    <button type="button" class="reset-btn" onclick="ClearControlsCallRemarking();">Clear</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <partial name="_DataTablesScriptsPartial" />
    <partial name="_ValidationScriptsPartial" />

    <script type="text/javascript">

        $(document).ready(function () {
            if ('@ReportType' == 'IE_X' || '@ReportType' == 'CLUSTER_X' || '@ReportType' == 'ICSUBMIT' || '@ReportType' == 'CALLSWITHOUTIC' || '@ReportType' == 'SUPSURPSUMM' || '@ReportType' == 'COUNTIC') {
                $(".report1").css("display", "");
            }
            else if ('@ReportType' == 'RWB') {
                $(".RWB").css("display", "");
            }
            else if ('@ReportType' == 'R') {
                $(".RWCO").css("display", "");
            }
            else if ('@ReportType' == 'SUPSUR') {
                $(".SuperSurprise").css("display", "");
            }
            else if ('@ReportType' == 'CONSIGN_REJECT') {
                $(".ConsignReject").css("display", "");
                $("#RegionConsignReject option[value='Q']").remove();
            }
            else if ('@ReportType' == 'X') {
                $(".OutstandingOverRegion").css("display", "");
            }
            else if ('@ReportType' == 'CLIENTWISEREJ') {
                $(".ClientWiseRejection").css("display", "");
            }
            else if ('@ReportType' == 'NON_CONFORMITY') {
                $(".NonConformity").css("display", "");
            }
            else if ('@ReportType' == 'PENDING_CALLS') {
                var ReportType = '@ReportType';
                let myObject = { ReportType };
                var url = '@Url.Action("Manage", "ManagementReports")?' + $.param(myObject);
                window.open(url, '_blank');
            }
            else if ('@ReportType' == 'HIGHVALUE') {
                $(".TentativeInspection").css("display", "");
            }
            else if ('@ReportType' == 'REMARKING') {
                $(".CallRemarking").css("display", "");
            }
            else if ('@ReportType' == 'CALL_DETAILS') {
                var ReportType = '@ReportType';
                let myObject = { ReportType };
                var url = '@Url.Action("Manage", "ManagementReports")?' + $.param(myObject);
                window.open(url, '_blank');
            }
        });

        function ViewReport1() {

            $("#spnErrorFromDate").html("");
            $("#spnErrorToDate").html("");

            var IsValid = true;

            if ($("#FromDate").val() == "") {
                $("#spnErrorFromDate").html("The From Date field is required.");
                IsValid = false;
            }
            if ($("#ToDate").val() == "") {
                $("#spnErrorToDate").html("The To Date field is required.");
                IsValid = false;
            }

            if ($("#FromDate").val() != "" && IsValidDate($("#FromDate").val()) == false) {
                $("#spnErrorFromDate").html("Invalid date format.");
                IsValid = false;
            }
            if ($("#ToDate").val() != "" && IsValidDate($("#ToDate").val()) == false) {
                $("#spnErrorToDate").html("Invalid date format.");
                IsValid = false;
            }

            if (!IsValid) return;

            var ReportType = '@ReportType';
            var FromDate = moment($('#FromDate').datepicker('getDate')).format("YYYY-MM-DD");
            var ToDate = moment($('#ToDate').datepicker('getDate')).format("YYYY-MM-DD");
            let myObject = { ReportType, FromDate, ToDate };

            var url = '@Url.Action("Manage1", "ManagementReports")?' + $.param(myObject);
            window.open(url, '_blank');
        }

        function ClearControls1() {
            $("#FromDate").val("");
            $("#ToDate").val("");
            $("#spnErrorFromDate").html("");
            $("#spnErrorToDate").html("");
        }

        $('input[type=radio][name="RWBSummaryReport"]').change(function () {
            if (this.value == "SummaryReport1") {
                $("#lblFromMonth").text("Month");
                $("#lblFromYear").text("Year");
                $(".RWBSummaryReportTo").css("display", "none");
            }
            else {
                $("#lblFromMonth").text("From Month");
                $("#lblFromYear").text("From Year");
                $(".RWBSummaryReportTo").css("display", "")
            }
        });

        $('input[type=radio][name="CM"]').change(function () {
            if (this.value == "CM1") {
                $(".CM").css("display", "none");
            }
            else {
                $(".CM").css("display", "")
            }
        });

        $('input[type=radio][name="Sector"]').change(function () {
            if (this.value == "Sector1") {
                $(".Sector").css("display", "none");
            }
            else {
                $(".Sector").css("display", "")
            }
        });

        function ViewReportRWB() {

            var ReportType = '@ReportType', FromYearMonth = '', ToYearMonth = '';

            var _RWBSummaryReport = $('input[name="RWBSummaryReport"]:checked').val();

            FromYearMonth = $("#FromYear").val() + ('0'.repeat(2) + $("#FromMonth").val()).slice(-2);

            if (_RWBSummaryReport == "SummaryReport2") {
                ToYearMonth = $("#ToYear").val() + ('0'.repeat(2) + $("#ToMonth").val()).slice(-2);
            }

            let myObject = { ReportType, FromYearMonth, ToYearMonth };

            var url = '@Url.Action("ManageRWB", "ManagementReports")?' + $.param(myObject);
            window.open(url, '_blank');
        }

        function ClearControlsRWB() {

            $("input[type=radio][name=RWBSummaryReport][value=SummaryReport1]").prop('checked', true);
            $('input[type=radio][name="RWBSummaryReport"]').change();

            $("#lblFromMonth").text("Month");
            $("#lblFromYear").text("Year");
            $(".RWBSummaryReportTo").css("display", "none");

            $("#FromMonth").get(0).selectedIndex = 0;
            $("#FromYear").get(0).selectedIndex = 0;
            $("#ToMonth").get(0).selectedIndex = 0;
            $("#ToYear").get(0).selectedIndex = 0;
        }

        function ViewReportRWCO() {

            $("#spnErrorFromDate_RWCO").html("");

            var IsValid = true;

            if ($("#FromDate_RWCO").val() == "") {
                $("#spnErrorFromDate_RWCO").html("The Date field is required.");
                IsValid = false;
            }
            if ($("#FromDate_RWCO").val() != "" && IsValidDate($("#FromDate_RWCO").val()) == false) {
                $("#spnErrorFromDate_RWCO").html("Invalid date format.");
                IsValid = false;
            }

            if (!IsValid) return;

            var ReportType = '@ReportType';
            var FromDate = moment($('#FromDate_RWCO').datepicker('getDate')).format("YYYY-MM-DD");
            var Outstanding = $('input[name="ClientWiseOutstanding"]:checked').val();
            let myObject = { ReportType, FromDate, Outstanding };

            var url = '@Url.Action("ManageRWCO", "ManagementReports")?' + $.param(myObject);
            window.open(url, '_blank');
        }

        function ClearControlsRWCO() {
            $("#FromDate_RWCO").val("");
            $("#spnErrorFromDate_RWCO").html("");
        }

        function ViewReportSuperSurprise() {

            $("#spnErrorFromDateSuperSurprise").html("");
            $("#spnErrorToDateSuperSurprise").html("");

            var IsValid = true;

            if ($("#FromDateSuperSurprise").val() == "") {
                $("#spnErrorFromDateSuperSurprise").html("The From Date field is required.");
                IsValid = false;
            }
            if ($("#ToDateSuperSurprise").val() == "") {
                $("#spnErrorToDateSuperSurprise").html("The To Date field is required.");
                IsValid = false;
            }

            if ($("#FromDateSuperSurprise").val() != "" && IsValidDate($("#FromDateSuperSurprise").val()) == false) {
                $("#spnErrorFromDateSuperSurprise").html("Invalid date format.");
                IsValid = false;
            }
            if ($("#ToDateSuperSurprise").val() != "" && IsValidDate($("#ToDateSuperSurprise").val()) == false) {
                $("#spnErrorToDateSuperSurprise").html("Invalid date format.");
                IsValid = false;
            }

            if (!IsValid) return;

            var ReportType = '@ReportType';
            var FromDate = moment($('#FromDateSuperSurprise').datepicker('getDate')).format("YYYY-MM-DD");
            var ToDate = moment($('#ToDateSuperSurprise').datepicker('getDate')).format("YYYY-MM-DD");

            var ParticularCM = '', ParticularSector = '';

            var _CM = $('input[name="CM"]:checked').val();
            var _Sector = $('input[name="Sector"]:checked').val();

            if (_CM == "CM2") ParticularCM = $("#ParticularCM").val();
            if (_Sector == "Sector2") ParticularSector = $("#ParticularSector").val();

            let myObject = { ReportType, FromDate, ToDate, ParticularCM, ParticularSector };

            var url = '@Url.Action("ManageSuperSurprise", "ManagementReports")?' + $.param(myObject);
            window.open(url, '_blank');
        }

        function ClearControlsSuperSurprise() {
            $("#FromDateSuperSurprise").val("");
            $("#ToDateSuperSurprise").val("");
            $("input[type=radio][name=CM][value=CM1]").prop('checked', true);
            $(".CM").css("display", "none");
            $("#ParticularCM").get(0).selectedIndex = 0;

            $("input[type=radio][name=Sector][value=Sector1]").prop('checked', true);
            $(".Sector").css("display", "none");
            $("#ParticularSector").get(0).selectedIndex = 0;

            $("#spnErrorFromDateSuperSurprise").html("");
            $("#spnErrorToDateSuperSurprise").html("");
        }

        function ViewReportConsignReject() {

            $("#spnErrorFromDateConsignReject").html("");
            $("#spnErrorToDateConsignReject").html("");

            var IsValid = true;

            if ($("#FromDateConsignReject").val() == "") {
                $("#spnErrorFromDateConsignReject").html("The From Date field is required.");
                IsValid = false;
            }
            if ($("#ToDateConsignReject").val() == "") {
                $("#spnErrorToDateConsignReject").html("The To Date field is required.");
                IsValid = false;
            }

            if ($("#FromDateConsignReject").val() != "" && IsValidDate($("#FromDateConsignReject").val()) == false) {
                $("#spnErrorFromDateConsignReject").html("Invalid date format.");
                IsValid = false;
            }
            if ($("#ToDateConsignReject").val() != "" && IsValidDate($("#ToDateConsignReject").val()) == false) {
                $("#spnErrorToDateConsignReject").html("Invalid date format.");
                IsValid = false;
            }

            if (!IsValid) return;

            var ReportType = '@ReportType';
            var Region = $("#RegionConsignReject").val();
            var Status = $("#RegionStatus").val();
            var FromDate = moment($('#FromDateConsignReject').datepicker('getDate')).format("YYYY-MM-DD");
            var ToDate = moment($('#ToDateConsignReject').datepicker('getDate')).format("YYYY-MM-DD");

            let myObject = { ReportType, FromDate, ToDate, Region, Status };

            var url = '@Url.Action("ManageConsignReject", "ManagementReports")?' + $.param(myObject);
            window.open(url, '_blank');
        }

        function ClearControlsConsignReject() {
            $("#RegionConsignReject").get(0).selectedIndex = 0;
            $("#RegionStatus").get(0).selectedIndex = 0;
            $("#FromDateConsignReject").val("");
            $("#ToDateConsignReject").val("");
            $("#spnErrorFromDateConsignReject").html("");
            $("#spnErrorToDateConsignReject").html("");
        }

        function ViewReportOutstandingOverRegion() {

            $("#spnErrorFromDateOutstandingOverRegion").html("");

            var IsValid = true;

            if ($("#FromDateOutstandingOverRegion").val() == "") {
                $("#spnErrorFromDateOutstandingOverRegion").html("The Date field is required.");
                IsValid = false;
            }
            if ($("#FromDateOutstandingOverRegion").val() != "" && IsValidDate($("#FromDateOutstandingOverRegion").val()) == false) {
                $("#spnErrorFromDateOutstandingOverRegion").html("Invalid date format.");
                IsValid = false;
            }

            if (!IsValid) return;

            var ReportType = '@ReportType';
            var FromDate = moment($('#FromDateOutstandingOverRegion').datepicker('getDate')).format("YYYY-MM-DD");
            let myObject = { ReportType, FromDate };

            var url = '@Url.Action("ManageOutstandingOverRegion", "ManagementReports")?' + $.param(myObject);
            window.open(url, '_blank');
        }

        function ClearControlsOutstandingOverRegion() {
            $("#FromDateOutstandingOverRegion").val("");
            $("#spnErrorFromDateOutstandingOverRegion").html("");
        }

        function BindBPORailway() {
            $("#BPORailway_ClientWiseRejection").empty();
            $("#BPORailway_ClientWiseRejection").append($('<option value="">--Select--</option>'));

            var ClientType = $("#ClientType_ClientWiseRejection").val();

            if (ClientType != '') {
                $.get("@Url.Action("GetBPORailway", "ManagementReports")", { ClientType }, function (response) {
                    if (response != null) {
                        $("#BPORailway_ClientWiseRejection").empty();
                        $("#BPORailway_ClientWiseRejection").append($('<option value="">--Select--</option>'));
                        $.each(response, function (ind, val) {
                            $("#BPORailway_ClientWiseRejection").append($('<option></option>').val(val.Value).html(val.Text));
                        });
                    }
                });
            }
        }

        function ViewReportClientWiseRejection() {

            $("#spnErrorClientTypeClientWiseRejection").html("");
            $("#spnErrorBPORailwayClientWiseRejection").html("");
            $("#spnErrorFromDateClientWiseRejection").html("");
            $("#spnErrorToDateClientWiseRejection").html("");

            var IsValid = true;

            if ($("#ClientType_ClientWiseRejection").val() == "") {
                $("#spnErrorClientTypeClientWiseRejection").html("The Client field is required.");
                IsValid = false;
            }
            if ($("#BPORailway_ClientWiseRejection").val() == "") {
                $("#spnErrorBPORailwayClientWiseRejection").html("The field is required.");
                IsValid = false;
            }
            if ($("#FromDateClientWiseRejection").val() == "") {
                $("#spnErrorFromDateClientWiseRejection").html("The From Date field is required.");
                IsValid = false;
            }
            if ($("#ToDateClientWiseRejection").val() == "") {
                $("#spnErrorToDateClientWiseRejection").html("The To Date field is required.");
                IsValid = false;
            }

            if ($("#FromDateClientWiseRejection").val() != "" && IsValidDate($("#FromDateClientWiseRejection").val()) == false) {
                $("#spnErrorFromDateClientWiseRejection").html("Invalid date format.");
                IsValid = false;
            }
            if ($("#ToDateClientWiseRejection").val() != "" && IsValidDate($("#ToDateClientWiseRejection").val()) == false) {
                $("#spnErrorToDateClientWiseRejection").html("Invalid date format.");
                IsValid = false;
            }

            if (!IsValid) return;

            var ReportType = '@ReportType';
            var FromDate = moment($('#FromDateClientWiseRejection').datepicker('getDate')).format("YYYY-MM-DD");
            var ToDate = moment($('#ToDateClientWiseRejection').datepicker('getDate')).format("YYYY-MM-DD");
            var ClientType = $("#ClientType_ClientWiseRejection").val();
            var BPORailway = $("#BPORailway_ClientWiseRejection").val();

            let myObject = { ReportType, FromDate, ToDate, ClientType, BPORailway };

            var url = '@Url.Action("ManageClientWiseRejection", "ManagementReports")?' + $.param(myObject);
            window.open(url, '_blank');
        }

        function ClearControlsClientWiseRejection() {
            $("#ClientType_ClientWiseRejection").get(0).selectedIndex = 0;
            BindBPORailway();
            $("#FromDateClientWiseRejection").val("");
            $("#ToDateClientWiseRejection").val("");
            $("#spnErrorClientTypeClientWiseRejection").html("");
            $("#spnErrorBPORailwayClientWiseRejection").html("");
            $("#spnErrorFromDateClientWiseRejection").html("");
            $("#spnErrorToDateClientWiseRejection").html("");
        }

        $('input[type=radio][name="NonConformitySummaryReport"]').change(function () {
            if (this.value == "SummaryReport3") {
                $("#lblFromMonthNonConformity").text("Month");
                $("#lblFromYearNonConformity").text("Year");
                $(".NonConformitySummaryReportTo").css("display", "none");
            }
            else {
                $("#lblFromMonthNonConformity").text("From Month");
                $("#lblFromYearNonConformity").text("From Year");
                $(".NonConformitySummaryReportTo").css("display", "")
            }
        });

        function ViewReportNonConformity() {

            var ReportType = '@ReportType', FromYearMonth = '', ToYearMonth = '', Iecd = '';

            var _NonConformitySummaryReport = $('input[name="NonConformitySummaryReport"]:checked').val();

            FromYearMonth = $("#FromYearNonConformity").val() + ('0'.repeat(2) + $("#FromMonthNonConformity").val()).slice(-2);

            if (_NonConformitySummaryReport == "SummaryReport4") {
                ToYearMonth = $("#ToYearNonConformity").val() + ('0'.repeat(2) + $("#ToMonthNonConformity").val()).slice(-2);
            }

            Iecd = $("#IecdNonConformity").val();

            let myObject = { ReportType, FromYearMonth, ToYearMonth, Iecd };

            var url = '@Url.Action("ManageNonConformity", "ManagementReports")?' + $.param(myObject);
            window.open(url, '_blank');
        }

        function ClearControlsNonConformity() {

            $("input[type=radio][name=NonConformitySummaryReport][value=SummaryReport3]").prop('checked', true);
            $('input[type=radio][name="NonConformitySummaryReport"]').change();

            $("#lblFromMonthNonConformity").text("Month");
            $("#lblFromYearNonConformity").text("Year");
            $(".NonConformitySummaryReportTo").css("display", "none");

            $("#FromMonthNonConformity").get(0).selectedIndex = 0;
            $("#FromYearNonConformity").get(0).selectedIndex = 0;
            $("#ToMonthNonConformity").get(0).selectedIndex = 0;
            $("#ToYearNonConformity").get(0).selectedIndex = 0;
        }

        $('input[type=radio][name="TentativeInspectionCM"]').change(function () {
            if (this.value == "CM3") {
                $(".TentativeInspectionCM").css("display", "none");
            }
            else {
                $(".TentativeInspectionCM").css("display", "")
            }
        });

        function ViewReportTentativeInspection() {

            $("#spnErrorFromDateTentativeInspection").html("");
            $("#spnErrorToDateTentativeInspection").html("");

            var IsValid = true;

            if ($("#FromDateTentativeInspection").val() == "") {
                $("#spnErrorFromDateTentativeInspection").html("The From Date field is required.");
                IsValid = false;
            }
            if ($("#ToDateTentativeInspection").val() == "") {
                $("#spnErrorToDateTentativeInspection").html("The To Date field is required.");
                IsValid = false;
            }

            if ($("#FromDateTentativeInspection").val() != "" && IsValidDate($("#FromDateTentativeInspection").val()) == false) {
                $("#spnErrorFromDateTentativeInspection").html("Invalid date format.");
                IsValid = false;
            }
            if ($("#ToDateTentativeInspection").val() != "" && IsValidDate($("#ToDateTentativeInspection").val()) == false) {
                $("#spnErrorToDateTentativeInspection").html("Invalid date format.");
                IsValid = false;
            }

            if (!IsValid) return;

            var ReportType = '@ReportType';
            var FromDate = moment($('#FromDateTentativeInspection').datepicker('getDate')).format("YYYY-MM-DD");
            var ToDate = moment($('#ToDateTentativeInspection').datepicker('getDate')).format("YYYY-MM-DD");

            var ParticularCM = '', SortedOn = '';

            var _CM = $('input[name="TentativeInspectionCM"]:checked').val();
            var SortedOn = $('input[name="SortedOn"]:checked').val();

            if (_CM == "CM4") ParticularCM = $("#ParticularCM2").val();

            let myObject = { ReportType, FromDate, ToDate, ParticularCM, SortedOn };

            var url = '@Url.Action("ManageTentativeInspection", "ManagementReports")?' + $.param(myObject);
            window.open(url, '_blank');
        }

        function ClearControlsTentativeInspection() {
            $("#FromDateTentativeInspection").val("");
            $("#ToDateTentativeInspection").val("");
            $("input[type=radio][name=TentativeInspectionCM][value=CM3]").prop('checked', true);
            $(".TentativeInspectionCM").css("display", "none");
            $("#ParticularCM2").get(0).selectedIndex = 0;
            $("input[type=radio][name=SortedOn][value=InspFee]").prop('checked', true);

            $("#spnErrorFromDateTentativeInspection").html("");
            $("#spnErrorToDateTentativeInspection").html("");
        }

        function ViewReportCallRemarking() {

            $("#spnErrorFromDateCallRemarking").html("");
            $("#spnErrorToDateCallRemarking").html("");

            var IsValid = true;

            if ($("#FromDateCallRemarking").val() == "") {
                $("#spnErrorFromDateCallRemarking").html("The From Date field is required.");
                IsValid = false;
            }
            if ($("#ToDateCallRemarking").val() == "") {
                $("#spnErrorToDateCallRemarking").html("The To Date field is required.");
                IsValid = false;
            }

            if ($("#FromDateCallRemarking").val() != "" && IsValidDate($("#FromDateCallRemarking").val()) == false) {
                $("#spnErrorFromDateCallRemarking").html("Invalid date format.");
                IsValid = false;
            }
            if ($("#ToDateCallRemarking").val() != "" && IsValidDate($("#ToDateCallRemarking").val()) == false) {
                $("#spnErrorToDateCallRemarking").html("Invalid date format.");
                IsValid = false;
            }

            if (!IsValid) return;

            var ReportType = '@ReportType';
            var FromDate = moment($('#FromDateCallRemarking').datepicker('getDate')).format("YYYY-MM-DD");
            var ToDate = moment($('#ToDateCallRemarking').datepicker('getDate')).format("YYYY-MM-DD");
            var CallRemarkingDate = $('input[name="CallRemarkingDate"]:checked').val();
            var CallsStatus = $("#CallsStatus").val();

            let myObject = { ReportType, FromDate, ToDate, CallRemarkingDate, CallsStatus };

            var url = '@Url.Action("ManageCallRemarking", "ManagementReports")?' + $.param(myObject);
            window.open(url, '_blank');
        }

        function ClearControlsCallRemarking() {
            $("#FromDateCallRemarking").val("");
            $("#ToDateCallRemarking").val("");
            $("input[type=radio][name=CallRemarkingDate][value=InitiatedDate]").prop('checked', true);
            $("#CallsStatus").get(0).selectedIndex = 0;
            $("#spnErrorFromDateCallRemarking").html("");
            $("#spnErrorToDateCallRemarking").html("");
        }

    </script>
}
