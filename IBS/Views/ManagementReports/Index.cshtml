@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor;
@using System.Web;
@using IBS.Helper;

@{
    string Region = ViewBag.Region;
    string ReportType = !string.IsNullOrEmpty(HttpContextAccessor.HttpContext.Request.Query["ReportType"]) ? Convert.ToString(HttpContextAccessor.HttpContext.Request.Query["ReportType"]) : "";
    string ReportTitle = EnumUtility<Enums.ManagementReportsTitle>.GetDescriptionByKey(ReportType);
    ViewData["Title"] = ReportTitle;
    string cancelUrl = Url.Action("Index?ReportType=" + ReportType, "ManagementReports");
}

<div class="list-inner">
    <div class="tast-list">
        <h2>@ReportTitle</h2>
    </div>
</div>
<div class="task-listinput">
    <div class="accordion-body">
        <div class="report1" style="display: none">
            <form role="form" asp-controller="ManagementReports" asp-action="ManageReportData" id="frmReport1">
                <input type="hidden" id="hdnReportType" name="hdnReportType" />
                <input type="hidden" id="hdnFromDate" name="hdnFromDate" />
                <input type="hidden" id="hdnToDate" name="hdnToDate" />
                <div class="task-inner row my-0">
                    <div class="col-md-3">
                        <div class="input-search">
                            <label for="FromDate">For The Period From</label>
                            <input type="text" class="datepicker" id="FromDate" placeholder="DD/MM/YYYY" />
                            <span class="text-danger field-validation-error" id="spnErrorFromDate"></span>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="input-search">
                            <label for="ToDate">To</label>
                            <input type="text" class="datepicker" id="ToDate" placeholder="DD/MM/YYYY" />
                            <span class="text-danger field-validation-error" id="spnErrorToDate"></span>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="savenext-btn btnAlign">
                            <button type="button" class="save-btn active" onclick="SubmitDataReport1();">Submit</button>
                            <button type="button" class="reset-btn" onclick="location.href='@Html.Raw(@HttpUtility.UrlDecode(cancelUrl))'">Clear</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <div class="RWB" style="display: none">
            <form role="form" asp-controller="ManagementReports" asp-action="ManageReportData" id="frmRWB">
                <input type="hidden" id="hdnReportType" name="hdnReportType" />
                <input type="hidden" id="hdnFromYearMonth" name="hdnFromYearMonth" />
                <input type="hidden" id="hdnToYearMonth" name="hdnToYearMonth" />
                <div class="task-inner row">
                    <div class="col-md-12 mb-3">
                        <div class="custom-readio">
                            <div class="company-checkbox">
                                <div class="remember">
                                    <div class="remecheckbox">
                                        <input type="radio" id="SummaryReport1" name="RWBSummaryReport" value="SummaryReport1" checked>
                                        <label for="SummaryReport1">Summary Report For the Month</label>
                                    </div>
                                </div>
                                <div c lass="remember">
                                    <div class="remecheckbox">
                                        <input type="radio" id="SummaryReport2" name="RWBSummaryReport" value="SummaryReport2">
                                        <label for="SummaryReport2">Summary Report For the Given Period</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2 mb-3">
                        <label for="FromMonth" id="lblFromMonth">Month</label> <br />
                        @Html.DropDownList("FromMonth", Common.GetMonths())
                    </div>
                    <div class="col-md-2 mb-3">
                        <label for="FromYear" id="lblFromYear">Year</label> <br />
                        @Html.DropDownList("FromYear", Common.GetYears())
                    </div>
                    <div class="col-md-2 mb-3 RWBSummaryReportTo" style="display: none">
                        <label for="ToMonth">To Month</label> <br />
                        @Html.DropDownList("ToMonth", Common.GetMonths())
                    </div>
                    <div class="col-md-2 mb-3 RWBSummaryReportTo" style="display: none">
                        <label for="ToYear">To Year</label> <br />
                        @Html.DropDownList("ToYear", Common.GetYears())
                    </div>
                    <div class="col-md-3">
                        <div class="savenext-btn btnAlign">
                            <button type="button" class="save-btn active" onclick="SubmitDataRWB();">Submit</button>
                            <button type="button" class="reset-btn" onclick="location.href='@Html.Raw(@HttpUtility.UrlDecode(cancelUrl))'">Clear</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <div class="RWCO" style="display: none">
            <form role="form" asp-controller="ManagementReports" asp-action="ManageReportData" id="frmRWCO">
                <input type="hidden" id="hdnReportType" name="hdnReportType" />
                <input type="hidden" id="hdnFromDate" name="hdnFromDate" />
                <input type="hidden" id="hdnOutstanding" name="hdnOutstanding" />
                <div class="task-inner row my-0">
                    <div class="col-md-4 mb-3">
                        <div class="input-search">
                            <label for="FromDate_RWCO">Client wise Outstanding Statement as on</label>
                            <input type="text" class="datepicker" id="FromDate_RWCO" placeholder="DD/MM/YYYY" />
                            <span class="text-danger field-validation-error" id="spnErrorFromDate_RWCO"></span>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="custom-readio">
                            <div class="company-checkbox">
                                <div class="remember">
                                    <div class="remecheckbox">
                                        <input type="radio" id="ClientWiseOutstanding1" name="ClientWiseOutstanding" value="1" checked>
                                        <label for="ClientWiseOutstanding1">Client Wise</label>
                                    </div>
                                </div>
                                <div c lass="remember">
                                    <div class="remecheckbox">
                                        <input type="radio" id="ClientWiseOutstanding2" name="ClientWiseOutstanding" value="2">
                                        <label for="ClientWiseOutstanding2">Sorted on Outstanding(Outstanding amount is greater then zero OR Total Suspense is greater then zero)</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="savenext-btn btnAlign">
                            <button type="button" class="save-btn active" onclick="SubmitDataRWCO();">Submit</button>
                            <button type="button" class="reset-btn" onclick="location.href='@Html.Raw(@HttpUtility.UrlDecode(cancelUrl))'">Clear</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <div class="SuperSurprise" style="display: none">
            <form role="form" asp-controller="ManagementReports" asp-action="ManageReportData" id="frmSuperSurprise">
                <input type="hidden" id="hdnReportType" name="hdnReportType" />
                <input type="hidden" id="hdnFromDate" name="hdnFromDate" />
                <input type="hidden" id="hdnToDate" name="hdnToDate" />
                <input type="hidden" id="hdnParticularCM" name="hdnParticularCM" />
                <input type="hidden" id="hdnParticularSector" name="hdnParticularSector" />
                <div class="task-inner row my-0">
                    <div class="col-md-3 mb-3">
                        <div class="input-search">
                            <label for="FromDateSuperSurprise">For The Period From</label>
                            <input type="text" class="datepicker" id="FromDateSuperSurprise" placeholder="DD/MM/YYYY" />
                            <span class="text-danger field-validation-error" id="spnErrorFromDateSuperSurprise"></span>
                        </div>
                    </div>
                    <div class="col-md-3 mb-3">
                        <div class="input-search">
                            <label for="ToDateSuperSurprise">To</label>
                            <input type="text" class="datepicker" id="ToDateSuperSurprise" placeholder="DD/MM/YYYY" />
                            <span class="text-danger field-validation-error" id="spnErrorToDateSuperSurprise"></span>
                        </div>
                    </div>
                    <div class="col-md-12 mb-3">
                        <div class="custom-readio">
                            <div class="company-checkbox">
                                <div class="remember">
                                    <div class="remecheckbox">
                                        <input type="radio" id="CM1" name="CM" value="CM1" checked>
                                        <label for="CM1">All CM</label>
                                    </div>
                                </div>
                                <div c lass="remember">
                                    <div class="remecheckbox">
                                        <input type="radio" id="CM2" name="CM" value="CM2">
                                        <label for="CM2">Particular CM</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 mb-3 CM" style="display: none;">
                        @Html.DropDownList("ParticularCM", Common.GetControllingOfficers(Region))
                    </div>
                    <div class="col-md-12 mb-3">
                        <div class="custom-readio">
                            <div class="company-checkbox">
                                <div class="remember">
                                    <div class="remecheckbox">
                                        <input type="radio" id="Sector1" name="Sector" value="Sector1" checked>
                                        <label for="Sector1">All scope of sector where Item is covered</label>
                                    </div>
                                </div>
                                <div c lass="remember">
                                    <div class="remecheckbox">
                                        <input type="radio" id="Sector2" name="Sector" value="Sector2">
                                        <label for="Sector2">Particular scope of sector where Item is covered</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 mb-3 Sector" style="display: none;">
                        @Html.DropDownList("ParticularSector",  new SelectList(Common.GetScopeOfsector() , "Value", "Text"))
                    </div>
                    <div class="col-md-12">
                        <div class="savenext-btn btnAlign">
                            <button type="button" class="save-btn active" onclick="SubmitDataSuperSurprise();">Submit</button>
                            <button type="button" class="reset-btn" onclick="location.href='@Html.Raw(@HttpUtility.UrlDecode(cancelUrl))'">Clear</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <div class="ConsignReject" style="display: none">
            <form role="form" asp-controller="ManagementReports" asp-action="ManageReportData" id="frmConsignReject">
                <input type="hidden" id="hdnReportType" name="hdnReportType" />
                <input type="hidden" id="hdnFromDate" name="hdnFromDate" />
                <input type="hidden" id="hdnToDate" name="hdnToDate" />
                <input type="hidden" id="hdnRegion" name="hdnRegion" />
                <input type="hidden" id="hdnStatus" name="hdnStatus" />
                <div class="task-inner row my-0">
                    <div class="col-md-3">
                        <label for="RegionConsignReject">For The Region</label>
                        @Html.DropDownList("RegionConsignReject", new SelectList(Common.GetRegion() , "Value", "Text"), "--All--")
                    </div>
                    <div class="col-md-3">
                        <label for="RegionStatus">Status</label>
                        @Html.DropDownList("RegionStatus", new SelectList(Common.GetOnlineStatus() , "Value", "Text"), "--All--")
                    </div>
                    <div class="col-md-3">
                        <div class="input-search">
                            <label for="FromDateConsignReject">For The Period From</label>
                            <input type="text" class="datepicker" id="FromDateConsignReject" placeholder="DD/MM/YYYY" />
                            <span class="text-danger field-validation-error" id="spnErrorFromDateConsignReject"></span>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="input-search">
                            <label for="ToDateConsignReject">To</label>
                            <input type="text" class="datepicker" id="ToDateConsignReject" placeholder="DD/MM/YYYY" />
                            <span class="text-danger field-validation-error" id="spnErrorToDateConsignReject"></span>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="savenext-btn btnAlign">
                            <button type="button" class="save-btn active" onclick="SubmitDataConsignReject();">Submit</button>
                            <button type="button" class="reset-btn" onclick="location.href='@Html.Raw(@HttpUtility.UrlDecode(cancelUrl))'">Clear</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <div class="OutstandingOverRegion" style="display: none">
            <form role="form" asp-controller="ManagementReports" asp-action="ManageReportData" id="frmOutstandingOverRegion">
                <input type="hidden" id="hdnReportType" name="hdnReportType" />
                <input type="hidden" id="hdnFromDate" name="hdnFromDate" />
                <div class="task-inner row my-0">
                    <div class="col-md-4 mb-3">
                        <div class="input-search">
                            <label for="FromDateOutstandingOverRegion">Client wise Outstanding Statement as on</label>
                            <input type="text" class="datepicker" id="FromDateOutstandingOverRegion" placeholder="DD/MM/YYYY" />
                            <span class="text-danger field-validation-error" id="spnErrorFromDateOutstandingOverRegion"></span>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="savenext-btn btnAlign">
                            <button type="button" class="save-btn active" onclick="SubmitDataOutstandingOverRegion();">Submit</button>
                            <button type="button" class="reset-btn" onclick="location.href='@Html.Raw(@HttpUtility.UrlDecode(cancelUrl))'">Clear</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <div class="ClientWiseRejection" style="display: none">
            <form role="form" asp-controller="ManagementReports" asp-action="ManageReportData" id="frmClientWiseRejection">
                <input type="hidden" id="hdnReportType" name="hdnReportType" />
                <input type="hidden" id="hdnFromDate" name="hdnFromDate" />
                <input type="hidden" id="hdnToDate" name="hdnToDate" />
                <input type="hidden" id="hdnClientType" name="hdnClientType" />
                <input type="hidden" id="hdnBPORailway" name="hdnBPORailway" />
                <div class="task-inner row my-0">
                    <div class="col-md-3 mb-3">
                        <label for="ClientType_ClientWiseRejection">Client</label>
                        @Html.DropDownList("ClientType_ClientWiseRejection", new SelectList(Common.ClientType() , "Value", "Text"), "--Select--", new { @onchange = "BindBPORailway();" })
                        <span class="text-danger field-validation-error" id="spnErrorClientTypeClientWiseRejection"></span>
                    </div>
                    <div class="col-md-3 mb-3" style="margin-top: 34px;">
                        @Html.DropDownList("BPORailway_ClientWiseRejection", Common.GetBPORailway(""),  "--Select--")
                        <span class="text-danger field-validation-error" id="spnErrorBPORailwayClientWiseRejection"></span>
                    </div>
                    <div class="col-md-3 mb-3">
                        <div class="input-search">
                            <label for="FromDateClientWiseRejection">For The Period From</label>
                            <input type="text" class="datepicker" id="FromDateClientWiseRejection" placeholder="DD/MM/YYYY" />
                            <span class="text-danger field-validation-error" id="spnErrorFromDateClientWiseRejection"></span>
                        </div>
                    </div>
                    <div class="col-md-3 mb-3">
                        <div class="input-search">
                            <label for="ToDateClientWiseRejection">To</label>
                            <input type="text" class="datepicker" id="ToDateClientWiseRejection" placeholder="DD/MM/YYYY" />
                            <span class="text-danger field-validation-error" id="spnErrorToDateClientWiseRejection"></span>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="savenext-btn">
                            <button type="button" class="save-btn active" onclick="SubmitDataClientWiseRejection();">Submit</button>
                            <button type="button" class="reset-btn" onclick="location.href='@Html.Raw(@HttpUtility.UrlDecode(cancelUrl))'">Clear</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <div class="NonConformity" style="display: none">
            <form role="form" asp-controller="ManagementReports" asp-action="ManageReportData" id="frmNonConformity">
                <input type="hidden" id="hdnReportType" name="hdnReportType" />
                <input type="hidden" id="hdnFromYearMonth" name="hdnFromYearMonth" />
                <input type="hidden" id="hdnToYearMonth" name="hdnToYearMonth" />
                <input type="hidden" id="hdnIecd" name="hdnIecd" />
                <div class="task-inner row">
                    <div class="col-md-12 mb-3">
                        <div class="custom-readio">
                            <div class="company-checkbox">
                                <div class="remember">
                                    <div class="remecheckbox">
                                        <input type="radio" id="SummaryReport3" name="NonConformitySummaryReport" value="SummaryReport3" checked>
                                        <label for="SummaryReport3">Summary Report For the Month</label>
                                    </div>
                                </div>
                                <div c lass="remember">
                                    <div class="remecheckbox">
                                        <input type="radio" id="SummaryReport4" name="NonConformitySummaryReport" value="SummaryReport4">
                                        <label for="SummaryReport4">Summary Report For the Given Period</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <label for="FromMonthNonConformity" id="lblFromMonthNonConformity">Month</label> <br />
                        @Html.DropDownList("FromMonthNonConformity", Common.GetMonths())
                    </div>
                    <div class="col-md-2">
                        <label for="FromYearNonConformity" id="lblFromYearNonConformity">Year</label> <br />
                        @Html.DropDownList("FromYearNonConformity", Common.GetYears())
                    </div>
                    <div class="col-md-2 NonConformitySummaryReportTo" style="display: none">
                        <label for="ToMonthNonConformity">To Month</label> <br />
                        @Html.DropDownList("ToMonthNonConformity", Common.GetMonths())
                    </div>
                    <div class="col-md-2 NonConformitySummaryReportTo" style="display: none">
                        <label for="ToYearNonConformity">To Year</label> <br />
                        @Html.DropDownList("ToYearNonConformity", Common.GetYears())
                    </div>
                    <div class="col-md-4">
                        <label for="IecdNonConformity">IE</label> <br />
                        @Html.DropDownList("IecdNonConformity", Common.GetIEIEToWhomIssued(Region), new { @class = "" })
                    </div>
                    <div class="col-md-3">
                        <div class="savenext-btn btnAlign">
                            <button type="button" class="save-btn active" onclick="SubmitDataNonConformity();">Submit</button>
                            <button type="button" class="reset-btn" onclick="location.href='@Html.Raw(@HttpUtility.UrlDecode(cancelUrl))'">Clear</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <div class="TentativeInspection" style="display: none">
            <form role="form" asp-controller="ManagementReports" asp-action="ManageReportData" id="frmTentativeInspection">
                <input type="hidden" id="hdnReportType" name="hdnReportType" />
                <input type="hidden" id="hdnFromDate" name="hdnFromDate" />
                <input type="hidden" id="hdnToDate" name="hdnToDate" />
                <input type="hidden" id="hdnParticularCM" name="hdnParticularCM" />
                <input type="hidden" id="hdnSortedOn" name="hdnSortedOn" />
                <div class="task-inner row my-0">
                    <div class="col-md-3 mb-3">
                        <div class="input-search">
                            <label for="FromDateTentativeInspection">For The Period From</label>
                            <input type="text" class="datepicker" id="FromDateTentativeInspection" placeholder="DD/MM/YYYY" />
                            <span class="text-danger field-validation-error" id="spnErrorFromDateTentativeInspection"></span>
                        </div>
                    </div>
                    <div class="col-md-3 mb-3">
                        <div class="input-search">
                            <label for="ToDateTentativeInspection">To</label>
                            <input type="text" class="datepicker" id="ToDateTentativeInspection" placeholder="DD/MM/YYYY" />
                            <span class="text-danger field-validation-error" id="spnErrorToDateTentativeInspection"></span>
                        </div>
                    </div>
                    <div class="col-md-12 mb-3">
                        <div class="custom-readio">
                            <div class="company-checkbox">
                                <div class="remember">
                                    <div class="remecheckbox">
                                        <input type="radio" id="CM3" name="TentativeInspectionCM" value="CM3" checked>
                                        <label for="CM3">All CM</label>
                                    </div>
                                </div>
                                <div c lass="remember">
                                    <div class="remecheckbox">
                                        <input type="radio" id="CM4" name="TentativeInspectionCM" value="CM4">
                                        <label for="CM4">Particular CM</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 mb-3 TentativeInspectionCM" style="display: none;">
                        @Html.DropDownList("ParticularCM2", Common.GetControllingOfficers(Region))
                    </div>
                    <div class="col-md-12">
                        <div class="custom-readio">
                            <label>Report To be Sorted On</label>
                            <div class="company-checkbox">
                                <div class="remember">
                                    <div class="remecheckbox">
                                        <input type="radio" id="InspFee" name="SortedOn" value="InspFee" checked>
                                        <label for="InspFee">Insp Fee</label>
                                    </div>
                                </div>
                                <div class="remember">
                                    <div class="remecheckbox">
                                        <input type="radio" id="DeliveryPeriod" name="SortedOn" value="DeliveryPeriod">
                                        <label for="DeliveryPeriod">Delivery Period</label>
                                    </div>
                                </div>
                                <div class="remember">
                                    <div class="remecheckbox">
                                        <input type="radio" id="DesireDate" name="SortedOn" value="DesireDate">
                                        <label for="DesireDate">Desire Date</label>
                                    </div>
                                </div>
                                <div class="remember">
                                    <div class="remecheckbox">
                                        <input type="radio" id="PendingSince" name="SortedOn" value="PendingSince">
                                        <label for="PendingSince">Pending Since</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="savenext-btn btnAlign">
                            <button type="button" class="save-btn active" onclick="SubmitDataTentativeInspection();">Submit</button>
                            <button type="button" class="reset-btn" onclick="location.href='@Html.Raw(@HttpUtility.UrlDecode(cancelUrl))'">Clear</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <div class="CallRemarking" style="display: none">
            <form role="form" asp-controller="ManagementReports" asp-action="ManageReportData" id="frmCallRemarking">
                <input type="hidden" id="hdnReportType" name="hdnReportType" />
                <input type="hidden" id="hdnFromDate" name="hdnFromDate" />
                <input type="hidden" id="hdnToDate" name="hdnToDate" />
                <input type="hidden" id="hdnCallRemarkingDate" name="hdnCallRemarkingDate" />
                <input type="hidden" id="hdnCallsStatus" name="hdnCallsStatus" />
                <div class="task-inner row my-0">
                    <div class="col-md-3 mb-3">
                        <div class="input-search">
                            <label for="FromDateCallRemarking">For The Period From</label>
                            <input type="text" class="datepicker" id="FromDateCallRemarking" placeholder="DD/MM/YYYY" />
                            <span class="text-danger field-validation-error" id="spnErrorFromDateCallRemarking"></span>
                        </div>
                    </div>
                    <div class="col-md-3 mb-3">
                        <div class="input-search">
                            <label for="ToDateCallRemarking">To</label>
                            <input type="text" class="datepicker" id="ToDateCallRemarking" placeholder="DD/MM/YYYY" />
                            <span class="text-danger field-validation-error" id="spnErrorToDateCallRemarking"></span>
                        </div>
                    </div>
                    <div class="col-md-6 mb-3 btnAlign">
                        <div class="custom-readio">
                            <div class="company-checkbox">
                                <div class="remember">
                                    <div class="remecheckbox">
                                        <input type="radio" id="InitiatedDate" name="CallRemarkingDate" value="InitiatedDate" checked>
                                        <label for="InitiatedDate">By Remark Initiated Date</label>
                                    </div>
                                </div>
                                <div c lass="remember">
                                    <div class="remecheckbox">
                                        <input type="radio" id="ApprovedDate" name="CallRemarkingDate" value="ApprovedDate">
                                        <label for="ApprovedDate">By Remark Approved Date</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 mb-3">
                        <label for="CallsStatus">Status of Calls</label>
                        @Html.DropDownList("CallsStatus", new SelectList(Common.GetCallsStatus() , "Value", "Text"), "--All--")
                    </div>
                    <div class="col-md-3">
                        <div class="savenext-btn btnAlign">
                            <button type="button" class="save-btn active" onclick="SubmitDataCallRemarking();">Submit</button>
                            <button type="button" class="reset-btn" onclick="location.href='@Html.Raw(@HttpUtility.UrlDecode(cancelUrl))'">Clear</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <div class="PendingCalls" style="display: none">
            <form role="form" asp-controller="ManagementReports" asp-action="ManageReportData" id="frmPendingCalls">
                <input type="hidden" id="hdnReportType" name="hdnReportType" />
            </form>
        </div>
        <div class="CallDetailsDashborad" style="display: none">
            <form role="form" asp-controller="ManagementReports" asp-action="ManageReportData" id="frmCallDetailsDashborad">
                <input type="hidden" id="hdnReportType" name="hdnReportType" />
            </form>
        </div>
    </div>
</div>

@section scripts{
    <partial name="_DataTablesScriptsPartial" />
    <partial name="_ValidationScriptsPartial" />

    <script type="text/javascript">

        $(document).ready(function () {
            if ('@ReportType' == 'IE_X' || '@ReportType' == 'CLUSTER_X' || '@ReportType' == 'ICSUBMIT' || '@ReportType' == 'CALLSWITHOUTIC' || '@ReportType' == 'SUPSURPSUMM' || '@ReportType' == 'COUNTIC') {
                $(".report1").css("display", "");
            }
            else if ('@ReportType' == 'RWB') {
                $(".RWB").css("display", "");
            }
            else if ('@ReportType' == 'R') {
                $(".RWCO").css("display", "");
            }
            else if ('@ReportType' == 'SUPSUR') {
                $(".SuperSurprise").css("display", "");
            }
            else if ('@ReportType' == 'CONSIGN_REJECT') {
                $(".ConsignReject").css("display", "");
                $("#RegionConsignReject option[value='Q']").remove();
            }
            else if ('@ReportType' == 'X') {
                $(".OutstandingOverRegion").css("display", "");
            }
            else if ('@ReportType' == 'CLIENTWISEREJ') {
                $(".ClientWiseRejection").css("display", "");
            }
            else if ('@ReportType' == 'NON_CONFORMITY') {
                $(".NonConformity").css("display", "");
            }
            else if ('@ReportType' == 'PENDING_CALLS') {
                var ReportType = '@ReportType';
                $('#frmPendingCalls').find("#hdnReportType").val(ReportType);
                $("#frmPendingCalls").submit();
            }
            else if ('@ReportType' == 'HIGHVALUE') {
                $(".TentativeInspection").css("display", "");
            }
            else if ('@ReportType' == 'REMARKING') {
                $(".CallRemarking").css("display", "");
            }
            else if ('@ReportType' == 'CALL_DETAILS') {
                var ReportType = '@ReportType';
                $('#frmCallDetailsDashborad').find("#hdnReportType").val(ReportType);
                $("#frmCallDetailsDashborad").submit();
            }
        });

        function SubmitDataReport1() {
            $("#spnErrorFromDate").html("");
            $("#spnErrorToDate").html("");

            var IsValid = true;

            if ($("#FromDate").val() == "") {
                $("#spnErrorFromDate").html("The From Date field is required.");
                IsValid = false;
            }
            if ($("#ToDate").val() == "") {
                $("#spnErrorToDate").html("The To Date field is required.");
                IsValid = false;
            }

            if ($("#FromDate").val() != "" && IsValidDate($("#FromDate").val()) == false) {
                $("#spnErrorFromDate").html("Invalid date format.");
                IsValid = false;
            }
            if ($("#ToDate").val() != "" && IsValidDate($("#ToDate").val()) == false) {
                $("#spnErrorToDate").html("Invalid date format.");
                IsValid = false;
            }

            if (!IsValid) return;

            var ReportType = '@ReportType';
            var FromDate = moment($('#FromDate').datepicker('getDate')).format("YYYY-MM-DD");
            var ToDate = moment($('#ToDate').datepicker('getDate')).format("YYYY-MM-DD");

            $('#frmReport1').find("#hdnReportType").val(ReportType);
            $('#frmReport1').find("#hdnFromDate").val(FromDate);
            $('#frmReport1').find("#hdnToDate").val(ToDate);

            $("#frmReport1").submit();
        }

        $('input[type=radio][name="RWBSummaryReport"]').change(function () {
            if (this.value == "SummaryReport1") {
                $("#lblFromMonth").text("Month");
                $("#lblFromYear").text("Year");
                $(".RWBSummaryReportTo").css("display", "none");
            }
            else {
                $("#lblFromMonth").text("From Month");
                $("#lblFromYear").text("From Year");
                $(".RWBSummaryReportTo").css("display", "")
            }
        });

        $('input[type=radio][name="CM"]').change(function () {
            if (this.value == "CM1") {
                $(".CM").css("display", "none");
            }
            else {
                $(".CM").css("display", "")
            }
        });

        $('input[type=radio][name="Sector"]').change(function () {
            if (this.value == "Sector1") {
                $(".Sector").css("display", "none");
            }
            else {
                $(".Sector").css("display", "")
            }
        });

        function SubmitDataRWB() {
            var ReportType = '@ReportType', FromYearMonth = '', ToYearMonth = '';

            var _RWBSummaryReport = $('input[name="RWBSummaryReport"]:checked').val();

            FromYearMonth = $("#FromYear").val() + ('0'.repeat(2) + $("#FromMonth").val()).slice(-2);

            if (_RWBSummaryReport == "SummaryReport2") {
                ToYearMonth = $("#ToYear").val() + ('0'.repeat(2) + $("#ToMonth").val()).slice(-2);
            }

            $('#frmRWB').find("#hdnReportType").val(ReportType);
            $('#frmRWB').find("#hdnFromYearMonth").val(FromYearMonth);
            $('#frmRWB').find("#hdnToYearMonth").val(ToYearMonth);

            $("#frmRWB").submit();

        }

        function SubmitDataRWCO() {
            $("#spnErrorFromDate_RWCO").html("");

            var IsValid = true;

            if ($("#FromDate_RWCO").val() == "") {
                $("#spnErrorFromDate_RWCO").html("The Date field is required.");
                IsValid = false;
            }
            if ($("#FromDate_RWCO").val() != "" && IsValidDate($("#FromDate_RWCO").val()) == false) {
                $("#spnErrorFromDate_RWCO").html("Invalid date format.");
                IsValid = false;
            }

            if (!IsValid) return;

            var ReportType = '@ReportType';
            var FromDate = moment($('#FromDate_RWCO').datepicker('getDate')).format("YYYY-MM-DD");
            var Outstanding = $('input[name="ClientWiseOutstanding"]:checked').val();

            $('#frmRWCO').find("#hdnReportType").val(ReportType);
            $('#frmRWCO').find("#hdnFromDate").val(FromDate);
            $('#frmRWCO').find("#hdnOutstanding").val(Outstanding);

            $("#frmRWCO").submit();

        }

        function SubmitDataSuperSurprise() {

            $("#spnErrorFromDateSuperSurprise").html("");
            $("#spnErrorToDateSuperSurprise").html("");

            var IsValid = true;

            if ($("#FromDateSuperSurprise").val() == "") {
                $("#spnErrorFromDateSuperSurprise").html("The From Date field is required.");
                IsValid = false;
            }
            if ($("#ToDateSuperSurprise").val() == "") {
                $("#spnErrorToDateSuperSurprise").html("The To Date field is required.");
                IsValid = false;
            }

            if ($("#FromDateSuperSurprise").val() != "" && IsValidDate($("#FromDateSuperSurprise").val()) == false) {
                $("#spnErrorFromDateSuperSurprise").html("Invalid date format.");
                IsValid = false;
            }
            if ($("#ToDateSuperSurprise").val() != "" && IsValidDate($("#ToDateSuperSurprise").val()) == false) {
                $("#spnErrorToDateSuperSurprise").html("Invalid date format.");
                IsValid = false;
            }

            if (!IsValid) return;

            var ReportType = '@ReportType';
            var FromDate = moment($('#FromDateSuperSurprise').datepicker('getDate')).format("YYYY-MM-DD");
            var ToDate = moment($('#ToDateSuperSurprise').datepicker('getDate')).format("YYYY-MM-DD");

            var ParticularCM = '', ParticularSector = '';

            var _CM = $('input[name="CM"]:checked').val();
            var _Sector = $('input[name="Sector"]:checked').val();

            if (_CM == "CM2") ParticularCM = $("#ParticularCM").val();
            if (_Sector == "Sector2") ParticularSector = $("#ParticularSector").val();

            $('#frmSuperSurprise').find("#hdnReportType").val(ReportType);
            $('#frmSuperSurprise').find("#hdnFromDate").val(FromDate);
            $('#frmSuperSurprise').find("#hdnToDate").val(ToDate);
            $('#frmSuperSurprise').find("#hdnParticularCM").val(ParticularCM);
            $('#frmSuperSurprise').find("#hdnParticularSector").val(ParticularSector);

            $("#frmSuperSurprise").submit();

        }

        function SubmitDataConsignReject() {

            $("#spnErrorFromDateConsignReject").html("");
            $("#spnErrorToDateConsignReject").html("");

            var IsValid = true;

            if ($("#FromDateConsignReject").val() == "") {
                $("#spnErrorFromDateConsignReject").html("The From Date field is required.");
                IsValid = false;
            }
            if ($("#ToDateConsignReject").val() == "") {
                $("#spnErrorToDateConsignReject").html("The To Date field is required.");
                IsValid = false;
            }

            if ($("#FromDateConsignReject").val() != "" && IsValidDate($("#FromDateConsignReject").val()) == false) {
                $("#spnErrorFromDateConsignReject").html("Invalid date format.");
                IsValid = false;
            }
            if ($("#ToDateConsignReject").val() != "" && IsValidDate($("#ToDateConsignReject").val()) == false) {
                $("#spnErrorToDateConsignReject").html("Invalid date format.");
                IsValid = false;
            }

            if (!IsValid) return;

            var ReportType = '@ReportType';
            var Region = $("#RegionConsignReject").val();
            var Status = $("#RegionStatus").val();
            var FromDate = moment($('#FromDateConsignReject').datepicker('getDate')).format("YYYY-MM-DD");
            var ToDate = moment($('#ToDateConsignReject').datepicker('getDate')).format("YYYY-MM-DD");

            $('#frmConsignReject').find("#hdnReportType").val(ReportType);
            $('#frmConsignReject').find("#hdnFromDate").val(FromDate);
            $('#frmConsignReject').find("#hdnToDate").val(ToDate);
            $('#frmConsignReject').find("#hdnRegion").val(Region);
            $('#frmConsignReject').find("#hdnStatus").val(Status);

            $("#frmConsignReject").submit();
        }

        function SubmitDataOutstandingOverRegion() {

            $("#spnErrorFromDateOutstandingOverRegion").html("");

            var IsValid = true;

            if ($("#FromDateOutstandingOverRegion").val() == "") {
                $("#spnErrorFromDateOutstandingOverRegion").html("The Date field is required.");
                IsValid = false;
            }
            if ($("#FromDateOutstandingOverRegion").val() != "" && IsValidDate($("#FromDateOutstandingOverRegion").val()) == false) {
                $("#spnErrorFromDateOutstandingOverRegion").html("Invalid date format.");
                IsValid = false;
            }

            if (!IsValid) return;

            var ReportType = '@ReportType';
            var FromDate = moment($('#FromDateOutstandingOverRegion').datepicker('getDate')).format("YYYY-MM-DD");

            $('#frmOutstandingOverRegion').find("#hdnReportType").val(ReportType);
            $('#frmOutstandingOverRegion').find("#hdnFromDate").val(FromDate);

            $("#frmOutstandingOverRegion").submit();
        }

        function BindBPORailway() {
            $("#BPORailway_ClientWiseRejection").empty();
            $("#BPORailway_ClientWiseRejection").append($('<option value="">--Select--</option>'));

            var ClientType = $("#ClientType_ClientWiseRejection").val();

            if (ClientType != '') {
                $.get("@Url.Action("GetBPORailway", "ManagementReports")", { ClientType }, function (response) {
                    if (response != null) {
                        $("#BPORailway_ClientWiseRejection").empty();
                        $("#BPORailway_ClientWiseRejection").append($('<option value="">--Select--</option>'));
                        $.each(response, function (ind, val) {
                            $("#BPORailway_ClientWiseRejection").append($('<option></option>').val(val.Value).html(val.Text));
                        });
                    }
                });
            }
        }

        function SubmitDataClientWiseRejection() {

            $("#spnErrorClientTypeClientWiseRejection").html("");
            $("#spnErrorBPORailwayClientWiseRejection").html("");
            $("#spnErrorFromDateClientWiseRejection").html("");
            $("#spnErrorToDateClientWiseRejection").html("");

            var IsValid = true;

            if ($("#ClientType_ClientWiseRejection").val() == "") {
                $("#spnErrorClientTypeClientWiseRejection").html("The Client field is required.");
                IsValid = false;
            }
            if ($("#BPORailway_ClientWiseRejection").val() == "") {
                $("#spnErrorBPORailwayClientWiseRejection").html("The field is required.");
                IsValid = false;
            }
            if ($("#FromDateClientWiseRejection").val() == "") {
                $("#spnErrorFromDateClientWiseRejection").html("The From Date field is required.");
                IsValid = false;
            }
            if ($("#ToDateClientWiseRejection").val() == "") {
                $("#spnErrorToDateClientWiseRejection").html("The To Date field is required.");
                IsValid = false;
            }

            if ($("#FromDateClientWiseRejection").val() != "" && IsValidDate($("#FromDateClientWiseRejection").val()) == false) {
                $("#spnErrorFromDateClientWiseRejection").html("Invalid date format.");
                IsValid = false;
            }
            if ($("#ToDateClientWiseRejection").val() != "" && IsValidDate($("#ToDateClientWiseRejection").val()) == false) {
                $("#spnErrorToDateClientWiseRejection").html("Invalid date format.");
                IsValid = false;
            }

            if (!IsValid) return;

            var ReportType = '@ReportType';
            var FromDate = moment($('#FromDateClientWiseRejection').datepicker('getDate')).format("YYYY-MM-DD");
            var ToDate = moment($('#ToDateClientWiseRejection').datepicker('getDate')).format("YYYY-MM-DD");
            var ClientType = $("#ClientType_ClientWiseRejection").val();
            var BPORailway = $("#BPORailway_ClientWiseRejection").val();

            $('#frmClientWiseRejection').find("#hdnReportType").val(ReportType);
            $('#frmClientWiseRejection').find("#hdnFromDate").val(FromDate);
            $('#frmClientWiseRejection').find("#hdnToDate").val(ToDate);
            $('#frmClientWiseRejection').find("#hdnClientType").val(ClientType);
            $('#frmClientWiseRejection').find("#hdnBPORailway").val(BPORailway);

            $("#frmClientWiseRejection").submit();
        }

        $('input[type=radio][name="NonConformitySummaryReport"]').change(function () {
            if (this.value == "SummaryReport3") {
                $("#lblFromMonthNonConformity").text("Month");
                $("#lblFromYearNonConformity").text("Year");
                $(".NonConformitySummaryReportTo").css("display", "none");
            }
            else {
                $("#lblFromMonthNonConformity").text("From Month");
                $("#lblFromYearNonConformity").text("From Year");
                $(".NonConformitySummaryReportTo").css("display", "")
            }
        });

        function SubmitDataNonConformity() {

            var ReportType = '@ReportType', FromYearMonth = '', ToYearMonth = '', Iecd = '';

            var _NonConformitySummaryReport = $('input[name="NonConformitySummaryReport"]:checked').val();

            FromYearMonth = $("#FromYearNonConformity").val() + ('0'.repeat(2) + $("#FromMonthNonConformity").val()).slice(-2);

            if (_NonConformitySummaryReport == "SummaryReport4") {
                ToYearMonth = $("#ToYearNonConformity").val() + ('0'.repeat(2) + $("#ToMonthNonConformity").val()).slice(-2);
            }

            Iecd = $("#IecdNonConformity").val();

            $('#frmNonConformity').find("#hdnReportType").val(ReportType);
            $('#frmNonConformity').find("#hdnFromYearMonth").val(FromYearMonth);
            $('#frmNonConformity').find("#hdnToYearMonth").val(ToYearMonth);
            $('#frmNonConformity').find("#hdnIecd").val(Iecd);

            $("#frmNonConformity").submit();
        }

        $('input[type=radio][name="TentativeInspectionCM"]').change(function () {
            if (this.value == "CM3") {
                $(".TentativeInspectionCM").css("display", "none");
            }
            else {
                $(".TentativeInspectionCM").css("display", "")
            }
        });

        function SubmitDataTentativeInspection() {

            $("#spnErrorFromDateTentativeInspection").html("");
            $("#spnErrorToDateTentativeInspection").html("");

            var IsValid = true;

            if ($("#FromDateTentativeInspection").val() == "") {
                $("#spnErrorFromDateTentativeInspection").html("The From Date field is required.");
                IsValid = false;
            }
            if ($("#ToDateTentativeInspection").val() == "") {
                $("#spnErrorToDateTentativeInspection").html("The To Date field is required.");
                IsValid = false;
            }

            if ($("#FromDateTentativeInspection").val() != "" && IsValidDate($("#FromDateTentativeInspection").val()) == false) {
                $("#spnErrorFromDateTentativeInspection").html("Invalid date format.");
                IsValid = false;
            }
            if ($("#ToDateTentativeInspection").val() != "" && IsValidDate($("#ToDateTentativeInspection").val()) == false) {
                $("#spnErrorToDateTentativeInspection").html("Invalid date format.");
                IsValid = false;
            }

            if (!IsValid) return;

            var ReportType = '@ReportType';
            var FromDate = moment($('#FromDateTentativeInspection').datepicker('getDate')).format("YYYY-MM-DD");
            var ToDate = moment($('#ToDateTentativeInspection').datepicker('getDate')).format("YYYY-MM-DD");

            var ParticularCM = '', SortedOn = '';

            var _CM = $('input[name="TentativeInspectionCM"]:checked').val();
            var SortedOn = $('input[name="SortedOn"]:checked').val();

            if (_CM == "CM4") ParticularCM = $("#ParticularCM2").val();

            $('#frmTentativeInspection').find("#hdnReportType").val(ReportType);
            $('#frmTentativeInspection').find("#hdnFromDate").val(FromDate);
            $('#frmTentativeInspection').find("#hdnToDate").val(ToDate);
            $('#frmTentativeInspection').find("#hdnParticularCM").val(ParticularCM);
            $('#frmTentativeInspection').find("#hdnSortedOn").val(SortedOn);

            $("#frmTentativeInspection").submit();
        }

        function SubmitDataCallRemarking() {

            $("#spnErrorFromDateCallRemarking").html("");
            $("#spnErrorToDateCallRemarking").html("");

            var IsValid = true;

            if ($("#FromDateCallRemarking").val() == "") {
                $("#spnErrorFromDateCallRemarking").html("The From Date field is required.");
                IsValid = false;
            }
            if ($("#ToDateCallRemarking").val() == "") {
                $("#spnErrorToDateCallRemarking").html("The To Date field is required.");
                IsValid = false;
            }

            if ($("#FromDateCallRemarking").val() != "" && IsValidDate($("#FromDateCallRemarking").val()) == false) {
                $("#spnErrorFromDateCallRemarking").html("Invalid date format.");
                IsValid = false;
            }
            if ($("#ToDateCallRemarking").val() != "" && IsValidDate($("#ToDateCallRemarking").val()) == false) {
                $("#spnErrorToDateCallRemarking").html("Invalid date format.");
                IsValid = false;
            }

            if (!IsValid) return;

            var ReportType = '@ReportType';
            var FromDate = moment($('#FromDateCallRemarking').datepicker('getDate')).format("YYYY-MM-DD");
            var ToDate = moment($('#ToDateCallRemarking').datepicker('getDate')).format("YYYY-MM-DD");
            var CallRemarkingDate = $('input[name="CallRemarkingDate"]:checked').val();
            var CallsStatus = $("#CallsStatus").val();

            let myObject = { ReportType, FromDate, ToDate, CallRemarkingDate, CallsStatus };

            $('#frmCallRemarking').find("#hdnReportType").val(ReportType);
            $('#frmCallRemarking').find("#hdnFromDate").val(FromDate);
            $('#frmCallRemarking').find("#hdnToDate").val(ToDate);
            $('#frmCallRemarking').find("#hdnCallRemarkingDate").val(CallRemarkingDate);
            $('#frmCallRemarking').find("#hdnCallsStatus").val(CallsStatus);

            $("#frmCallRemarking").submit();
        }

    </script>
}
