--=============================================================================================================================================
--Scaffold-DbContext "Data Source=(DESCRIPTION=(ADDRESS_LIST= (ADDRESS=(COMMUNITY=tcpcom.world)(PROTOCOL=tcp)(HOST=192.168.0.215)(PORT=1521)))(CONNECT_DATA=(SID=orcl))); User ID=IBSDev;Password=IBSDev" Oracle.EntityFrameworkCore -OutputDir DataAccess -Force
--Scaffold-DbContext name=DefaultConnection Oracle.EntityFrameworkCore -noOnConfiguring -OutputDir DataAccess -Force
--=============================================================================================================================================
--Added by Bhavesh Rathod
--=============================================================================================================================================

ALTER TABLE T05_VENDOR ADD CREATEDBY	NUMBER(6,0);
ALTER TABLE T05_VENDOR ADD CREATEDDATE	TIMESTAMP(6) WITH TIME ZONE;
ALTER TABLE T05_VENDOR ADD UPDATEDBY	NUMBER(6,0);
ALTER TABLE T05_VENDOR ADD UPDATEDDATE	TIMESTAMP(6) WITH TIME ZONE;
ALTER TABLE T05_VENDOR ADD ISDELETED	NUMBER(2,0);
ALTER TABLE T05_VENDOR ADD OFFLINE_CALL_STATUS	CHAR(1 BYTE);
ALTER TABLE T05_VENDOR ADD VEND_GSTNO	VARCHAR2(20 BYTE);
ALTER TABLE T05_VENDOR ADD VEND_TANNO	VARCHAR2(20 BYTE);
ALTER TABLE T05_VENDOR ADD VEND_PANNO	VARCHAR2(20 BYTE);


--1) T02_Users
ALTER TABLE T02_Users ADD CREATEDBY VARCHAR2(50 BYTE);
ALTER TABLE T02_Users ADD UPDATEDBY VARCHAR2(50 BYTE);
ALTER TABLE T02_Users ADD CREATEDDATE TIMESTAMP(6) WITH TIME ZONE;
ALTER TABLE T02_Users ADD UPDATEDDATE TIMESTAMP(6) WITH TIME ZONE;
ALTER TABLE T02_Users ADD ISDELETED NUMBER(38,0);

ALTER TABLE T02_USERS ADD MIGTYPE VARCHAR2(10 BYTE);
ALTER TABLE T02_USERS ADD MOBILE VARCHAR2(10 BYTE);
ALTER TABLE T02_USERS ADD CO_CD	NUMBER(6,0);

ALTER TABLE T02_USERS ADD USER_EMAIL VARCHAR2(50 BYTE);

--2) T96_MESSAGES

ALTER TABLE T96_MESSAGES ADD CREATEDBY VARCHAR2(50 BYTE);
ALTER TABLE T96_MESSAGES ADD UPDATEDBY VARCHAR2(50 BYTE);
ALTER TABLE T96_MESSAGES ADD CREATEDDATE TIMESTAMP(6) WITH TIME ZONE;
ALTER TABLE T96_MESSAGES ADD UPDATEDDATE TIMESTAMP(6) WITH TIME ZONE;
ALTER TABLE T96_MESSAGES ADD ISDELETED NUMBER(38,0);

ALTER TABLE T96_MESSAGES 
MODIFY MESSAGE_ID NUMBER(6,0) ;

ALTER TABLE T96_MESSAGES ADD (
  CONSTRAINT T96_MESSAGES_pk PRIMARY KEY (MESSAGE_ID));

CREATE SEQUENCE T96_MESSAGES_seq
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
UPDATE T96_MESSAGES
   SET MESSAGE_ID = T96_MESSAGES_seq.nextval;

ALTER TABLE T96_MESSAGES
    MODIFY MESSAGE_ID INT DEFAULT T96_MESSAGES_seq.nextval;

--3) Create View : MasterTableStatus

CREATE VIEW MasterTableStatus 
AS
Select 'CITY MASTER' as TableName,count(*) as TotalCount from T03_CITY
union all
Select 'UNIT OF MEASUREMENTS' as TableName,count(*) as TotalCount from T04_UOM
union all
Select 'VENDOR/MANUFACTURER MASTER' as TableName,count(*) as TotalCount from T05_VENDOR
union all
Select 'CONSIGNEE/PURCHASER MASTER' as TableName,count(*) as TotalCount from T06_CONSIGNEE
union all
Select 'BILL PAYING OFFICERS' as TableName,count(*) as TotalCount from T12_BILL_PAYING_OFFICER
union all
Select 'INSPECTION ENGINEERS' as TableName,count(*) as TotalCount from T09_IE
union all
Select 'RAILWAY DESIGNATIONS' as TableName,count(*) as TotalCount from T90_RLY_DESIGNATION
union all
Select 'RAILWAYS' as TableName,count(*) as TotalCount from T91_RAILWAYS
union all
Select 'BANK MASTER' as TableName,count(*) as TotalCount from T94_BANK;

CREATE TABLE T12_BILL_PAYING_OFFICER_HISTORY (
    BPO_CD VARCHAR2(5 BYTE),
    BPO_REGION CHAR(1 BYTE),
    BPO_TYPE CHAR(1 BYTE),
    BPO_NAME VARCHAR2(50 BYTE),
    BPO_RLY VARCHAR2(50 BYTE),
    BPO_ADD VARCHAR2(100 BYTE),
    BPO_CITY_CD NUMBER(6,0),
    BILL_PASS_OFFICER VARCHAR2(50 BYTE),
    BPO_FEE_TYPE CHAR(1 BYTE),
    BPO_FEE NUMBER(11,4),
    BPO_TAX_TYPE CHAR(1 BYTE),
    BPO_FLG CHAR(1 BYTE),
    BPO_ADV_FLG CHAR(1 BYTE),
    BPO_LOC_CD VARCHAR2(4 BYTE),
    BPO_ORGN VARCHAR2(50 BYTE),
    BPO_ADD1 VARCHAR2(100 BYTE),
    BPO_ADD2 VARCHAR2(100 BYTE),
    BPO_STATE VARCHAR2(50 BYTE),
    BPO_PIN VARCHAR2(7 BYTE),
    BPO_PHONE VARCHAR2(30 BYTE),
    BPO_FAX VARCHAR2(30 BYTE),
    BPO_EMAIL VARCHAR2(40 BYTE),
    PAY_WINDOW_ID VARCHAR2(5 BYTE),
    BPO_CD_OLD VARCHAR2(5 BYTE),
    USER_ID CHAR(8 BYTE),
    DATETIME DATE,
    GSTIN_NO VARCHAR2(15 BYTE),
    AU VARCHAR2(4 BYTE),
    SAP_CUST_CD_BPO VARCHAR2(10 BYTE),
    LEGAL_NAME VARCHAR2(100 BYTE),
    PIN_CODE CHAR(6 BYTE),
    ISDELETED NUMBER(2,0),
    CREATEDBY NUMBER(6,0),
    UPDATEDBY NUMBER(6,0),
    CREATEDDATE DATE,
    UPDATEDDATE DATE,
    ACTIONTYPE VARCHAR2(2 BYTE),
    ACTIONDATE TIMESTAMP (6) WITH TIME ZONE,
    ACTIONUSERID VARCHAR2(50 BYTE),
    ID NUMBER(6,0) DEFAULT IBSDEV.T12_BILL_PAYING_OFFICER_HISTORY_SEQ.NEXTVAL
);


ALTER TABLE T12_BILL_PAYING_OFFICER MODIFY BPO_STATE VARCHAR(50);
ALTER TABLE T12_BILL_PAYING_OFFICER_HISTORY MODIFY BPO_STATE VARCHAR(50);

--4) T97_CONTROL_FILE
ALTER TABLE T97_CONTROL_FILE 
MODIFY GRACE_DAYS NUMBER(6,0) ;

--5) T72_IE_MESSAGES
ALTER TABLE T72_IE_MESSAGES ADD CREATEDBY VARCHAR2(50 BYTE);
ALTER TABLE T72_IE_MESSAGES ADD UPDATEDBY VARCHAR2(50 BYTE);
ALTER TABLE T72_IE_MESSAGES ADD CREATEDDATE TIMESTAMP(6) WITH TIME ZONE;
ALTER TABLE T72_IE_MESSAGES ADD UPDATEDDATE TIMESTAMP(6) WITH TIME ZONE;
ALTER TABLE T72_IE_MESSAGES ADD ISDELETED NUMBER(38,0);

ALTER TABLE T72_IE_MESSAGES MODIFY MESSAGE_ID NUMBER(6,0);

--5) T80_PO_MASTER

ALTER TABLE T80_PO_MASTER ADD CREATEDBY NUMBER(6,0);
ALTER TABLE T80_PO_MASTER ADD CREATEDDATE TIMESTAMP(6) WITH TIME ZONE;
ALTER TABLE T80_PO_MASTER ADD UPDATEDBY NUMBER(6,0);
ALTER TABLE T80_PO_MASTER ADD UPDATEDDATE TIMESTAMP(6) WITH TIME ZONE;
ALTER TABLE T80_PO_MASTER ADD ISDELETED NUMBER(38,0);
ALTER TABLE T80_PO_MASTER ADD USER_ID VARCHAR2(50 BYTE);

--6)
CREATE VIEW CallsMarkedToIE_View
AS
Select trim(T051.VEND_NAME)||nvl2(trim(T03.CITY),','||trim(T03.CITY),'') VENDOR,trim(T052.VEND_NAME)||nvl2(trim(T032.CITY),','||trim(T032.CITY),'') MANUFACTURER,T051.VEND_CD VEND_CD,T052.VEND_CD MFG_CD,(T06.CONSIGNEE_DESIG||' '||T06.CONSIGNEE_FIRM) CONSIGNEE,
T18.ITEM_DESC_PO,T15.EXT_DELV_DT ,T17.CALL_MARK_DT,T17.DT_INSP_DESIRE,T17.CALL_RECV_DT, NVL(T17.NEW_VENDOR,'X') NEW_VENDOR, 
T09.IE_NAME,T09.IE_PHONE_NO,T13.PO_NO,T13.PO_DT,to_char(T13.PO_DT,'yyyy')PO_YR,T13.PO_SOURCE,DECODE(PO_SOURCE,'V','VENDOR','M','MANUAL','C','IREPS','OTHER') SOURCE,T13.RLY_CD,T17.CASE_NO,T17.USER_ID, T17.DATETIME, T17.REMARKS, T17.CALL_STATUS, 
trim(T21.CALL_STATUS_DESC)||decode(T21.CALL_STATUS_CD,'A',nvl2(T17.BK_NO,' (BookSet-'||T17.BK_NO||'/'||T17.SET_NO||')',''),'R',nvl2(T17.BK_NO,' (BookSet-'||T17.BK_NO||'/'||T17.SET_NO||')',''),'C',' on '||to_char(T17.CALL_STATUS_DT,'dd/mm/yyyy'))||decode(T17.CALL_CANCEL_STATUS,'N',' (Non Chargeable)'||'/'||'Document Not Received','C',' (Chargeable)'||'/'||'Document Not Received','') CALL_STATUS_FULL,T21.CALL_STATUS_COLOR COLOUR,
T052.VEND_CONTACT_PER_1 MFG_PERS,T052.VEND_CONTACT_TEL_1 MFG_PHONE,T17.CALL_SNO,T19.DOCS_SUBMITTED,T17.IE_CD,
(select count(*) from T18_CALL_DETAILS A WHERE A.CASE_NO=T18.CASE_NO AND A.CALL_RECV_DT=T18.CALL_RECV_DT AND A.CALL_SNO=T18.CALL_SNO) COUNT
From T05_VENDOR T051,T03_CITY T03,T06_CONSIGNEE T06,T17_CALL_REGISTER T17,T18_CALL_DETAILS T18,T13_PO_MASTER T13,T09_IE T09,T05_VENDOR T052,T03_CITY T032,T21_CALL_STATUS_CODES T21, T19_CALL_CANCEL T19,T15_PO_DETAIL T15
Where  T051.VEND_CD=T13.VEND_CD and T06.CONSIGNEE_CD(+)=T13.PURCHASER_CD and T13.CASE_NO=T15.CASE_NO and T15.CASE_NO=T18.CASE_NO and T15.ITEM_SRNO=T18.ITEM_SRNO_PO and T15.CASE_NO=T17.CASE_NO and  T13.CASE_NO=T17.CASE_NO and T17.CALL_STATUS=T21.CALL_STATUS_CD and
T09.IE_CD =T17.IE_CD  and  T18.CASE_NO=T17.CASE_NO and T18.CALL_RECV_DT=T17.CALL_RECV_DT and T18.CALL_SNO=T17.CALL_SNO and T17.CASE_NO=T19.CASE_NO(+) and T17.CALL_RECV_DT=T19.CALL_RECV_DT(+) and T17.CALL_SNO=T19.CALL_SNO(+) and T17.MFG_CD=T052.VEND_CD(+) and T03.CITY_CD=T051.VEND_CITY_CD and T032.CITY_CD(+)=T052.VEND_CITY_CD 
--and ((T17.CALL_MARK_DT between to_date('"+wDtFr+"','dd/mm/yyyy') and to_date('"+wDtTo+"','dd/mm/yyyy') 
and (T17.CALL_STATUS NOT IN('B','C') or (T17.CALL_STATUS='C' and T17.CALL_RECV_DT>'27-FEB-12' and NVL(T19.DOCS_SUBMITTED,'X')='X') OR (T17.CALL_STATUS IN ('M','U','S','W')))
--and T17.IE_CD='"+wIECD+"' 
and T18.ITEM_SRNO_PO=(Select min(B.ITEM_SRNO_PO) from T18_CALL_DETAILS B where B.CASE_NO=T18.CASE_NO AND B.CALL_RECV_DT=T18.CALL_RECV_DT AND B.CALL_SNO=T18.CALL_SNO);

--7) 
CREATE VIEW T17_CALL_REGISTER_SEARCH_VIEW
AS
select P.VEND_CD,P.CASE_NO,C.CALL_RECV_DT CALL_RECV_DT,
C.CALL_INSTALL_NO,C.CALL_SNO,
decode(C.CALL_STATUS,'M','Pending','A','Accepted','R','Rejection','C','Cancelled','U','Under Lab Testing','S','Still Under Inspection','G','Stage Inspection')
||decode(C.CALL_CANCEL_STATUS,'N',' (Non Chargeable)','C',' (Chargeable)','')CALL_STATUS,C.CALL_LETTER_NO,P.REMARKS,
P.PO_NO,
P.PO_DT PO_DT,I.IE_SNAME,(V.VEND_NAME||'('||NVL2(T.LOCATION,T.LOCATION||' : '||T.CITY,T.CITY)||')')VENDOR 
from T17_CALL_REGISTER C, T13_PO_MASTER P,T09_IE I, T05_VENDOR V,T03_CITY T 
where P.CASE_NO=C.CASE_NO(+) and C.IE_CD=I.IE_CD(+) and P.VEND_CD=V.VEND_CD 
and V.VEND_CITY_CD=T.CITY_CD ;


CREATE or replace VIEW VENDOR_CALL_PO_DETAILS_VIEW
AS
select CASE_NO,(C.CONSIGNEE_CD||'-'||trim(C.CONSIGNEE_DESIG)||'/'||trim(C.CONSIGNEE_DEPT)||'/'||trim(C.CONSIGNEE_FIRM)) PURCHASER_CD, 
V.VEND_NAME VEND_CD, P.PO_NO, 
P.PO_DT PO_DT,substr(P.RLY_CD,1,7)RLY, P.L5NO_PO, P.RLY_NONRLY,RECV_DT 
from T13_PO_MASTER P,T06_CONSIGNEE C,T05_VENDOR V 
where P.PURCHASER_CD=C.CONSIGNEE_CD(+) and P.VEND_CD=V.VEND_CD ;


CREATE VIEW VENDER_CALL_REGISTER_ITEM_VIEW1
AS
SELECT 'Marked' Status,T18.ITEM_SRNO_PO ITEM_SRNO_PO,T18.ITEM_DESC_PO ITEM_DESC_PO ,
T18.QTY_ORDERED,T18.CUM_QTY_PREV_OFFERED,T18.CUM_QTY_PREV_PASSED,T18.QTY_TO_INSP,T18.QTY_PASSED,
T18.QTY_REJECTED,T18.QTY_DUE, (T06.CONSIGNEE_CD||'-'||nvl2(trim(T06.CONSIGNEE_DESIG),
trim(T06.CONSIGNEE_DESIG)||'/','')||nvl2(trim(T06.CONSIGNEE_DEPT),trim(T06.CONSIGNEE_DEPT)||'/','')||nvl2(trim(T06.CONSIGNEE_FIRM),
trim(T06.CONSIGNEE_FIRM)||'/','')||NVL2(trim(T06.CONSIGNEE_ADD1),trim(T06.CONSIGNEE_ADD1)||'/','')||NVL2(trim(T03.LOCATION),
trim(T03.LOCATION)||' : '||trim(T03.CITY),trim(T03.CITY))) CONSIGNEE, NULL DELV_DATE  
,T18.CASE_NO CASE_NO,T18.CALL_RECV_DT CALL_RECV_DT,CALL_SNO 
FROM T18_CALL_DETAILS T18,T06_CONSIGNEE T06, T03_CITY T03 
where T18.CONSIGNEE_CD=T06.CONSIGNEE_CD and T06.CONSIGNEE_CITY=T03.CITY_CD ;
--and T18.CASE_NO='W16120212' AND T18.CALL_RECV_DT=to_date('27/12/2016','dd/mm/yyyy') AND CALL_SNO=82

CREATE VIEW VENDER_CALL_REGISTER_ITEM_VIEW2
AS

SELECT 'Available' Status,T15.ITEM_SRNO ITEM_SRNO_PO,T15.ITEM_DESC ITEM_DESC_PO,T15.QTY QTY_ORDERED,(0) CUM_QTY_PREV_OFFERED,
(0) CUM_QTY_PREV_PASSED, (0) QTY_TO_INSP,(0) QTY_PASSED,(0) QTY_REJECTED,(0) QTY_DUE,(T06.CONSIGNEE_CD||'-'||nvl2(trim(T06.CONSIGNEE_DESIG),
trim(T06.CONSIGNEE_DESIG)||'/','')||nvl2(trim(T06.CONSIGNEE_DEPT),trim(T06.CONSIGNEE_DEPT)||'/','')||nvl2(trim(T06.CONSIGNEE_FIRM),
trim(T06.CONSIGNEE_FIRM)||'/','')||NVL2(trim(T06.CONSIGNEE_ADD1),trim(T06.CONSIGNEE_ADD1)||'/','')||NVL2(trim(T03.LOCATION),trim(T03.LOCATION)||' : '||trim(T03.CITY),trim(T03.CITY))) CONSIGNEE, 
NVL(to_char(T15.EXT_DELV_DT,'dd/mm/yyyy'),'01-JAN-01') DELV_DATE
,T15.CASE_NO,to_date('','dd/mm/yyyy') CALL_RECV_DT,0 CALL_SNO
FROM T15_PO_DETAIL T15,T06_CONSIGNEE T06,T03_CITY T03 
where T15.CONSIGNEE_CD=T06.CONSIGNEE_CD and T06.CONSIGNEE_CITY=T03.CITY_CD ;
--and T15.CASE_NO='W16120212'


--and T15.ITEM_SRNO not in (select ITEM_SRNO_PO from T18_CALL_DETAILS
--where CASE_NO='W16120212' and CALL_RECV_DT=to_date('27/12/2016','dd/mm/yyyy') AND CALL_SNO=82) 
--order by Status DESC, ITEM_SRNO_PO


--8) Page Name : REGISTERED LOA "ADD NEW ITEMS" FORM
-------------------------------
CREATE VIEW  VIEW_CONSIGNEE_DETAILS
AS
select C.CONSIGNEE_CD,(C.CONSIGNEE_CD||'-'||nvl2(trim(C.CONSIGNEE_DESIG),trim(C.CONSIGNEE_DESIG)||'/','')||nvl2(trim(C.CONSIGNEE_DEPT),trim(C.CONSIGNEE_DEPT)||'/','')||nvl2(trim(C.CONSIGNEE_FIRM),
trim(C.CONSIGNEE_FIRM)||'/','')||NVL2(trim(C.CONSIGNEE_ADD1),trim(C.CONSIGNEE_ADD1)||'/','')||NVL2(trim(D.LOCATION),trim(D.LOCATION)||' : '||trim(D.CITY),trim(D.CITY))) CONSIGNEE_NAME 
from T06_CONSIGNEE C,T14_PO_BPO P,T03_CITY D 
WHERE P.CONSIGNEE_CD=C.CONSIGNEE_CD and C.CONSIGNEE_CITY=D.CITY_CD 
--and CASE_NO='C13110052'
ORDER BY CONSIGNEE_DESIG;
-------------------------------
CREATE VIEW VIEW_T15_PO_DETAIL
AS
SELECT
    p.CASE_NO,
    p.ITEM_SRNO,
    p.ITEM_DESC,
    (C.CONSIGNEE_CD || '-' || NVL2(TRIM(C.CONSIGNEE_DESIG), TRIM(C.CONSIGNEE_DESIG) || '/', '') ||
        NVL2(TRIM(C.CONSIGNEE_DEPT), TRIM(C.CONSIGNEE_DEPT) || '/', '') ||
        NVL2(TRIM(C.CONSIGNEE_FIRM), TRIM(C.CONSIGNEE_FIRM) || '/', '') ||
        NVL2(TRIM(C.CONSIGNEE_ADD1), TRIM(C.CONSIGNEE_ADD1) || '/', '') ||
        NVL2(TRIM(D.LOCATION), TRIM(D.LOCATION) || ' : ' || TRIM(D.CITY), TRIM(D.CITY))
    ) AS CONSIGNEE_NAME,
    p.QTY,
    p.RATE,
    p.VALUE,
    C.CONSIGNEE_CD
FROM
    T15_PO_DETAIL p
JOIN
    T06_CONSIGNEE C ON p.CONSIGNEE_CD = C.CONSIGNEE_CD
JOIN
    T03_CITY D ON C.CONSIGNEE_CITY = D.CITY_CD
WHERE
    p.CASE_NO = 'C13110052' -- Replace 'YOUR_CASE_NO' with the value of Label2.Text
    --AND (p.CONSIGNEE_CD = '24945' OR '24945' IS NULL) -- Replace 'YOUR_CONSIGNEE_CD' with ddlConsigneeCD.SelectedValue
    --AND p.ITEM_DESC like '%130M-52KG%'
    --AND (UPPER(p.ITEM_DESC) LIKE '%' || UPPER('130M-52KG') || '%' OR '130M-52KG' IS NULL) -- Replace 'YOUR_ITEM_DESC' with txtItemDescpt.Text.Trim()
ORDER BY
    p.ITEM_SRNO;
-------------------------------
ALTER TABLE T15_PO_DETAIL ADD CREATEDBY VARCHAR2(50 BYTE);
ALTER TABLE T15_PO_DETAIL ADD CREATEDDATE TIMESTAMP(6) WITH TIME ZONE;
ALTER TABLE T15_PO_DETAIL ADD UPDATEDBY VARCHAR2(50 BYTE);
ALTER TABLE T15_PO_DETAIL ADD UPDATEDDATE TIMESTAMP(6) WITH TIME ZONE;
ALTER TABLE T15_PO_DETAIL ADD ISDELETED NUMBER(38,0);


--9) REGISTERED PENDING CALLS OFFERED QUANTITY ENHANCEMENT FORM
--SP_GET_CALLREGISTER
--SP_GET_CALL_DETAILS

ALTER TABLE T18_CALL_DETAILS ADD CREATEDBY VARCHAR2(50 BYTE);
ALTER TABLE T18_CALL_DETAILS ADD CREATEDDATE TIMESTAMP(6) WITH TIME ZONE;
ALTER TABLE T18_CALL_DETAILS ADD UPDATEDBY VARCHAR2(50 BYTE);
ALTER TABLE T18_CALL_DETAILS ADD UPDATEDDATE TIMESTAMP(6) WITH TIME ZONE;
ALTER TABLE T18_CALL_DETAILS ADD ISDELETED NUMBER(38,0);

--10) Specific PO Call Status - Vendor
--VIEW_CALLDETAILSFORSPECIFICPO_REPORT
--VIEW_VENDOR_CALLS_MARKED_FOR_SPECIFIC_PO
--VIEW_VENDOR_CALLS_MARKED_FOR_SPECIFIC_IC

--Qry : select * from VIEW_VENDOR_CALLS_MARKED_FOR_SPECIFIC_IC_SUB WHERE L5NO_PO = 'IN6-3'

--11) Bill sending to SAP
CREATE TABLE SAP_BILLREGISTER_SEND (
    ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    BATCHID VARCHAR2(20) PRIMARY KEY,
    BATCH_DT DATE,
    SAP_ACKNOWLEDGEMENT_ID VARCHAR2(50),
    SAP_ACKNOWLEDGEMENT_DT DATE
);

CREATE TABLE SAP_BILLREGISTER_SEND_DETAILS (
    ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    BATCHID VARCHAR2(20),
    BATCH_DT DATE,
    SAP_ACKNOWLEDGEMENT_ID VARCHAR2(50),
    SAP_ACKNOWLEDGEMENT_DT DATE,
    BILL_NO VARCHAR2(20),
    BILL_DT DATE,
    BK_NO VARCHAR2(50),
    SET_NO VARCHAR2(50),
    IC_DT DATE,
    BILL_AMOUNT NUMBER,
    SERVICE_TAX NUMBER,
    EDU_CESS NUMBER,
    SHE_CESS NUMBER,
    SWACHH_BHARAT_CESS NUMBER,
    KRISHI_KALYAN_CESS NUMBER,
    INSP_FEE NUMBER,
    IGST NUMBER,
    SGST NUMBER,
    CGST NUMBER,
    INVOICE_NO VARCHAR2(100),
    RECIPIENT_GSTIN_NO VARCHAR2(20),
    BPO_TYPE VARCHAR2(50),
    IRN_NO VARCHAR2(100),
    SENTTOSAP VARCHAR2(20),
    FINALISED VARCHAR2(20),
    ACK_DT DATE,
    DIG_BILL_GEN_DT DATE,
    BPO VARCHAR2(200),
    MATERIAL_VALUE NUMBER,
    STATE VARCHAR2(100),
    CASE_NO VARCHAR2(50),
    CheckValue VARCHAR2(20)
);

--VIEW Created : VIEW_GET_BILLREGISTER_DTAILS

--SP : SP_GET_BILL_REGITER_DETAILS

ALTER TABLE T22_BILL
ADD SAP_STATUS VARCHAR2(20);

ALTER TABLE T22_BILL ADD CREATEDBY VARCHAR2(50 BYTE);
ALTER TABLE T22_BILL ADD UPDATEDBY VARCHAR2(50 BYTE);
ALTER TABLE T22_BILL ADD CREATEDDATE TIMESTAMP(6) WITH TIME ZONE;
ALTER TABLE T22_BILL ADD UPDATEDDATE TIMESTAMP(6) WITH TIME ZONE;
ALTER TABLE T22_BILL ADD ISDELETED NUMBER(38,0);

ALTER TABLE t22_bill ADD BILLADTYPE	VARCHAR2(10 BYTE)
ALTER TABLE t22_bill ADD REFERENCE_AID NUMBER(6,0)

ALTER TABLE T22_Bill ADD NEW_MATERIAL_VALUE	NUMBER(15,2);
ALTER TABLE T22_Bill ADD NEW_INSP_FEE	NUMBER(13,2);
ALTER TABLE T22_Bill ADD NEW_BILL_AMOUNT	NUMBER(13,2);




--12) Ammendment form
--VIEW_MA_DETAIL_SEARCH
--VIEW_MA_SUB_DETAIL
--VIEW VIEW_GET_PO_DETAILS_REPORT
--VIEW VIEW_GET_PO_DETAILS_REPORT_LIST
--VIEW VIEW_GET_PO_DETAILS_REPORT_P_CALLDETAILS
--VIEW VIEW_GET_PO_DETAILS_REPORT_R_VENDOR_PLACE

--13) IE IC PHOTO ENCLOSED
--VIEW_GET_ICPHOTOENCLOSED

--14) Pending JI Complaints for IE Remarks 
--VIEW_GET_PENDING_JI_COMPLAINTS

--15) Call For Inspection
ALTER TABLE T17_CALL_REGISTER ADD CREATEDBY VARCHAR2(50 BYTE);
ALTER TABLE T17_CALL_REGISTER ADD CREATEDDATE TIMESTAMP(6);
ALTER TABLE T17_CALL_REGISTER ADD UPDATEDBY VARCHAR2(50 BYTE);
ALTER TABLE T17_CALL_REGISTER ADD UPDATEDDATE TIMESTAMP(6);

ALTER TABLE T17_CALL_REGISTER MODIFY CLUSTER_CODE	NUMBER(6,0); 

ALTER TABLE t17_call_register ADD CALL_CANCEL_CHARGES_STATUS VARCHAR2(5 BYTE)
ALTER TABLE t17_call_register ADD CALL_CANCEL_AMOUNT NUMBER(13,2)
ALTER TABLE t17_call_register MODIFY CALL_CANCEL_CHARGES NUMBER(6,0)


ALTER TABLE T17_CALL_REGISTER
DROP CONSTRAINT UK_CALL_REGISTER_U;
commit;

ALTER TABLE T17_CALL_REGISTER
ADD CONSTRAINT UK_CALL_REGISTER UNIQUE ("CASE_NO", "CALL_RECV_DT", "CALL_SNO");


DROP INDEX UK_CALL_REGISTER;


CREATE UNIQUE INDEX UK_CALL_REGISTER
ON T17_CALL_REGISTER (REGION_CODE, CALL_RECV_DT, CALL_SNO, CASE_NO)
PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
STORAGE(INITIAL 37748736 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
TABLESPACE USERS;

--VIEW
--VIEW_GET_CALLINSPECTION_PRINT_REPORT
--VIEW_GET_CALLINSPECTION_PRINT_SUB_REPORT




--16) IE Maixmum call limit2
--Create table : T102_IE_MAXIMUM_CALL_LIMIT_HISTORY

--17) Admin Call Registration Cancellation
--VIEW : VIEW_GET_CALL_REG_CANCELLATION

ALTER TABLE T19_CALL_CANCEL ADD CREATEDBY VARCHAR2(50 BYTE);
ALTER TABLE T19_CALL_CANCEL ADD CREATEDDATE TIMESTAMP(6) WITH TIME ZONE;
ALTER TABLE T19_CALL_CANCEL ADD UPDATEDBY VARCHAR2(50 BYTE);
ALTER TABLE T19_CALL_CANCEL ADD UPDATEDDATE TIMESTAMP(6) WITH TIME ZONE;
ALTER TABLE T19_CALL_CANCEL ADD ISDELETED NUMBER(38,0);
ALTER TABLE T19_CALL_CANCEL ADD CANCEL_CD_12 NUMBER(2,0);


--Call Status Edit
--================
--VIEW_GET_CALL_STATUS_DETAILS



--19) BPO 
--View : VIEW_GET_BPODETAILS

--20) Inspection Certificate
--View : VIEW_GET_INSPECTION_CERT_DETAILS


Bhavesh Work Pending 06-02-2024

--21) Reports 
--Client Wies Bill Summary

--SP_GET_BILLRAISED_SUMMARY

--SP_GET_BILLING_RAILWAY_DETAILS

--SP_GET_BILLSNOTCRIS

--SP_GET_BILLSCRISSUBMITTED

--22) New Requirenment Changes

--Create Hisory Table : 
--1) T09_IE_HISTORY
--2) T61_ITEM_MASTER_HISTORY
--3) T72_IE_MESSAGES_HISTORY

--Trigger Created List
--1) TRG_T09_IE
--2) TRG_T61_ITEM_MASTER
--3) TRG_T72_IE_MESSAGES

ALTER TABLE T09_IE_HISTORY ADD ID NUMBER(6,0);
CREATE SEQUENCE T09_IE_HISTORY_seq START WITH 1 INCREMENT BY 1 CACHE 20;
UPDATE T09_IE_HISTORY SET ID = T09_IE_HISTORY_seq.nextval;
ALTER TABLE T09_IE_HISTORY MODIFY ID NUMBER(6,0) DEFAULT T09_IE_HISTORY_seq.nextval;
ALTER TABLE T09_IE_HISTORY ADD CONSTRAINT T09_IE_HISTORY_pk  PRIMARY KEY (ID);

ALTER TABLE T09_IE_HISTORY MODIFY ALT_IE DEFAULT NULL;
ALTER TABLE T09_IE_HISTORY MODIFY Alt_Ie_Three DEFAULT NULL;
ALTER TABLE T09_IE_HISTORY MODIFY Alt_Ie_Two DEFAULT NULL;
ALTER TABLE T09_IE_HISTORY MODIFY Createdby DEFAULT NULL;
ALTER TABLE T09_IE_HISTORY MODIFY Ie_City_Cd DEFAULT NULL;
ALTER TABLE T09_IE_HISTORY MODIFY Ie_Seal_No DEFAULT NULL;
ALTER TABLE T09_IE_HISTORY MODIFY Isdeleted DEFAULT NULL;
ALTER TABLE T09_IE_HISTORY MODIFY Updatedby DEFAULT NULL;



ALTER TABLE t61_item_master_history ADD ID NUMBER(6,0);
CREATE SEQUENCE t61_item_master_history_seq START WITH 1 INCREMENT BY 1 CACHE 20;
UPDATE t61_item_master_history SET ID = t61_item_master_history_seq.nextval;
ALTER TABLE t61_item_master_history MODIFY ID NUMBER(6,0) DEFAULT t61_item_master_history_seq.nextval;
ALTER TABLE t61_item_master_history ADD CONSTRAINT t61_item_master_history_pk  PRIMARY KEY (ID);

ALTER TABLE T61_ITEM_MASTER MODIFY Cm DEFAULT NULL;
ALTER TABLE T61_ITEM_MASTER MODIFY Createdby DEFAULT NULL;
ALTER TABLE T61_ITEM_MASTER MODIFY Ie DEFAULT NULL;
ALTER TABLE T61_ITEM_MASTER MODIFY Isdeleted DEFAULT NULL;
ALTER TABLE T61_ITEM_MASTER MODIFY Time_For_Insp DEFAULT NULL;
ALTER TABLE T61_ITEM_MASTER MODIFY Updatedby DEFAULT NULL;

ALTER TABLE t61_item_master_history MODIFY Cm DEFAULT NULL;
ALTER TABLE t61_item_master_history MODIFY Createdby DEFAULT NULL;
ALTER TABLE t61_item_master_history MODIFY Ie DEFAULT NULL;
ALTER TABLE t61_item_master_history MODIFY Isdeleted DEFAULT NULL;
ALTER TABLE t61_item_master_history MODIFY Time_For_Insp DEFAULT NULL;
ALTER TABLE t61_item_master_history MODIFY Updatedby DEFAULT NULL;


ALTER TABLE T72_IE_MESSAGES_HISTORY ADD ID NUMBER(6,0);
CREATE SEQUENCE T72_IE_MESSAGES_HISTORY_seq START WITH 1 INCREMENT BY 1 CACHE 20;
UPDATE T72_IE_MESSAGES_HISTORY SET ID = T72_IE_MESSAGES_HISTORY_seq.nextval;
ALTER TABLE T72_IE_MESSAGES_HISTORY MODIFY ID NUMBER(6,0) DEFAULT T72_IE_MESSAGES_HISTORY_seq.nextval;
ALTER TABLE T72_IE_MESSAGES_HISTORY ADD CONSTRAINT T72_IE_MESSAGES_HISTORY_pk  PRIMARY KEY (ID);

ALTER TABLE T72_IE_MESSAGES MODIFY Isdeleted DEFAULT NULL;

ALTER TABLE T72_IE_MESSAGES_HISTORY MODIFY Isdeleted DEFAULT NULL;

--1) create or replace TRIGGER TRG_T09_IE
AFTER UPDATE ON T09_IE
FOR EACH ROW
BEGIN

    INSERT INTO T09_IE_HISTORY
    (
        IE_CD, IE_NAME, IE_SNAME, IE_EMP_NO, IE_DESIG, IE_SEAL_NO, IE_DEPARTMENT, IE_CITY_CD, 
        IE_PHONE_NO, IE_CO_CD, IE_JOIN_DT, IE_STATUS, IE_STATUS_DT, IE_TYPE, IE_REGION, 
        IE_PWD, USER_ID, DATETIME, IE_EMAIL, IE_DOB, ALT_IE, IE_CALL_MARKING, ALT_IE_TWO, 
        ALT_IE_THREE, CALL_MARKING_STOPPING_DT, DSC_EXPIRY_DT, ISDELETED, CREATEDBY, UPDATEDBY, 
        CREATEDDATE, UPDATEDDATE, CALL_MARKING_START_DT, INSPECTION_START_DT, REPATRIATION_DT, 
        IE_JOB_TYPE, ActionType, ActionDate, ActionUserID
    )
    VALUES
    (
        :OLD.IE_CD, :OLD.IE_NAME, :OLD.IE_SNAME, :OLD.IE_EMP_NO, :OLD.IE_DESIG, 
        :OLD.IE_SEAL_NO, :OLD.IE_DEPARTMENT, :OLD.IE_CITY_CD, :OLD.IE_PHONE_NO, 
        :OLD.IE_CO_CD, :OLD.IE_JOIN_DT, :OLD.IE_STATUS, :OLD.IE_STATUS_DT, 
        :OLD.IE_TYPE, :OLD.IE_REGION, :OLD.IE_PWD, :OLD.USER_ID, :OLD.DATETIME, 
        :OLD.IE_EMAIL, :OLD.IE_DOB, :OLD.ALT_IE, :OLD.IE_CALL_MARKING, 
        :OLD.ALT_IE_TWO, :OLD.ALT_IE_THREE, :OLD.CALL_MARKING_STOPPING_DT, 
        :OLD.DSC_EXPIRY_DT, :OLD.ISDELETED, :OLD.CREATEDBY, :OLD.UPDATEDBY, 
        :OLD.CREATEDDATE, :OLD.UPDATEDDATE, :OLD.CALL_MARKING_START_DT, 
        :OLD.INSPECTION_START_DT, :OLD.REPATRIATION_DT, :OLD.IE_JOB_TYPE, 
        'U',SYSDATE,:OLD.UPDATEDBY
    );
END;

--2) create or replace TRIGGER TRG_T61_ITEM_MASTER
AFTER UPDATE ON T61_ITEM_MASTER
FOR EACH ROW
BEGIN

    INSERT INTO T61_ITEM_MASTER_HISTORY
    (
        ITEM_CD, ITEM_DESC, DEPARTMENT, TIME_FOR_INSP, CHECKSHEET,
        USER_ID, DATETIME, IE, CM, CREATION_REV_DT,
        ISDELETED, CREATEDBY, UPDATEDBY, CREATEDDATE, UPDATEDDATE, ActionType, ActionDate, ActionUserID
    )
    VALUES
    (
        :OLD.ITEM_CD, :OLD.ITEM_DESC, :OLD.DEPARTMENT, :OLD.TIME_FOR_INSP, :OLD.CHECKSHEET,
        :OLD.USER_ID, :OLD.DATETIME, :OLD.IE, :OLD.CM, :OLD.CREATION_REV_DT,
        :OLD.ISDELETED, :OLD.CREATEDBY, :OLD.UPDATEDBY, :OLD.CREATEDDATE, :OLD.UPDATEDDATE, 'U',SYSDATE,:OLD.UPDATEDBY
    );
END;

--3) create or replace TRIGGER TRG_T72_IE_MESSAGES
AFTER UPDATE ON T72_IE_MESSAGES
FOR EACH ROW
BEGIN

    INSERT INTO T72_IE_MESSAGES_HISTORY
    (
        MESSAGE_ID, LETTER_NO, LETTER_DT, MESSAGE, USER_ID, DATETIME, REGION_CODE,
        MESSAGE_DT, CREATEDBY, UPDATEDBY, CREATEDDATE, UPDATEDDATE, ISDELETED,ActionType, ActionDate, ActionUserID
    )
    VALUES
    (
        :OLD.MESSAGE_ID, :OLD.LETTER_NO, :OLD.LETTER_DT, :OLD.MESSAGE, :OLD.USER_ID,
        :OLD.DATETIME, :OLD.REGION_CODE, :OLD.MESSAGE_DT, :OLD.CREATEDBY, :OLD.UPDATEDBY,
        :OLD.CREATEDDATE, :OLD.UPDATEDDATE, :OLD.ISDELETED, 'U', SYSDATE, :OLD.UPDATEDBY
    );
END;

--23) Remittance Report

--SP : SP_GET_REMITANCE_CHECKWISE

--24) T101_IE_CLUSTER

ALTER TABLE "IBSDEV"."T101_IE_CLUSTER" DROP CONSTRAINT "PK_T101_IE_CLUSTER";

DROP Index from Sql oralce PK_T101_IE_CLUSTER;

ALTER TABLE T101_IE_CLUSTER ADD ID NUMBER(6,0);
CREATE SEQUENCE T101_IE_CLUSTER_seq START WITH 1 INCREMENT BY 1 CACHE 20;
UPDATE T101_IE_CLUSTER SET ID = T101_IE_CLUSTER_seq.nextval;
ALTER TABLE T101_IE_CLUSTER MODIFY ID NUMBER(6,0) DEFAULT T101_IE_CLUSTER_seq.nextval;
ALTER TABLE T101_IE_CLUSTER ADD CONSTRAINT T101_IE_CLUSTER_pk  PRIMARY KEY (ID);

--25) T20_IC
ALTER TABLE t20_ic ADD CREATEDBY VARCHAR2(50 BYTE);
ALTER TABLE t20_ic ADD CREATEDDATE TIMESTAMP(6) WITH TIME ZONE;
ALTER TABLE t20_ic ADD UPDATEDBY VARCHAR2(50 BYTE);
ALTER TABLE t20_ic ADD UPDATEDDATE TIMESTAMP(6) WITH TIME ZONE;
ALTER TABLE t20_ic ADD ISDELETED NUMBER(38,0);


--Inspection Certificate Generate
--===============================
--SP_GENERATE_BILL_NEW

--SP_GENERATE_BILL_GST_NEW

--SP_GENERATE_CREDIT_NOTE_NEW

--SP_T20IC_CONSIGNEEUPDATE

--Adjustment bill Generation page

CREATE TABLE T22_Adjustment_bill (
    AID NUMBER(6) PRIMARY KEY,
    BILL_NO_N VARCHAR2(10 BYTE),
    BILL_NO_O VARCHAR2(10 BYTE),
    CASE_NO CHAR(9 BYTE),
    USER_ID CHAR(8 BYTE), 
    DATETIME DATE,
    BILLADTYPE VARCHAR2(10 BYTE)
);

CREATE SEQUENCE T22_Adjustment_bill_seq START WITH 1 INCREMENT BY 1 CACHE 20;
UPDATE T22_Adjustment_bill SET AID = T22_Adjustment_bill_seq.nextval;
ALTER TABLE T22_Adjustment_bill MODIFY AID NUMBER(6,0) DEFAULT T22_Adjustment_bill_seq.nextval;
ALTER TABLE T22_Adjustment_bill ADD CONSTRAINT T22_Adjustment_bill_pk  PRIMARY KEY (AID);




--IE Login 
--Sorted on call
--SP = SP_CallsMarkedToIE
--Sorted on Vendor
--SP = SP_VendorMarkedToIE
--Sorted on inpection Dt
--SP = SP_DtInspectionMarkedToIE

--CM Approval in Admin


ALTER TABLE T17_CALL_REGISTER_HISTORY ADD CM_APPROVAL CHAR
ALTER TABLE T17_CALL_REGISTER_HISTORY ADD CM_APPROVAL_DT DATE
ALTER TABLE T17_CALL_REGISTER_HISTORY ADD ISFINALIZEDSTATUS CHAR 


--T26_CHEQUE_POSTING table ID Added

ALTER TABLE T26_CHEQUE_POSTING ADD ID NUMBER(9,0);
CREATE SEQUENCE T26_CHEQUE_POSTING_seq START WITH 1 INCREMENT BY 1 CACHE 20;
UPDATE T26_CHEQUE_POSTING SET ID = T26_CHEQUE_POSTING_seq.nextval;
ALTER TABLE T26_CHEQUE_POSTING MODIFY ID NUMBER(9,0) DEFAULT T26_CHEQUE_POSTING_seq.nextval;
ALTER TABLE T26_CHEQUE_POSTING ADD CONSTRAINT T26_CHEQUE_POSTING_pk  PRIMARY KEY (ID);


ALTER TABLE t26_cheque_posting_history MODIFY ID NUMBER(9,0);

ALTER TABLE T26_CHEQUE_POSTING MODIFY CREATEDBY VARCHAR2(12 BYTE);
ALTER TABLE T26_CHEQUE_POSTING_HISTORY MODIFY CREATEDBY VARCHAR2(12 BYTE);
ALTER TABLE T26_CHEQUE_POSTING MODIFY UPDATEDBY VARCHAR2(12 BYTE);
ALTER TABLE T26_CHEQUE_POSTING_HISTORY MODIFY UPDATEDBY VARCHAR2(12 BYTE);

ALTER TABLE T25_RV_DETAILS MODIFY CREATEDBY VARCHAR2(12 BYTE);
ALTER TABLE T25_RV_DETAILS_HISTORY MODIFY CREATEDBY VARCHAR2(12 BYTE);
ALTER TABLE T25_RV_DETAILS MODIFY UPDATEDBY VARCHAR2(12 BYTE);
ALTER TABLE T25_RV_DETAILS_HISTORY MODIFY UPDATEDBY VARCHAR2(12 BYTE);


--create a view
--VIEW_CHEQUE_POSTING_DETAILS


--Call Mark (Online)
--SP : SP_GET_CALL_MARKED_ONLINE_NEW

ALTER TABLE T20_IC MODIFY IC_NO VARCHAR2(100 BYTE);

ALTER TABLE T20_IC_HISTORY MODIFY IC_NO VARCHAR2(100 BYTE);

ALTER TABLE t17_call_register_history MODIFY CALL_STATUS VARCHAR2(3 CHAR);

ALTER TABLE T17_CALL_REGISTER MODIFY CALL_STATUS VARCHAR2(3 CHAR);


ALTER TABLE t17_call_register_history MODIFY CALL_SNO DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY IE_CD DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY CALL_INSTALL_NO DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY MFG_CD DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY CO_CD DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY CALL_CANCEL_CHARGES DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY COUNT_DT DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY CLUSTER_CODE DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY ISDELETED DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY CM_APPROVAL DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY CM_APPROVAL_DT DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY ISFINALIZEDSTATUS DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY CALL_REMARK_STATUS DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY UPDATE_ALLOWED DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY CALL_CANCEL_STATUS DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY BK_NO DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY SET_NO DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY VEND_RDSO DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY VEND_APPROVAL_FR DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY VEND_APPROVAL_TO DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY LOT_DP_1 DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY LOT_DP_2 DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY HOLOGRAM DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY EXP_INSP_DT DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY REJ_CAN_CALL DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY BPO DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY RECIPIENT_GSTIN_NO DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY FIFO_VOILATE_REASON DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY REJ_CHARGES DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY LOCAL_OR_OUTS DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY UPDATEDBY DEFAULT NULL;
ALTER TABLE t17_call_register_history MODIFY UPDATEDDATE DEFAULT NULL;


--Supplimentory Bill Related

ALTER TABLE t18_call_details ADD Supp_B_Flag VARCHAR2(10 BYTE);
ALTER TABLE t18_call_details ADD Supp_New_Rate NUMBER(11,2);

ALTER TABLE T18_CALL_DETAILS_HISTORY ADD Supp_B_Flag VARCHAR2(10 BYTE);
ALTER TABLE T18_CALL_DETAILS_HISTORY ADD Supp_New_Rate NUMBER(11,2);






--New Work

--Lo Dashboard

--GET_LO_DASHBOARD
--GET_LO_DASHBOARD_LIST


--=================USER TYPE Wise Migration================
--Store procedure
--===============
--1) GET_LOGINBYUSERPASS
--2) GET_LOGINDETAILS

ALTER TABLE T107_LO_LOGGIN_LOG ADD ID NUMBER(6,0);
CREATE SEQUENCE T107_LO_LOGGIN_LOG_seq START WITH 1 INCREMENT BY 1 CACHE 20;
UPDATE T107_LO_LOGGIN_LOG SET ID = T107_LO_LOGGIN_LOG_seq.nextval;
ALTER TABLE T107_LO_LOGGIN_LOG MODIFY ID NUMBER(6,0) DEFAULT T107_LO_LOGGIN_LOG_seq.nextval;
ALTER TABLE T107_LO_LOGGIN_LOG ADD CONSTRAINT T107_LO_LOGGIN_LOG_pk  PRIMARY KEY (ID);
=============================================================================================================================================


create or replace PROCEDURE SP_GET_CALLREGISTER (
    p_case_no          IN  VARCHAR2,
    p_dt_of_receipt    IN  DATE,
    p_po_no            IN  VARCHAR2,
    p_po_dt            IN  DATE,
    p_vend_name        IN  VARCHAR2,
    p_call_let_no      IN  VARCHAR2,
    p_vend_cd          IN  VARCHAR2,
    p_callsno          IN  VARCHAR2,
    p_result_cursor    OUT SYS_REFCURSOR
)
AS
BEGIN
    OPEN p_result_cursor FOR
        SELECT P.CASE_NO AS CaseNo,
               C.CALL_RECV_DT AS CallRecvDt,
               C.CALL_INSTALL_NO AS CallInstallNo,
               C.CALL_SNO AS CallSNo ,
               DECODE(S.CALL_STATUS_CD,
                      'C',
                      S.CALL_STATUS_DESC || DECODE(C.CALL_CANCEL_STATUS,
                                                   'N',
                                                   ' (Non Chargeable)',
                                                   'C',
                                                   ' (Chargeable)' || '@' || C.CALL_CANCEL_CHARGES || '+ S.T.',
                                                   '')
                     ) AS CallStatus,
               C.CALL_LETTER_NO AS CallLetterNo,
               C.REMARKS AS Remarks,
               P.PO_NO AS PoNo,
               P.PO_DT AS PoDt,
               I.IE_SNAME AS IE_SName,
               (V.VEND_NAME || '(' || NVL2(T.LOCATION, T.LOCATION || ' : ' || T.CITY, T.CITY) || ')') AS VendName
          FROM T17_CALL_REGISTER C
          JOIN T13_PO_MASTER P ON P.CASE_NO = C.CASE_NO
          LEFT JOIN T09_IE I ON C.IE_CD = I.IE_CD
          JOIN T05_VENDOR V ON P.VEND_CD = V.VEND_CD
          JOIN T03_CITY T ON V.VEND_CITY_CD = T.CITY_CD
          LEFT JOIN T21_CALL_STATUS_CODES S ON C.CALL_STATUS = S.CALL_STATUS_CD
         WHERE (P.VEND_CD = p_vend_cd OR C.MFG_CD = p_vend_cd)
           AND (p_case_no IS NULL OR P.CASE_NO = p_case_no)
           AND (p_dt_of_receipt IS NULL OR C.CALL_RECV_DT = p_dt_of_receipt)
           AND (p_po_no IS NULL OR UPPER(P.PO_NO) LIKE '%' || UPPER(p_po_no) || '%')
           AND (p_po_dt IS NULL OR P.PO_DT = p_po_dt)
           --AND (p_vend_name IS NULL OR UPPER(TRIM(V.VEND_NAME)) LIKE UPPER(p_vend_name || '%'))
           AND (p_call_let_no IS NULL OR UPPER(TRIM(C.CALL_LETTER_NO)) LIKE UPPER(p_call_let_no || '%'))
           AND (p_callsno IS NULL OR C.CALL_SNO = p_callsno)
           --AND CALL_STATUS='M' 
         ORDER BY CASE
                    WHEN p_dt_of_receipt IS NOT NULL
                     AND p_po_no IS NULL
                     AND p_po_dt IS NULL
                     AND p_case_no IS NULL THEN
                      C.CALL_RECV_DT
                    --ELSE
                      --P.CASE_NO
                  END,
                  C.CALL_RECV_DT,
                  C.CALL_SNO;
END;
/

create or replace PROCEDURE SP_GET_CALL_DETAILS(
    p_CNO            IN VARCHAR2,
    p_DT             IN DATE,
    p_CSNO           IN NUMBER,
    p_result_cursor  OUT SYS_REFCURSOR
)
AS
BEGIN
    OPEN p_result_cursor FOR
        SELECT 'Marked' AS Status,
               T18.ITEM_SRNO_PO AS ItemSrNoPo,
               T18.ITEM_DESC_PO AS ItemDescPo,
               T18.QTY_ORDERED AS QtyOrdered,
               T18.CUM_QTY_PREV_OFFERED AS CumQtyPrevOffered,
               T18.CUM_QTY_PREV_PASSED AS CumQtyPrevPassed,
               T18.QTY_TO_INSP AS QtyToInsp,
               T18.QTY_PASSED AS QtyPassed,
               T18.QTY_REJECTED AS QtyRejected,
               T18.QTY_DUE AS QtyDue,
               (T06.CONSIGNEE_CD || '-' || NVL2(TRIM(T06.CONSIGNEE_DESIG), TRIM(T06.CONSIGNEE_DESIG) || '/', '') ||
               NVL2(TRIM(T06.CONSIGNEE_DEPT), TRIM(T06.CONSIGNEE_DEPT) || '/', '') ||
               NVL2(TRIM(T06.CONSIGNEE_FIRM), TRIM(T06.CONSIGNEE_FIRM) || '/', '') ||
               NVL2(TRIM(T06.CONSIGNEE_ADD1), TRIM(T06.CONSIGNEE_ADD1) || '/', '') ||
               NVL2(TRIM(T03.LOCATION), TRIM(T03.LOCATION) || ' : ' || TRIM(T03.CITY), TRIM(T03.CITY))) AS Consignee,
               T06.CONSIGNEE_CD AS ConsigneeCd,
               T15.EXT_DELV_DT AS DelvDt,
               B.BPO_CD || '-' || B.BPO_NAME || '/' || B.BPO_RLY || '/' || NVL2(B.BPO_ADD, B.BPO_ADD || '/', '') || NVL2(T03.LOCATION, T03.CITY || '/' || T03.LOCATION, T03.CITY) AS BPO
        FROM T18_CALL_DETAILS T18
        JOIN T06_CONSIGNEE T06 ON T18.CONSIGNEE_CD = T06.CONSIGNEE_CD
        JOIN T03_CITY T03 ON T06.CONSIGNEE_CITY = T03.CITY_CD
        JOIN
    T14_PO_BPO T14 ON T18.CASE_NO = T14.CASE_NO AND T18.CONSIGNEE_CD = T14.CONSIGNEE_CD
LEFT JOIN
    T12_BILL_PAYING_OFFICER B ON T14.BPO_CD = B.BPO_CD
    JOIN T15_PO_DETAIL T15 ON T18.CASE_NO = T15.CASE_NO AND T18.ITEM_SRNO_PO = T15.ITEM_SRNO
        WHERE T18.CASE_NO = p_CNO
          AND T18.CALL_RECV_DT = p_DT
          AND T18.CALL_SNO = p_CSNO
        UNION
        SELECT 'Available' AS Status,
               T15.ITEM_SRNO AS ItemSrNoPo,
               T15.ITEM_DESC AS ItemDescPo,
               T15.QTY AS QtyOrdered,
               0 AS CumQtyPrevOffered,
               0 AS CumQtyPrevPassed,
               0 AS QtyToInsp,
               0 AS QtyPassed,
               0 AS QtyRejected,
               0 AS QtyDue,
               (T06.CONSIGNEE_CD || '-' || NVL2(TRIM(T06.CONSIGNEE_DESIG), TRIM(T06.CONSIGNEE_DESIG) || '/', '') ||
               NVL2(TRIM(T06.CONSIGNEE_DEPT), TRIM(T06.CONSIGNEE_DEPT) || '/', '') ||
               NVL2(TRIM(T06.CONSIGNEE_FIRM), TRIM(T06.CONSIGNEE_FIRM) || '/', '') ||
               NVL2(TRIM(T06.CONSIGNEE_ADD1), TRIM(T06.CONSIGNEE_ADD1) || '/', '') ||
               NVL2(TRIM(T03.LOCATION), TRIM(T03.LOCATION) || ' : ' || TRIM(T03.CITY), TRIM(T03.CITY))) AS Consignee,
               T06.CONSIGNEE_CD AS ConsigneeCd,
               T15.EXT_DELV_DT AS DelvDt,
               B.BPO_CD || '-' || B.BPO_NAME || '/' || B.BPO_RLY || '/' || NVL2(B.BPO_ADD, B.BPO_ADD || '/', '') || NVL2(T03.LOCATION, T03.CITY || '/' || T03.LOCATION, T03.CITY) AS BPO
        FROM T15_PO_DETAIL T15
        JOIN T06_CONSIGNEE T06 ON T15.CONSIGNEE_CD = T06.CONSIGNEE_CD
        JOIN T03_CITY T03 ON T06.CONSIGNEE_CITY = T03.CITY_CD
        JOIN
    T14_PO_BPO T14 ON T15.CASE_NO = T14.CASE_NO AND T15.CONSIGNEE_CD = T14.CONSIGNEE_CD
LEFT JOIN
    T12_BILL_PAYING_OFFICER B ON T14.BPO_CD = B.BPO_CD
        WHERE T15.CASE_NO = p_CNO
          AND T15.ITEM_SRNO NOT IN (
              SELECT ITEM_SRNO_PO
              FROM T18_CALL_DETAILS
              WHERE CASE_NO = p_CNO
                AND CALL_RECV_DT = p_DT
                AND CALL_SNO = p_CSNO
          )
        ORDER BY Status DESC, ItemSrNoPo;
END;
/

CREATE TABLE T102_IE_MAXIMUM_CALL_LIMIT_HISTORY (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE NOKEEP NOSCALE,
    REGION_CODE CHAR(1 BYTE),
    MAXIMUM_CALL NUMBER(3,0),
    USER_ID CHAR(8 BYTE),
    DATETIME DATE,
    ISDELETED NUMBER(2,0),
    CREATEDBY NUMBER(6,0),
    CREATEDDATE TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    UPDATEDBY NUMBER(6,0),
    UPDATEDDATE TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_T102_IE_MAX_CALL_LIMIT_HIST PRIMARY KEY (ID)
);


create or replace PROCEDURE SP_GET_BILLRAISED_SUMMARY (
    wYrMth_FR IN VARCHAR2,
    wYrMth_TO IN VARCHAR2,
    pRegion IN VARCHAR2,
    ref_cursor OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN ref_cursor FOR
    SELECT SUBSTR(BPOTYPE, 2) AS BPO_TYPE,
           BPO_RLY,
           BPO_ORGN,
           CAST(SUM(NVL(FEE, 0)) AS Number) AS INSP_FEE,
           CAST(SUM(BILL_AMT - NVL(FEE, 0)) AS Number) AS TAX,
           --SUM(NVL(BILL_AMT, 0)) AS BILL_AMOUNT,
           CAST(SUM(NVL(BILL_AMT, 0)) AS Number) AS BILL_AMOUNT,
           CAST(COUNT(*) AS Number) AS NO_OF_BILLS
    FROM (
        SELECT DECODE(BPO_TYPE, 'R', '1Railways', 'U', '2PSU', 'P', '3Private', 'F', '4Foreign Railway', 'S', '5State Government') AS BPOTYPE,
               BPO_RLY,
               BPO_ORGN,
               NVL(INSP_FEE, 0) AS FEE,
               NVL(BILL_AMOUNT, 0) AS BILL_AMT
        FROM V22_BILL
        WHERE TO_CHAR(BILL_DT, 'YYYYMM') BETWEEN wYrMth_FR AND wYrMth_TO
        AND REGION_CODE = pRegion
        AND INSTR(UPPER(BPO_RLY), 'RITES') = 0
        --AND BPO_TYPE = 'R'
        --AND BPO_RLY = 'MCF'
        UNION ALL
        SELECT '6RITES' AS BPOTYPE,
               BPO_RLY,
               BPO_ORGN,
               NVL(INSP_FEE, 0) AS FEE,
               NVL(BILL_AMOUNT, 0) AS BILL_AMT
        FROM V22_BILL
        WHERE TO_CHAR(BILL_DT, 'YYYYMM') BETWEEN wYrMth_FR AND wYrMth_TO
        AND REGION_CODE = pRegion
        AND INSTR(UPPER(BPO_RLY), 'RITES') > 0
        --AND BPO_TYPE = 'R'
        --AND BPO_RLY = 'MCF'
    )
    GROUP BY BPOTYPE, BPO_RLY, BPO_ORGN
    ORDER BY BPOTYPE, BPO_RLY, BPO_ORGN;
END;
/

create or replace PROCEDURE SP_GET_BILLING_RAILWAY_DETAILS (
    p_BPO_Type VARCHAR2,
    p_BPO_RLY VARCHAR2,
    p_DateType VARCHAR2,
    p_WYrMth VARCHAR2,
    p_FromDate VARCHAR2,
    p_ToDate VARCHAR2,
    p_AllRegions NUMBER,
    p_RegionCode VARCHAR2,
    p_Cursor OUT SYS_REFCURSOR
)
AS
BEGIN
    OPEN p_Cursor FOR
        SELECT V22.REGION_CODE,
        V22.BILL_NO,
               V22.BPO_RLY,
               V22.BPO_NAME,
               TO_CHAR(V22.BILL_DT, 'dd/mm/yyyy') AS BILL_DT,
               TO_CHAR(V22.DIG_BILL_GEN_DT, 'dd/mm/yyyy') AS DIG_BILL_GEN_DATE,
               V22.BILL_AMOUNT,
               V22.BK_NO,
               V22.SET_NO,
               (NVL(V22.TDS, 0) + NVL(V22.TDS_SGST, 0) + NVL(V22.TDS_CGST, 0) + NVL(V22.TDS_IGST, 0)) AS TOTAL_TDS,
               NVL(V22.RETENTION_MONEY, 0) AS RETENTION_MONEY,
               NVL(V22.WRITE_OFF_AMT, 0) AS WRITE_OFF_AMT,
               NVL(V22.AMOUNT_RECEIVED, 0) AS AMOUNT_POSTED,
               NVL(V22.BILL_AMT_CLEARED, 0) AS AMOUNT_REALISED,
               (NVL(V22.BILL_AMOUNT, 0) - NVL(V22.BILL_AMT_CLEARED, 0)) AS AMOUNT_OUTSTANDING,
               V22.CASE_NO,
               TO_CHAR(V22.PO_NO) AS PO_NO,
               TO_CHAR(V22.PO_DT, 'dd/mm/yyyy') AS PO_DT,
               V22.PO_OR_LETTER,
               (V22.CONSIGNEE_CD || '-' || CONSIGNEE || CONSIGNEE_ADD1) AS CONSIGNEE,
               V22.BPO_CD || '-' || BPO_NAME || '/' || BPO_RLY || '/' || BPO_CITY AS BPO,
               V22.VEND_CD || '-' || TRIM(VEND_NAME) || '/' || TRIM(VENDOR_CITY) AS VENDOR,
               T09.IE_NAME,
               V22.INVOICE_NO,
               V22.RECIPIENT_GSTIN_NO,
               V22.IC_NO,
               TO_CHAR(V22.IC_DT, 'dd/mm/yyyy') AS IC_DT,
               A.AU || '-' || AUDESC || '/' || ADDRESS AS AU_DESC,
               'http://49.50.102.182/signed/' || V22.BILL_NO || '.pdf' AS ONLINE_INVOICE,
               V22.CASE_NO || '-' || V22.BK_NO || '-' || V22.SET_NO AS IC_PHOTO,
               V22.PO_SOURCE,
               TO_CHAR(V22.PO_DT, 'yyyy') AS PO_YR,
               T91.IMMS_RLY_CD,
               V22.INVOICE_SUPP_DOCS
        FROM V22_BILL V22
        JOIN T09_IE T09 ON V22.IE_CD = T09.IE_CD
        LEFT JOIN T91_RAILWAYS T91 ON V22.BPO_RLY = T91.RLY_CD
        LEFT JOIN AU_CRIS A ON V22.AU = A.AU
        WHERE V22.BPO_TYPE = p_BPO_Type
          AND (SUBSTR(V22.BILL_NO, 1, 1) NOT IN ('O', 'T', 'X', 'F', 'D', 'R'))
          AND (p_BPO_RLY IS NULL OR V22.BPO_RLY = p_BPO_RLY)
          AND (
            (p_DateType = 'M' AND TO_CHAR(V22.BILL_DT, 'yyyyMM') = p_WYrMth)
            OR (p_DateType = 'P' AND TO_CHAR(V22.BILL_DT, 'yyyyMMdd') BETWEEN p_FromDate AND p_ToDate)
          )
          AND (
          (p_AllRegions = 1 AND V22.REGION_CODE IS NOT NULL)
          OR (p_AllRegions = 0 AND V22.REGION_CODE = p_RegionCode)
          )
          
          --AND (p_AllRegions = 1 OR V22.REGION_CODE = p_RegionCode)
        ORDER BY V22.REGION_CODE, V22.BPO_TYPE, V22.BPO_RLY, V22.BILL_DT, V22.BILL_NO;
END;
/


create or replace PROCEDURE SP_GET_BILLSNOTCRIS
(
    wFrmDt IN VARCHAR2,
    wToDt IN VARCHAR2,
    pClientType IN VARCHAR2,
    pAU IN VARCHAR2,
    pRegionType IN VARCHAR2,
    pRegion IN VARCHAR2,
    p_Cursor OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_Cursor FOR
    SELECT V22.BILL_NO,
           TO_CHAR(V22.BILL_DT, 'dd/mm/yyyy') AS BILL_DT,
           V22.BPO_RLY,
           V22.BILL_AMOUNT,
           NVL(V22.BILL_AMT_CLEARED, 0) AS AMT_CLEARED,
           NVL(V22.AMOUNT_RECEIVED, 0) AS AMT_RECEIVED,
           V22.AU,
           TO_CHAR(V22.DIG_BILL_GEN_DT, 'DD/MM/YYYY') AS BILL_GEN_DATE,
           V22.INVOICE_NO,
           V22.PO_OR_LETTER,
           V22.IRN_NO
    FROM V22_BILL V22
    LEFT JOIN RITES_BILL_DTLS R ON (V22.BILL_NO = R.BILL_NO)
    WHERE (R.BILL_NO IS NULL)
      AND V22.BPO_TYPE = 'R'
      AND NVL(V22.AMOUNT_RECEIVED, 0) = 0
      AND (V22.BILL_DT BETWEEN TO_DATE(wFrmDt, 'dd/mm/yyyy') AND TO_DATE(wToDt, 'dd/mm/yyyy'))
      AND (pClientType IS NULL OR V22.BPO_RLY = pClientType)
      AND (pAU IS NULL OR V22.AU = pAU)
      AND (
          (pRegionType = 'Y' AND V22.REGION_CODE IS NOT NULL)
          OR (pRegionType = 'N' AND V22.REGION_CODE = pRegion)
          )
    ORDER BY V22.BPO_RLY, V22.BILL_DT, V22.BILL_NO;
END;
/

create or replace PROCEDURE SP_GET_BILLSCRISSUBMITTED
(
    rdbPRly IN VARCHAR2,
    rdbPAU IN VARCHAR2,
    lstClientType IN VARCHAR2,
    lstAU IN VARCHAR2,
    chkAllRegions IN VARCHAR2,
    pRegion IN VARCHAR2,
    p_Cursor OUT SYS_REFCURSOR
) AS
BEGIN
  DECLARE
    sql_query VARCHAR2(4000);
  BEGIN
    sql_query := 'SELECT R.BILL_NO, TO_CHAR(r.invoicedate, ''DD/MM/YYYY'') BILL_DT, r.bpo_rly, R.bk_no, R.AMOUNT BILL_AMOUNT, R.set_no, R.BILL_RESENT_COUNT, R.CO6_STATUS, TO_CHAR(R.RETURN_DATE, ''DD/MM/YYYY'') RETURN_DT, R.RETURN_REASON, R.AU FROM RITES_BILL_DTLS R, (SELECT MAX(BILL_RESENT_COUNT) AS MAXCOUNT, BILL_NO FROM RITES_BILL_DTLS GROUP BY BILL_NO) MAXRESULTS WHERE R.BILL_NO = MAXRESULTS.BILL_NO AND R.BILL_RESENT_COUNT = MAXRESULTS.MAXCOUNT AND CO6_STATUS = ''R''';

    IF rdbPRly = 'P' THEN
      sql_query := sql_query || ' AND R.BPO_RLY = ''' || lstClientType || '''';
    END IF;

    IF rdbPAU = 'P' THEN
      sql_query := sql_query || ' AND R.AU = ''' || lstAU || '''';
    END IF;

    IF chkAllRegions = 'N' THEN
      sql_query := sql_query || ' AND R.REGION_CODE = ''' || pRegion || '''';
    END IF;

    IF rdbPRly = 'P' AND chkAllRegions = 'N' THEN
      sql_query := sql_query || ' AND R.BILL_NO NOT IN (SELECT BILL_NO FROM V22_BILL WHERE (NVL(AMOUNT_RECEIVED, 0) > 0 OR NVL(CNOTE_AMOUNT, 0) > 0) AND BPO_RLY = ''' || lstClientType || ''' AND REGION_CODE = ''' || pRegion || ''')';
    ELSIF rdbPRly = 'P' AND chkAllRegions = 'Y' THEN
      sql_query := sql_query || ' AND R.BILL_NO NOT IN (SELECT BILL_NO FROM V22_BILL WHERE (NVL(AMOUNT_RECEIVED, 0) > 0 OR NVL(CNOTE_AMOUNT, 0) > 0) AND BPO_RLY = ''' || lstClientType || ''')';
    ELSIF rdbPRly = 'A' AND chkAllRegions = 'Y' THEN
      sql_query := sql_query || ' AND R.BILL_NO NOT IN (SELECT BILL_NO FROM V22_BILL WHERE (NVL(AMOUNT_RECEIVED, 0) > 0 OR NVL(CNOTE_AMOUNT, 0) > 0))';
    ELSIF rdbPRly = 'A' AND chkAllRegions = 'N' THEN
      sql_query := sql_query || ' AND R.BILL_NO NOT IN (SELECT BILL_NO FROM V22_BILL WHERE (NVL(AMOUNT_RECEIVED, 0) > 0 OR NVL(CNOTE_AMOUNT, 0) > 0) AND REGION_CODE = ''' || pRegion || ''')';
    ELSE
      sql_query := sql_query || ' AND R.BILL_NO NOT IN (SELECT BILL_NO FROM V22_BILL WHERE (NVL(AMOUNT_RECEIVED, 0) > 0 OR NVL(CNOTE_AMOUNT, 0) > 0))';
    END IF;

    sql_query := sql_query || ' ORDER BY R.BPO_RLY, R.REGION_CODE, BILL_DT, R.BILL_NO';
    DBMS_OUTPUT.PUT_LINE('SQL Query: ' || sql_query);
    -- Open the cursor and assign the result of the query to the output parameter.
    OPEN p_Cursor FOR sql_query;
  END;
END;
/

create or replace TRIGGER TRG_T61_ITEM_MASTER
AFTER UPDATE ON IBSDEV.T61_ITEM_MASTER
FOR EACH ROW
BEGIN

    INSERT INTO IBSDEV.T61_ITEM_MASTER_HISTORY
    (
        ITEM_CD, ITEM_DESC, DEPARTMENT, TIME_FOR_INSP, CHECKSHEET,
        USER_ID, DATETIME, IE, CM, CREATION_REV_DT,
        ISDELETED, CREATEDBY, UPDATEDBY, CREATEDDATE, UPDATEDDATE, ActionType, ActionDate, ActionUserID
    )
    VALUES
    (
        :OLD.ITEM_CD, :OLD.ITEM_DESC, :OLD.DEPARTMENT, :OLD.TIME_FOR_INSP, :OLD.CHECKSHEET,
        :OLD.USER_ID, :OLD.DATETIME, :OLD.IE, :OLD.CM, :OLD.CREATION_REV_DT,
        :OLD.ISDELETED, :OLD.CREATEDBY, :OLD.UPDATEDBY, :OLD.CREATEDDATE, :OLD.UPDATEDDATE, 'U',SYSDATE,:OLD.UPDATEDBY
    );
END;

create or replace TRIGGER "IBSDEV"."TRG_T72_IE_MESSAGES" 
AFTER UPDATE ON IBSDEV.T72_IE_MESSAGES
FOR EACH ROW
BEGIN
IF updating THEN

    INSERT INTO "IBSDEV"."T72_IE_MESSAGES_HISTORY" (
    "MESSAGE_ID",
    "LETTER_NO",
    "LETTER_DT",
    "MESSAGE",
    "USER_ID",
    "DATETIME",
    "REGION_CODE",
    "MESSAGE_DT",
    "CREATEDBY",
    "UPDATEDBY",
    "CREATEDDATE",
    "UPDATEDDATE",
    "ISDELETED",
    "ACTIONTYPE",
    "ACTIONDATE",
    "ACTIONUSERID"

) VALUES (
    :OLD.MESSAGE_ID,
    :OLD.LETTER_NO,
    :OLD.LETTER_DT,
    :OLD.MESSAGE,
    :OLD.USER_ID,
    :OLD.DATETIME,
    :OLD.REGION_CODE,
    :OLD.MESSAGE_DT,
    :OLD.CREATEDBY,
    :OLD.UPDATEDBY,
    :OLD.CREATEDDATE,
    :OLD.UPDATEDDATE,
    :OLD.ISDELETED,
    'U',      
    SYSTIMESTAMP,          
    :OLD.UPDATEDBY
);
END IF;
END;

create or replace PROCEDURE SP_GET_REMITANCE_CHECKWISE
(
  p_FrmDt IN VARCHAR2,
  p_ToDt IN VARCHAR2,
  p_ACC_CD IN VARCHAR2,
  p_Region IN VARCHAR2,
  P_ReportType IN VARCHAR2,
  P_BPOName IN VARCHAR2,
  P_ClientType IN VARCHAR2,
  P_ClientName IN VARCHAR2,
  p_Result OUT SYS_REFCURSOR
  

) AS
BEGIN
 
  IF P_ReportType = 'Report1' THEN
  OPEN p_Result FOR
    SELECT T25.VCHR_NO,
           T94.BANK_NAME,
           T25.CHQ_NO,
           T25.CHQ_DT AS CHQ_DT,
           T25.AMOUNT,
           T25.ACC_CD,
           T95.ACC_DESC,
           T25.CASE_NO,
           T24.VCHR_DT AS VCHR_DT,
           NVL2(T25.BPO_CD, V12.BPO || '/' || T25.NARRATION, T25.NARRATION) AS NARRATION,
           V12.BPO
    FROM T24_RV T24
    JOIN T25_RV_DETAILS T25 ON T24.VCHR_NO = T25.VCHR_NO
    JOIN T94_BANK T94 ON T25.BANK_CD = T94.BANK_CD
    LEFT JOIN V12_BILL_PAYING_OFFICER V12 ON T25.BPO_CD = V12.BPO_CD
    JOIN T95_ACCOUNT_CODES T95 ON T25.ACC_CD = T95.ACC_CD
    WHERE T24.VCHR_DT BETWEEN TO_DATE(p_FrmDt, 'dd/mm/yyyy') AND TO_DATE(p_ToDt, 'dd/mm/yyyy')
      --AND T25.ACC_CD = p_ACC_CD
      AND (
          (p_ACC_CD IS NULL AND T25.ACC_CD IS NOT NULL)
          OR (p_ACC_CD IS NOT NULL AND T25.ACC_CD = p_ACC_CD)
          )
      AND SUBSTR(T24.VCHR_NO, 1, 1) = p_Region
    ORDER BY T24.VCHR_DT, T24.VCHR_NO, T25.CHQ_DT, T94.BANK_NAME, T25.CHQ_NO;
  
    ELSIF P_ReportType = 'Report2' THEN
    OPEN p_Result FOR
    SELECT T24.VCHR_NO,
           T24.VCHR_DT AS VCHR_DT,
           T94.BANK_NAME,
           T25.CHQ_NO,
           T25.CHQ_DT AS CHQ_DT,
           NVL(T25.AMOUNT, 0) AS CHQ_AMT,
           T25.ACC_CD,
           NVL(V22.BILL_AMOUNT, 0) AS BILL_AMT,
           NVL(T26.AMOUNT_CLEARED, 0) AS AMT_CLEARED,
           (NVL(V22.BILL_AMOUNT, 0) - NVL(V22.BILL_AMT_CLEARED, 0)) AS EXCESSORSHORT,
           T25.ACC_CD,
           T26.BILL_NO,
           T26.POSTING_DT AS POSTING_DT,
           V22.BILL_DT AS BILL_DT,
           (V22.BPO_CD || ' - ' || V22.BPO_NAME || ' / ' || NVL2(V22.BPO_ADD, V22.BPO_ADD || '/' || V22.BPO_CITY, V22.BPO_CITY)) AS BPO
    FROM T24_RV T24
    JOIN T25_RV_DETAILS T25 ON T24.VCHR_NO = T25.VCHR_NO
    JOIN T26_CHEQUE_POSTING T26 ON T25.CHQ_NO = T26.CHQ_NO
                                AND T25.CHQ_DT = T26.CHQ_DT
                                AND T25.BANK_CD = T26.BANK_CD
    JOIN T94_BANK T94 ON T25.BANK_CD = T94.BANK_CD
    JOIN V22_BILL V22 ON T26.BILL_NO = V22.BILL_NO
    WHERE T26.POSTING_DT BETWEEN TO_DATE(p_FrmDt, 'dd/mm/yyyy') AND TO_DATE(p_ToDt, 'dd/mm/yyyy')
      AND SUBSTR(T25.VCHR_NO, 1, 1) = p_Region
    ORDER BY T26.POSTING_DT, T26.BILL_NO;
    
     ELSIF P_ReportType = 'Report3' THEN
     OPEN p_Result FOR
     
     SELECT T94.BANK_NAME,
           T25.CHQ_NO,
           T25.CHQ_DT AS CHQ_DT,
           NVL(T25.AMOUNT, 0) AS CHQ_AMT,
           NVL(V22.BILL_AMOUNT, 0) AS BILL_AMT,
           NVL(T26.AMOUNT_CLEARED, 0) AS AMT_CLEARED,
           (NVL(V22.BILL_AMOUNT, 0) - NVL(V22.BILL_AMT_CLEARED, 0)) AS EXCESSORSHORT,
           T25.ACC_CD,
           T26.BILL_NO,
           T26.POSTING_DT AS POSTING_DT,
           V22.BILL_DT AS BILL_DT,
           (V22.BPO_CD || ' - ' || V22.BPO_NAME || ' / ' || NVL2(V22.BPO_ADD, V22.BPO_ADD || '/' || V22.BPO_CITY, V22.BPO_CITY)) AS BPO
    FROM T25_RV_DETAILS T25
    JOIN T26_CHEQUE_POSTING T26 ON T25.CHQ_NO = T26.CHQ_NO
                                AND T25.CHQ_DT = T26.CHQ_DT
                                AND T25.BANK_CD = T26.BANK_CD
    JOIN T94_BANK T94 ON T25.BANK_CD = T94.BANK_CD
    JOIN V22_BILL V22 ON T26.BILL_NO = V22.BILL_NO
    WHERE (V22.BILL_DT BETWEEN TO_DATE(p_FrmDt, 'dd/mm/yyyy') AND TO_DATE(p_ToDt, 'dd/mm/yyyy'))
      AND (T26.POSTING_DT BETWEEN TO_DATE(p_FrmDt, 'dd/mm/yyyy') AND TO_DATE(p_ToDt, 'dd/mm/yyyy'))
      AND SUBSTR(T25.VCHR_NO, 1, 1) = p_Region
    ORDER BY T26.BILL_NO, T26.POSTING_DT;
    
    ELSIF P_ReportType = 'Report4' THEN
    OPEN p_Result FOR
     
    SELECT T94.BANK_NAME,
           T26.CHQ_NO,
           T26.CHQ_DT AS CHQ_DT,
           T25.AMOUNT,
           T26.BILL_NO,
           T26.BILL_AMOUNT,
           T26.AMOUNT_CLEARED,
           T26.POSTING_DT AS POSTING_DT
    FROM T26_CHEQUE_POSTING T26
    JOIN T25_RV_DETAILS T25 ON T26.CHQ_NO = T25.CHQ_NO
                            AND T26.CHQ_DT = T25.CHQ_DT
                            AND T26.BANK_CD = T25.BANK_CD
    JOIN T94_BANK T94 ON T26.BANK_CD = T94.BANK_CD
    WHERE (T26.POSTING_DT BETWEEN TO_DATE(p_FrmDt, 'dd/mm/yyyy') AND TO_DATE(p_ToDt, 'dd/mm/yyyy'))
      AND SUBSTR(T26.BILL_NO, 1, 1) = p_Region
    ORDER BY T94.BANK_NAME, T26.CHQ_NO, T26.CHQ_DT, T26.POSTING_DT;
    
    ELSIF P_ReportType = 'Report5' THEN
    OPEN p_Result FOR
    
    SELECT T24.VCHR_NO,
           T24.VCHR_DT,
           T94.BANK_NAME,
           T25.CHQ_NO,
           T25.CHQ_DT AS CHQ_DT,
           T25.AMOUNT,
           T25.SUSPENSE_AMT,
           NVL2(T25.BPO_CD, V12.BPO || '_' || T25.NARRATION, T25.NARRATION) AS NARRATION,
           CASE
             WHEN T20.ACC_GROUP = 'Z006' THEN 'BPO_SAP_CD: ' || T22.SAP_CUST_CD_BPO
             WHEN T20.ACC_GROUP = 'Z007' THEN 'CONSIGNEE_SAP_CD: ' || T22.SAP_CUST_CD_CON
             WHEN T20.ACC_GROUP IS NULL THEN 'IRFC_BPO_SAP_CD: ' || T22.SAP_CUST_CD_IRFC
           END AS SAP_CUST_CD,
           T26.BILL_NO,
           T26.BILL_AMOUNT,
           NVL(T26.AMOUNT_CLEARED, 0) AS AMOUNT_CLEARED,
           POSTING_DT,
           T20.ACC_GROUP,
           T20.RECIPIENT_GSTIN_NO,
           T22.BILL_DT,
           NVL(T22.TDS, 0) AS TDS_AMT,
           T22.TDS_DT,
           T25.ACC_CD,
           T95.ACC_DESC
    FROM T24_RV T24
    JOIN T25_RV_DETAILS T25 ON T24.VCHR_NO = T25.VCHR_NO
    JOIN T94_BANK T94 ON T25.BANK_CD = T94.BANK_CD
    LEFT JOIN V12_BILL_PAYING_OFFICER V12 ON T25.BPO_CD = V12.BPO_CD
    LEFT JOIN T26_CHEQUE_POSTING T26 ON T25.CHQ_NO = T26.CHQ_NO
                                    AND T25.CHQ_DT = T26.CHQ_DT
                                    AND T25.BANK_CD = T26.BANK_CD
    LEFT JOIN T20_IC T20 ON T20.BILL_NO = T26.BILL_NO
    LEFT JOIN V22_BILL T22 ON T22.BILL_NO = T26.BILL_NO
    JOIN T95_ACCOUNT_CODES T95 ON T25.ACC_CD = T95.ACC_CD
    WHERE T24.VCHR_DT BETWEEN TO_DATE(p_FrmDt, 'dd/mm/yyyy') AND TO_DATE(p_ToDt, 'dd/mm/yyyy')
     AND (
          (p_ACC_CD IS NULL AND T25.ACC_CD IS NOT NULL)
          OR (p_ACC_CD IS NOT NULL AND T25.ACC_CD = p_ACC_CD)
          )
      AND SUBSTR(T24.VCHR_NO, 1, 1) = p_Region
    ORDER BY T24.VCHR_DT, T24.VCHR_NO, T25.CHQ_DT, T94.BANK_NAME, T25.CHQ_NO, T26.POSTING_DT, T26.BILL_NO;
    
    ELSIF P_ReportType = 'Report6' THEN
    OPEN p_Result FOR
    
    SELECT T94.BANK_NAME,
           T26.CHQ_NO,
           T26.CHQ_DT,
           T25.AMOUNT,
           T26.BILL_NO,
           T22.BILL_DT,
           T26.BILL_AMOUNT,
           T26.AMOUNT_CLEARED,
           T26.POSTING_DT,
           B.BPO_CD,
           (B.BPO_CD || '-' || B.BPO_NAME || '/' || B.BPO_RLY || '/' || NVL2(B.BPO_ADD, B.BPO_ADD || '/', '') || NVL2(C.LOCATION, C.CITY || '/' || C.LOCATION, C.CITY)) AS BPO,
           B.BPO_TYPE,
           B.BPO_RLY
    FROM T26_CHEQUE_POSTING T26
    JOIN T25_RV_DETAILS T25 ON T26.CHQ_NO = T25.CHQ_NO
                           AND T26.CHQ_DT = T25.CHQ_DT
                           AND T26.BANK_CD = T25.BANK_CD
    JOIN T94_BANK T94 ON T26.BANK_CD = T94.BANK_CD
    JOIN T12_BILL_PAYING_OFFICER B ON T25.BPO_CD = B.BPO_CD
    JOIN T03_CITY C ON B.BPO_CITY_CD = C.CITY_CD
    JOIN T22_BILL T22 ON T26.BILL_NO = T22.BILL_NO
    WHERE (T26.POSTING_DT BETWEEN TO_DATE(p_FrmDt, 'dd/mm/yyyy') AND TO_DATE(p_ToDt, 'dd/mm/yyyy'))
      AND SUBSTR(T26.BILL_NO, 1, 1) = p_Region
      AND (
            (P_BPOName IS NULL AND (B.BPO_TYPE = P_ClientType AND B.BPO_RLY = P_ClientName))
            OR
            (P_BPOName IS NOT NULL AND B.BPO_CD = P_BPOName)
            )
     ORDER BY B.BPO_CD, T94.BANK_NAME, T26.CHQ_NO, T26.CHQ_DT, T26.POSTING_DT;
    
    ELSIF P_ReportType = 'Report7' THEN
    OPEN p_Result FOR
    SELECT BILL_NO,
           BILL_DT AS BILL_DT,
           BILL_AMOUNT,
           NVL(BILL_AMT_CLEARED, 0) AS BILL_AMT_CLEARED,
           (NVL(BILL_AMOUNT, 0) - NVL(BILL_AMT_CLEARED, 0)) AS EXCESS_SHORT,
           (TRIM(BPO_NAME) || ' ' || TRIM(BPO_ORGN) || ' ' || TRIM(BPO_ADD) || ' ' || TRIM(BPO_CITY)) AS BPO
    FROM V22_BILL
    WHERE REGION_CODE = p_Region
      AND ((NVL(BILL_AMOUNT, 0) - NVL(BILL_AMT_CLEARED, 0)) <> 0)
      AND (BILL_DT BETWEEN TO_DATE(p_FrmDt, 'dd/mm/yyyy') AND TO_DATE(p_ToDt, 'dd/mm/yyyy'))
      AND (NVL(BILL_AMOUNT, 0) > 0)
      AND (NVL(BILL_AMT_CLEARED, 0) > 0)
    ORDER BY (TRIM(BPO_NAME) || ' ' || TRIM(BPO_ORGN) || ' ' || TRIM(BPO_ADD) || ' ' || TRIM(BPO_CITY)), BILL_NO;
    END IF;
END;
/


create or replace PROCEDURE SP_GENERATE_BILL_NEW (
    in_region_cd    IN CHAR,
    in_case_no      IN VARCHAR2,
    in_call_recv_dt IN VARCHAR2,
    in_call_sno     IN INT,
    in_consignee_cd IN INT,
    in_bill         IN VARCHAR2,
    in_fee_type     IN VARCHAR2,
    in_fee          IN NUMBER,
    in_tax_type     IN VARCHAR2,
    in_no_of_insp   IN INT,
    in_max_fee      IN INT,
    in_min_fee      IN INT,
    in_bill_dt      IN VARCHAR2,
    in_adv_bill     IN VARCHAR2,
    p_result_cursor OUT SYS_REFCURSOR
    --out_err_cd      OUT INT,
    --out_bill        OUT VARCHAR2,
    --out_fee         OUT INT
) IS

    CURSOR c1 IS
    SELECT
        c.item_srno_po          srno,
        c.item_desc_po          item,
        nvl(c.qty_passed, 0)    qty_passed,
        nvl(p.qty, 0)           qty,
        nvl(p.rate, 0)          rate,
        p.uom_cd                uom,
        nvl(p.basic_value, 0)   basic_value,
        nvl(p.sales_tax_per, 0) stax_per,
        nvl(p.sales_tax, 0)     stax,
        p.excise_type           excise_type,
        nvl(p.excise_per, 0)    excise_per,
        nvl(p.excise, 0)        excise,
        p.discount_type         discount_type,
        nvl(p.discount_per, 0)  discount_per,
        nvl(p.discount, 0)      discount,
        p.ot_charge_type        ot_charge_type,
        nvl(p.ot_charge_per, 0) ot_charge_per,
        nvl(p.other_charges, 0) other_charges,
        nvl(p.value, 0)         value,
        nvl(u.uom_factor, 1)    div_factor
    FROM
        t18_call_details c,
        t15_po_detail    p,
        t04_uom          u
    WHERE
            c.case_no = p.case_no
        AND c.consignee_cd = p.consignee_cd
        AND c.item_srno_po = p.item_srno
        AND u.uom_cd = p.uom_cd
        AND c.case_no = in_case_no
        AND to_char(c.call_recv_dt, 'dd/mm/yyyy') = in_call_recv_dt
        AND c.consignee_cd = in_consignee_cd
        AND c.call_sno = in_call_sno;

    r1                        c1%rowtype;
    w_basic_value             NUMBER := 0;
    w_sales_tax               NUMBER := 0;
    w_excise                  NUMBER := 0;
    w_discount                NUMBER := 0;
    w_other_charges           NUMBER := 0;
    w_value                   NUMBER := 0;
    w_total_value             NUMBER := 0;
    w_bill_no                 VARCHAR2(10) := '';
    w_bill_dt                 DATE;
    w_yy                      CHAR(2);
    w_ctr                     NUMBER := 0;
    w_insp_fee                NUMBER := 0;
    w_service_tax             NUMBER := 0;
    w_edu_cess                NUMBER := 0;
    w_she_cess                NUMBER := 0;
    w_swachh_bharat_cess      NUMBER := 0;
    w_krishi_kalyan_cess      NUMBER := 0;
    w_total_fee               NUMBER := 0;
    w_adv_bill_no             NUMBER := 0;
    w_bill_status             CHAR(1) := NULL;
    w_serv_tax                NUMBER := 0;
    w_stax_rate               NUMBER := 0;
    w_e_cess                  NUMBER := 0;
    w_edu_cess_rate           NUMBER := 0;
    w_s_cess                  NUMBER := 0;
    w_she_cess_rate           NUMBER := 0;
    w_sb_cess                 NUMBER := 0;
    w_swachh_bharat_cess_rate NUMBER := 0;
    w_kk_cess                 NUMBER := 0;
    w_krishi_kalyan_cess_rate NUMBER := 0;
    my_exception EXCEPTION;
    out_err_cd                INT := 0;
BEGIN
    out_err_cd := -1;
	---
    IF ( in_fee_type IS NULL ) OR ( trim(in_fee_type) = '' ) OR ( in_fee = 0 ) THEN
        RAISE my_exception;
    END IF;
	---
	---
    out_err_cd := -2;
	---
    IF
        ( nvl(in_max_fee, 0) > 0 )
        AND ( nvl(in_min_fee, 0) > 0 )
        AND ( nvl(in_max_fee, 0) < nvl(in_min_fee, 0) )
    THEN
        RAISE my_exception;
    END IF;
	---
	---
    out_err_cd := -8;
	---
    SELECT
        stax_rate
    INTO w_serv_tax
    FROM
        t98_servicetax
    WHERE
        (
            SELECT
                ic_dt
            FROM
                t20_ic
            WHERE
                    case_no = in_case_no
                AND to_char(call_recv_dt, 'dd/mm/yyyy') = in_call_recv_dt
                AND consignee_cd = in_consignee_cd
                AND call_sno = in_call_sno
        ) BETWEEN dt_from AND dt_to;

    w_stax_rate := w_serv_tax / 100;
    SELECT
        edu_cess
    INTO w_e_cess
    FROM
        t98_servicetax
    WHERE
        (
            SELECT
                ic_dt
            FROM
                t20_ic
            WHERE
                    case_no = in_case_no
                AND to_char(call_recv_dt, 'dd/mm/yyyy') = in_call_recv_dt
                AND consignee_cd = in_consignee_cd
                AND call_sno = in_call_sno
        ) BETWEEN dt_from AND dt_to;

    w_edu_cess_rate := w_e_cess / 100;
    SELECT
        she_cess
    INTO w_s_cess
    FROM
        t98_servicetax
    WHERE
        (
            SELECT
                ic_dt
            FROM
                t20_ic
            WHERE
                    case_no = in_case_no
                AND to_char(call_recv_dt, 'dd/mm/yyyy') = in_call_recv_dt
                AND consignee_cd = in_consignee_cd
                AND call_sno = in_call_sno
        ) BETWEEN dt_from AND dt_to;

    w_she_cess_rate := w_s_cess / 100;
    SELECT
        swachh_bharat_cess
    INTO w_sb_cess
    FROM
        t98_servicetax
    WHERE
        (
            SELECT
                ic_dt
            FROM
                t20_ic
            WHERE
                    case_no = in_case_no
                AND to_char(call_recv_dt, 'dd/mm/yyyy') = in_call_recv_dt
                AND consignee_cd = in_consignee_cd
                AND call_sno = in_call_sno
        ) BETWEEN dt_from AND dt_to;

    w_swachh_bharat_cess_rate := w_sb_cess / 100;
    SELECT
        krishi_kalyan_cess
    INTO w_kk_cess
    FROM
        t98_servicetax
    WHERE
        (
            SELECT
                ic_dt
            FROM
                t20_ic
            WHERE
                    case_no = in_case_no
                AND to_char(call_recv_dt, 'dd/mm/yyyy') = in_call_recv_dt
                AND consignee_cd = in_consignee_cd
                AND call_sno = in_call_sno
        ) BETWEEN dt_from AND dt_to;

    w_krishi_kalyan_cess_rate := w_kk_cess / 100;
	---
	---  ---------------------- For New Bills -------------------------------
    IF trim(in_bill) = 'X' THEN
        w_bill_dt := TO_DATE ( in_bill_dt, 'ddmmyyyy' );
        IF TO_NUMBER ( substr(in_bill_dt, 3, 2) ) < 4 THEN
            w_yy := lpad(TO_NUMBER(substr(in_bill_dt, 7, 2)) - 1, 2, '0');

        ELSE
            w_yy := substr(in_bill_dt, 7, 2);
        END IF;
	   --
        out_err_cd := -3;
	   --
        IF in_region_cd = 'N' THEN
            IF nvl(in_adv_bill, 'X') = 'A' THEN
                SELECT
                    nvl(MAX(TO_NUMBER(substr(bill_no, 5, 6))),
                        35000) + 1
                INTO w_ctr
                FROM
                    t22_bill
                WHERE
                        substr(bill_no, 1, 1) = in_region_cd
                    AND substr(bill_no, 2, 2) = w_yy
                    AND TO_NUMBER(substr(bill_no, 5, 6)) >= 35000;

            ELSE
                SELECT
                    nvl(MAX(TO_NUMBER(substr(bill_no, 5, 6))),
                        0) + 1
                INTO w_ctr
                FROM
                    t22_bill
                WHERE
                        substr(bill_no, 1, 1) = in_region_cd
                    AND substr(bill_no, 2, 2) = w_yy
                    AND TO_NUMBER(substr(bill_no, 5, 6)) < 35001;

            END IF;
        ELSE
            SELECT
                nvl(MAX(TO_NUMBER(substr(bill_no, 5, 6))),
                    0) + 1
            INTO w_ctr
            FROM
                t22_bill
            WHERE
                    substr(bill_no, 1, 1) = in_region_cd
                AND substr(bill_no, 2, 2) = w_yy;

        END IF;

        w_bill_no := in_region_cd
                     || w_yy
                     || '-'
                     || lpad(w_ctr, 6, '0');
         --
        out_err_cd := -4;
        INSERT INTO t22_bill (
            bill_no,
            bill_dt,
            case_no,
            adv_bill
        ) VALUES (
            w_bill_no,
            w_bill_dt,
            in_case_no,
            in_adv_bill
        );

        w_bill_status := NULL;
    ELSE
        out_err_cd := -5;
        w_bill_no := in_bill;
        SELECT
            bill_status
        INTO w_bill_status
        FROM
            t22_bill
        WHERE
            bill_no = w_bill_no;

        IF w_bill_status IS NOT NULL THEN
            w_bill_status := 'U';
        END IF;
        DELETE FROM t23_bill_items
        WHERE
            bill_no = in_bill; -- For Existing Bills --
    END IF;
	---
	---
	---
    out_err_cd := -6;
	---
    FOR r1 IN c1 LOOP
        IF r1.qty_passed = r1.qty THEN
            w_basic_value := r1.basic_value;
            w_sales_tax := r1.stax;
            w_excise := r1.excise;
            w_discount := r1.discount;
            w_other_charges := r1.other_charges;
            w_value := r1.value;
        ELSE
            w_basic_value := r1.qty_passed * ( r1.rate / r1.div_factor );
		---
            IF nvl(r1.discount_type, 'X') = 'P' THEN
                w_discount := w_basic_value * r1.discount_per / 100;
            ELSIF nvl(r1.discount_type, 'X') = 'N' THEN
                w_discount := ( r1.qty_passed * r1.discount_per );
            ELSE
                w_discount := ( r1.qty_passed / r1.qty ) * r1.discount;
            END IF;

            w_value := w_basic_value - w_discount;
		---
            IF nvl(r1.excise_type, 'X') = 'P' THEN
                w_excise := w_value * r1.excise_per / 100;
            ELSE
                w_excise := ( r1.qty_passed / r1.qty ) * r1.excise;
            END IF;

            w_value := w_value + w_excise;
		---
            IF r1.stax_per = 0 THEN
                w_sales_tax := ( r1.qty_passed / r1.qty ) * r1.stax;
            ELSE
                w_sales_tax := w_value * r1.stax_per / 100;
            END IF;

            w_value := w_value + w_sales_tax;
		---
            IF nvl(r1.ot_charge_type, 'X') = 'P' THEN
                w_other_charges := w_basic_value * r1.ot_charge_per / 100;
            ELSIF nvl(r1.ot_charge_type, 'X') = 'N' THEN
                w_other_charges := ( r1.qty_passed * r1.ot_charge_per );
            ELSE
                w_other_charges := ( r1.qty_passed / r1.qty ) * r1.other_charges;
            END IF;

            w_value := w_value + w_other_charges;
		---
        END IF;

        w_total_value := w_total_value + w_value;
        INSERT INTO t23_bill_items VALUES (
            w_bill_no,
            r1.srno,
            r1.item,
            r1.qty_passed,
            r1.rate,
            r1.uom,
            w_basic_value,
            decode(r1.stax_per, 0, NULL, r1.stax_per),
            w_sales_tax,
            r1.excise_type,
            decode(r1.excise_per, 0, NULL, r1.excise_per),
            w_excise,
            r1.discount_type,
            decode(r1.discount_per, 0, NULL, r1.discount_per),
            w_discount,
            w_other_charges,
            w_value,
            r1.ot_charge_type,
            decode(r1.ot_charge_per, 0, NULL, r1.ot_charge_per)
        );

    END LOOP;
	---
	--- FEE CALCULATION ---
	---
    out_err_cd := -7;
	---
    IF in_fee_type IN ( 'D', 'H' ) THEN
        w_insp_fee := in_no_of_insp * in_fee;
    ELSIF in_fee_type = 'P' THEN
        w_insp_fee := w_total_value * in_fee / 100;
    ELSIF in_fee_type = 'L' THEN
        w_insp_fee := in_fee;
    END IF;
	---
	---
    IF in_tax_type IN ( 'I', 'D' ) THEN
        IF
            ( nvl(in_min_fee, 0) > 0 )
            AND ( in_min_fee > w_insp_fee )
        THEN
            w_insp_fee := in_min_fee;
        END IF;
	   ---
        IF
            ( nvl(in_max_fee, 0) >= 0 )
            AND ( in_max_fee < w_insp_fee )
        THEN
            w_insp_fee := in_max_fee;
        END IF;
	   ---
        w_total_fee := round(w_insp_fee);
	   ---
        w_insp_fee := w_total_fee / ( 1 + w_stax_rate + ( w_stax_rate * w_edu_cess_rate ) + ( w_stax_rate * w_she_cess_rate ) + w_swachh_bharat_cess_rate
        + w_krishi_kalyan_cess_rate );

        w_service_tax := round(w_insp_fee * w_stax_rate);
        w_edu_cess := round(w_insp_fee *(w_stax_rate * w_edu_cess_rate));
        w_she_cess := round(w_insp_fee *(w_stax_rate * w_she_cess_rate));
        w_swachh_bharat_cess := round(w_insp_fee * w_swachh_bharat_cess_rate);
        w_krishi_kalyan_cess := round(w_insp_fee * w_krishi_kalyan_cess_rate);
        w_insp_fee := w_total_fee - ( w_service_tax + w_edu_cess + w_she_cess + w_swachh_bharat_cess + w_krishi_kalyan_cess );
    ELSE
        IF ( nvl(in_max_fee, 0) >= 0 ) OR ( nvl(in_min_fee, 0) > 0 ) THEN
            IF
                ( nvl(in_min_fee, 0) > 0 )
                AND ( in_min_fee > w_insp_fee )
            THEN
                w_insp_fee := in_min_fee;
            END IF;

            IF
                ( nvl(in_max_fee, 0) >= 0 )
                AND ( in_max_fee < w_insp_fee )
            THEN
                w_insp_fee := in_max_fee;
            END IF;

        END IF;
	   ---
        IF in_tax_type = 'N' THEN
            w_service_tax := 0;
            w_edu_cess := 0;
            w_she_cess := 0;
            w_swachh_bharat_cess := 0;
            w_krishi_kalyan_cess_rate := 0;
            w_insp_fee := round(w_insp_fee);
            w_total_fee := w_insp_fee;
        ELSE
            w_service_tax := w_insp_fee * w_stax_rate;
            w_edu_cess := round(w_service_tax * w_edu_cess_rate);
            w_she_cess := round(w_service_tax * w_she_cess_rate);
            w_swachh_bharat_cess := round(w_insp_fee * w_swachh_bharat_cess_rate);
            w_krishi_kalyan_cess := round(w_insp_fee * w_krishi_kalyan_cess_rate);
            w_insp_fee := round(w_insp_fee);
            w_service_tax := round(w_service_tax);
            w_total_fee := w_insp_fee + w_service_tax + w_edu_cess + w_she_cess + w_swachh_bharat_cess + w_krishi_kalyan_cess;
        END IF;

    END IF;
	---
	---
    UPDATE t22_bill
    SET
        material_value = w_total_value,
        fee_type = in_fee_type,
        fee_rate = in_fee,
        tax_type = decode(in_tax_type, 'I', 'I', 'N', 'N',
                          'D', 'D', ''),
        insp_fee = w_insp_fee,
        service_tax = w_service_tax,
        serv_tax_rate = w_serv_tax,
        edu_cess = w_edu_cess,
        she_cess = w_she_cess,
        swachh_bharat_cess = w_swachh_bharat_cess,
        krishi_kalyan_cess = w_krishi_kalyan_cess,
        min_fee = decode(in_min_fee, 0, NULL, in_min_fee),
        max_fee = decode(in_max_fee, - 1, NULL, in_max_fee),
        bill_amount = w_total_fee,
        bill_status = w_bill_status
    WHERE
        bill_no = w_bill_no;
	---
	---
    IF trim(in_bill) = 'X' THEN
        UPDATE t20_ic
        SET
            bill_no = w_bill_no
        WHERE
                case_no = in_case_no
            AND to_char(call_recv_dt, 'dd/mm/yyyy') = in_call_recv_dt
            AND consignee_cd = in_consignee_cd
            AND call_sno = in_call_sno;

    ELSE
	---
        UPDATE t26_cheque_posting
        SET
            bill_amount = w_total_fee,DATETIME = systimestamp
        WHERE
            bill_no = w_bill_no;

    END IF;
	---
    COMMIT;
    --out_fee := w_insp_fee;
    --out_bill := w_bill_no;
    out_err_cd := 0;

    OPEN p_result_cursor FOR SELECT
                                 w_insp_fee AS out_fee,
                                 w_bill_no  AS out_bill,
                                 out_err_cd AS out_err_cd
                             FROM
                                 dual;

EXCEPTION
    WHEN no_data_found THEN
        ROLLBACK;
    WHEN my_exception THEN
        ROLLBACK;
    WHEN OTHERS THEN
        ROLLBACK;
END;
/

create or replace PROCEDURE sp_generate_bill_gst_new (
    in_region_cd    IN VARCHAR2,
    in_case_no      IN VARCHAR2,
    in_call_recv_dt IN DATE,
    in_call_sno     IN NUMBER,
    in_consignee_cd IN NUMBER,
    in_bill         IN VARCHAR2,
    in_fee_type     IN VARCHAR2,
    in_fee          IN NUMBER,
    in_tax_type     IN VARCHAR2,
    in_no_of_insp   IN NUMBER,
    in_invoice      IN VARCHAR2,
    in_max_fee      IN NUMBER,
    in_min_fee      IN NUMBER,
    in_bill_dt      IN CHAR,
    in_adv_bill     IN VARCHAR2,
    p_result_cursor OUT SYS_REFCURSOR
    --out_err_cd      OUT NUMBER,
    --out_bill        OUT VARCHAR2,
    --out_fee         OUT NUMBER
) IS

    CURSOR c1 IS
    SELECT
        c.item_srno_po          srno,
        c.item_desc_po          item,
        nvl(c.qty_passed, 0)    qty_passed,
        nvl(p.qty, 0)           qty,
        nvl(p.rate, 0)          rate,
        p.uom_cd                uom,
        nvl(p.basic_value, 0)   basic_value,
        nvl(p.sales_tax_per, 0) stax_per,
        nvl(p.sales_tax, 0)     stax,
        p.discount_type         discount_type,
        nvl(p.discount_per, 0)  discount_per,
        nvl(p.discount, 0)      discount,
        p.ot_charge_type        ot_charge_type,
        nvl(p.ot_charge_per, 0) ot_charge_per,
        nvl(p.other_charges, 0) other_charges,
        nvl(p.value, 0)         value,
        nvl(u.uom_factor, 1)    div_factor
    FROM
        t18_call_details c,
        t15_po_detail    p,
        t04_uom          u
    WHERE
            c.case_no = p.case_no
        AND c.consignee_cd = p.consignee_cd
        AND c.item_srno_po = p.item_srno
        AND u.uom_cd = p.uom_cd
        AND c.case_no = in_case_no
        AND c.call_recv_dt = in_call_recv_dt
        AND c.consignee_cd = in_consignee_cd
        AND c.call_sno = in_call_sno;

    r1              c1%ROWTYPE;
    w_basic_value   NUMBER := 0;
    w_sales_tax     NUMBER := 0;
    w_discount      NUMBER := 0;
    w_other_charges NUMBER := 0;
    w_value         NUMBER := 0;
    w_total_value   NUMBER := 0;
    w_bill_no       VARCHAR2(10) := '';
    w_invoice_no    VARCHAR2(14) := '';
    w_bill_dt       DATE;
    w_yy            VARCHAR2(4) := '';
    w_ctr           NUMBER := 0;
    w_ctr1          NUMBER := 0;
    w_insp_fee      NUMBER := 0;
    w_igst          NUMBER := 0;
    w_cgst          NUMBER := 0;
    w_sgst          NUMBER := 0;
    w_total_fee     NUMBER := 0;
    w_adv_bill_no   NUMBER := 0;
    w_bill_status   CHAR(1) := NULL;
    w_c_gst         NUMBER := 0;
    w_c_gst_rate    NUMBER := 0;
    w_i_gst         NUMBER := 0;
    w_i_gst_rate    NUMBER := 0;
    w_s_gst         NUMBER := 0;
    w_s_gst_rate    NUMBER := 0;
    w_in_region_cd  VARCHAR2(1) := '';
    w_in_adv_bill   VARCHAR2(1) := '';
    w_in_case_no    VARCHAR2(10) := '';
    out_err_cd      INT := 0;
    my_exception EXCEPTION;
BEGIN
    out_err_cd := -1;
    dbms_output.put_line('-1');
	---
    IF ( in_fee_type IS NULL ) OR ( trim(in_fee_type) = '' ) OR ( in_fee = 0 ) THEN
        RAISE my_exception;
    END IF;
	---
	---
    out_err_cd := -2;
    dbms_output.put_line('-2');
	---
    IF
        ( nvl(in_max_fee, 0) > 0 )
        AND ( nvl(in_min_fee, 0) > 0 )
        AND ( nvl(in_max_fee, 0) < nvl(in_min_fee, 0) )
    THEN
        RAISE my_exception;
    END IF;
	---
	---
    out_err_cd := -8;
	---

    SELECT
        igst_rate
    INTO w_i_gst
    FROM
        t89_gst
    WHERE
        (
            SELECT
                ic_dt
            FROM
                t20_ic
            WHERE
                    case_no = in_case_no
                AND call_recv_dt = in_call_recv_dt
                AND consignee_cd = in_consignee_cd
                AND call_sno = in_call_sno
        ) BETWEEN dt_from AND dt_to;

    w_i_gst_rate := w_i_gst / 100;
    SELECT
        sgst_rate
    INTO w_s_gst
    FROM
        t89_gst
    WHERE
        (
            SELECT
                ic_dt
            FROM
                t20_ic
            WHERE
                    case_no = in_case_no
                AND call_recv_dt = in_call_recv_dt
                AND consignee_cd = in_consignee_cd
                AND call_sno = in_call_sno
        ) BETWEEN dt_from AND dt_to;

    w_s_gst_rate := w_s_gst / 100;
    SELECT
        cgst_rate
    INTO w_c_gst
    FROM
        t89_gst
    WHERE
        (
            SELECT
                ic_dt
            FROM
                t20_ic
            WHERE
                    case_no = in_case_no
                AND call_recv_dt = in_call_recv_dt
                AND consignee_cd = in_consignee_cd
                AND call_sno = in_call_sno
        ) BETWEEN dt_from AND dt_to;

    w_c_gst_rate := w_c_gst / 100;
    
	---  ---------------------- For New Bills -------------------------------
    IF trim(in_bill) = 'X' THEN
        w_bill_dt := TO_DATE ( in_bill_dt, 'ddmmyyyy' );
        IF TO_NUMBER ( substr(in_bill_dt, 3, 2) ) < 4 THEN
            w_yy := lpad(TO_NUMBER(substr(in_bill_dt, 7, 2)) - 1, 2, '0');

        ELSE
            w_yy := substr(in_bill_dt, 7, 2);
        END IF;
       
	   --
        out_err_cd := -3;
	   --

        SELECT
            nvl(MAX(TO_NUMBER(substr(bill_no, 5, 6))),
                0) + 1
        INTO w_ctr
        FROM
            t22_bill
        WHERE
                substr(bill_no, 1, 1) = in_region_cd
            AND substr(bill_no, 2, 2) = w_yy;

        w_in_region_cd := in_region_cd;
        w_bill_no := ( w_in_region_cd
                       || w_yy );
        w_bill_no := in_region_cd
                     || w_yy
                     || '-'
                     || lpad(w_ctr, 6, '0');
                     
                    
         --
        out_err_cd := -4;
        dbms_output.put_line('-4');
        SELECT
            nvl(MAX(TO_NUMBER(substr(invoice_no, 10, 5))),
                0) + 1
        INTO w_ctr1
        FROM
            t22_bill
        WHERE
            substr(invoice_no, 1, 8) = 'R'
                                       || in_invoice
                                       || 'T'
                                       || w_yy;

        w_invoice_no := 'R'
                        || in_invoice
                        || 'T'
                        || w_yy
                        || '/'
                        || lpad(w_ctr1, 5, '0');

        w_in_adv_bill := in_adv_bill;
        w_in_case_no := in_case_no;
        dbms_output.put_line(w_bill_no);
        dbms_output.put_line(w_bill_dt);
        dbms_output.put_line(w_in_case_no);
        dbms_output.put_line(w_in_adv_bill);
        dbms_output.put_line(w_invoice_no);
        
        INSERT INTO t22_bill (
            bill_no,
            bill_dt,
            case_no,
            adv_bill,
            invoice_no
        ) VALUES (
            w_bill_no,
            w_bill_dt,
            w_in_case_no,
            w_in_adv_bill,
            w_invoice_no
        );

        w_bill_status := NULL;
    ELSE
        out_err_cd := -5;
        w_bill_no := in_bill;
        SELECT
            bill_status
        INTO w_bill_status
        FROM
            t22_bill
        WHERE
            bill_no = w_bill_no;

        IF w_bill_status IS NOT NULL THEN
            w_bill_status := 'U';
        END IF;
        DELETE FROM t23_bill_items
        WHERE
            bill_no = in_bill; -- For Existing Bills --
    END IF;
	---
	---
	---
    out_err_cd := -6;
	---
dbms_output.put_line('-6');
    FOR r1 IN c1 LOOP
    
        IF r1.qty_passed = r1.qty THEN
            w_basic_value := r1.basic_value;
            w_sales_tax := r1.stax;
            w_discount := r1.discount;
            w_other_charges := r1.other_charges;
            w_value := r1.value;
        ELSE
            w_basic_value := r1.qty_passed * ( r1.rate / r1.div_factor );
		---
            IF nvl(r1.discount_type, 'X') = 'P' THEN
                w_discount := w_basic_value * r1.discount_per / 100;
            ELSIF nvl(r1.discount_type, 'X') = 'N' THEN
                w_discount := ( r1.qty_passed * r1.discount_per );
            ELSE
                w_discount := ( r1.qty_passed / r1.qty ) * r1.discount;
            END IF;

            w_value := w_basic_value - w_discount;
            
		---
            IF r1.stax_per = 0 THEN
                w_sales_tax := ( r1.qty_passed / r1.qty ) * r1.stax;
            ELSE
                w_sales_tax := w_value * r1.stax_per / 100;
            END IF;

            w_value := w_value + w_sales_tax;
		---
            IF nvl(r1.ot_charge_type, 'X') = 'P' THEN
                w_other_charges := w_basic_value * r1.ot_charge_per / 100;
            ELSIF nvl(r1.ot_charge_type, 'X') = 'N' THEN
                w_other_charges := ( r1.qty_passed * r1.ot_charge_per );
            ELSE
                w_other_charges := ( r1.qty_passed / r1.qty ) * r1.other_charges;
            END IF;

            w_value := w_value + w_other_charges;
		---
        END IF;

        w_total_value := w_total_value + w_value;
        
        INSERT INTO t23_bill_items VALUES (
            w_bill_no,
            r1.srno,
            r1.item,
            r1.qty_passed,
            r1.rate,
            r1.uom,
            w_basic_value,
            decode(r1.stax_per, 0, NULL, r1.stax_per),
            w_sales_tax,
            '',
            '',
            0,
            r1.discount_type,
            decode(r1.discount_per, 0, NULL, r1.discount_per),
            w_discount,
            w_other_charges,
            w_value,
            r1.ot_charge_type,
            decode(r1.ot_charge_per, 0, NULL, r1.ot_charge_per)
        );

    END LOOP;
	---
	--- FEE CALCULATION ---
	---
    out_err_cd := -7;
	---
dbms_output.put_line('-7');


    IF in_fee_type IN ( 'D', 'H' ) THEN
        w_insp_fee := in_no_of_insp * in_fee;
    ELSIF in_fee_type = 'P' THEN
        w_insp_fee := w_total_value * in_fee / 100;
    ELSIF in_fee_type = 'L' THEN
        w_insp_fee := in_fee;
    END IF;
    
    
    dbms_output.put_line(in_no_of_insp);
        dbms_output.put_line(in_fee);
        dbms_output.put_line(w_insp_fee);
	---
	---
    IF ( nvl(in_max_fee, 0) >= 0 ) OR ( nvl(in_min_fee, 0) > 0 ) THEN
        IF
            ( nvl(in_min_fee, 0) > 0 )
            AND ( in_min_fee > w_insp_fee )
        THEN
            w_insp_fee := in_min_fee;
        END IF;

        IF
            ( nvl(in_max_fee, 0) >= 0 )
            AND ( in_max_fee < w_insp_fee )
        THEN
            w_insp_fee := in_max_fee;
        END IF;

    END IF;
	 ----
    w_insp_fee := round(w_insp_fee);
	----
    IF in_tax_type = 'I' THEN
        w_igst := round(w_insp_fee * w_i_gst_rate);
        w_cgst := 0;
        w_sgst := 0;
    ELSIF in_tax_type = 'C' THEN
        w_cgst := round(w_insp_fee * w_c_gst_rate);
        w_sgst := round(w_insp_fee * w_s_gst_rate);
        w_igst := 0;
    ELSIF in_tax_type = 'X' THEN
        w_cgst := 0;
        w_sgst := 0;
        w_igst := 0;
    ELSIF in_tax_type = 'Y' THEN
        w_total_fee := w_insp_fee;
        w_insp_fee := w_total_fee / ( 1 + w_i_gst_rate );
        w_igst := round(w_insp_fee * w_i_gst_rate);
        w_cgst := 0;
        w_sgst := 0;
        w_insp_fee := w_total_fee - ( w_igst );
    ELSIF in_tax_type = 'Z' THEN
        w_total_fee := w_insp_fee;
        w_insp_fee := w_total_fee / ( 1 + w_c_gst_rate + + w_s_gst_rate );
        w_igst := 0;
        w_cgst := round(w_insp_fee * w_c_gst_rate);
        w_sgst := round(w_insp_fee * w_s_gst_rate);
        w_insp_fee := w_total_fee - ( w_cgst + w_sgst );
    END IF;

    w_total_fee := round(w_insp_fee + w_cgst + w_sgst + w_igst);
	---

    UPDATE t22_bill
    SET
        material_value = w_total_value,
        fee_type = in_fee_type,
        fee_rate = in_fee,
        tax_type = in_tax_type,
        insp_fee = w_insp_fee,
        service_tax = 0,
        serv_tax_rate = 0,
        edu_cess = 0,
        she_cess = 0,
        swachh_bharat_cess = 0,
        krishi_kalyan_cess = 0,
        cgst = w_cgst,
        sgst = w_sgst,
        igst = w_igst,
        min_fee = decode(in_min_fee, 0, NULL, in_min_fee),
        max_fee = decode(in_max_fee, - 1, NULL, in_max_fee),
        bill_amount = w_total_fee,
        bill_status = NVL(w_bill_status, null)
    WHERE
        bill_no = w_bill_no;
    
	---
	---
    IF trim(in_bill) = 'X' THEN
        UPDATE t20_ic
        SET
            bill_no = w_bill_no
        WHERE
                case_no = in_case_no
            AND call_recv_dt = in_call_recv_dt
            AND consignee_cd = in_consignee_cd
            AND call_sno = in_call_sno;

    ELSE
	---
        UPDATE t26_cheque_posting
        SET
            bill_amount = w_total_fee
        WHERE
            bill_no = w_bill_no;

    END IF;
	---
    COMMIT;
    --out_fee := w_insp_fee;
    --out_bill := w_bill_no;
    out_err_cd := 0;
    
    OPEN p_result_cursor FOR SELECT
                                 w_insp_fee AS out_fee,
                                 w_bill_no  AS out_bill,
                                 out_err_cd AS out_err_cd
                             FROM
                                 dual;
                                 
EXCEPTION
    WHEN no_data_found THEN
        ROLLBACK;
    WHEN my_exception THEN
        ROLLBACK;
    WHEN OTHERS THEN
        ROLLBACK;
END;
/

create or replace PROCEDURE "SP_GENERATE_CREDIT_NOTE_NEW" (
    in_region_cd    IN VARCHAR2,
    in_case_no      IN VARCHAR2,
    in_call_recv_dt IN DATE,
    in_call_sno     IN NUMBER,
    in_consignee_cd IN NUMBER,
    in_bill         IN VARCHAR2,
    in_fee_type     IN VARCHAR2,
    in_fee          IN NUMBER,
    in_tax_type     IN VARCHAR2,
    in_no_of_insp   IN NUMBER,
    in_invoice      IN VARCHAR2,
    in_max_fee      IN NUMBER,
    in_min_fee      IN NUMBER,
    in_bill_dt      IN CHAR,
    in_adv_bill     IN VARCHAR2,
    
    in_material_value_new   IN NUMBER,
    in_insp_fee_new         IN NUMBER,
    in_bill_amount_new      IN NUMBER,
    in_material_value_diff  IN NUMBER,
    in_insp_fee_diff        IN NUMBER,
    in_bill_amount_diff     IN NUMBER,
    
    p_result_cursor OUT SYS_REFCURSOR
    --out_err_cd      OUT NUMBER,
    --out_bill        OUT VARCHAR2,
    --out_fee         OUT NUMBER
) IS

    CURSOR c1 IS
    SELECT
        c.item_srno_po          srno,
        c.item_desc_po          item,
        nvl(c.qty_passed, 0)    qty_passed,
        nvl(p.qty, 0)           qty,
        --nvl(p.rate, 0)          rate,
        nvl(c.supp_new_rate, 0)          rate,
        p.uom_cd                uom,
        nvl(p.basic_value, 0)   basic_value,
        nvl(p.sales_tax_per, 0) stax_per,
        nvl(p.sales_tax, 0)     stax,
        p.discount_type         discount_type,
        nvl(p.discount_per, 0)  discount_per,
        nvl(p.discount, 0)      discount,
        p.ot_charge_type        ot_charge_type,
        nvl(p.ot_charge_per, 0) ot_charge_per,
        nvl(p.other_charges, 0) other_charges,
        nvl(p.value, 0)         value,
        nvl(u.uom_factor, 1)    div_factor
    FROM
        t18_call_details c,
        t15_po_detail    p,
        t04_uom          u
    WHERE
            c.case_no = p.case_no
        AND c.consignee_cd = p.consignee_cd
        AND c.item_srno_po = p.item_srno
        AND u.uom_cd = p.uom_cd
        AND c.case_no = in_case_no
        AND c.call_recv_dt = in_call_recv_dt
        AND c.consignee_cd = in_consignee_cd
        AND c.call_sno = in_call_sno;

    r1              c1%rowtype;
    w_basic_value   NUMBER := 0;
    w_sales_tax     NUMBER := 0;
    w_discount      NUMBER := 0;
    w_other_charges NUMBER := 0;
    w_value         NUMBER := 0;
    w_total_value   NUMBER := 0;
    w_bill_no       VARCHAR2(10) := '';
    w_invoice_no    VARCHAR2(14) := '';
    w_bill_dt       DATE;
    w_yy            CHAR(2);
    w_ctr           NUMBER := 0;
    w_ctr1          NUMBER := 0;
    w_insp_fee      NUMBER := 0;
    w_igst          NUMBER := 0;
    w_cgst          NUMBER := 0;
    w_sgst          NUMBER := 0;
    w_total_fee     NUMBER := 0;
    w_adv_bill_no   NUMBER := 0;
    w_bill_status   CHAR(1) := NULL;
    w_c_gst         NUMBER := 0;
    w_c_gst_rate    NUMBER := 0;
    w_i_gst         NUMBER := 0;
    w_i_gst_rate    NUMBER := 0;
    w_s_gst         NUMBER := 0;
    w_s_gst_rate    NUMBER := 0;
    out_err_cd      INT := 0;
    my_exception EXCEPTION;
BEGIN
    out_err_cd := -1;
	---
    IF ( in_fee_type IS NULL ) OR ( trim(in_fee_type) = '' ) OR ( in_fee = 0 ) THEN
        RAISE my_exception;
    END IF;
	---
	---
    out_err_cd := -2;
	---
    IF
        ( nvl(in_max_fee, 0) > 0 )
        AND ( nvl(in_min_fee, 0) > 0 )
        AND ( nvl(in_max_fee, 0) < nvl(in_min_fee, 0) )
    THEN
        RAISE my_exception;
    END IF;
	---
	---
    out_err_cd := -8;
	---
    SELECT
        igst_rate
    INTO w_i_gst
    FROM
        t89_gst
    WHERE
        (
            SELECT
                ic_dt
            FROM
                t20_ic
            WHERE
                    case_no = in_case_no
                AND call_recv_dt = in_call_recv_dt
                AND consignee_cd = in_consignee_cd
                AND call_sno = in_call_sno
        ) BETWEEN dt_from AND dt_to;

    w_i_gst_rate := w_i_gst / 100;
    SELECT
        sgst_rate
    INTO w_s_gst
    FROM
        t89_gst
    WHERE
        (
            SELECT
                ic_dt
            FROM
                t20_ic
            WHERE
                    case_no = in_case_no
                AND call_recv_dt = in_call_recv_dt
                AND consignee_cd = in_consignee_cd
                AND call_sno = in_call_sno
        ) BETWEEN dt_from AND dt_to;

    w_s_gst_rate := w_s_gst / 100;
    SELECT
        cgst_rate
    INTO w_c_gst
    FROM
        t89_gst
    WHERE
        (
            SELECT
                ic_dt
            FROM
                t20_ic
            WHERE
                    case_no = in_case_no
                AND call_recv_dt = in_call_recv_dt
                AND consignee_cd = in_consignee_cd
                AND call_sno = in_call_sno
        ) BETWEEN dt_from AND dt_to;

    w_c_gst_rate := w_c_gst / 100;
	---  ---------------------- For New Bills -------------------------------
    IF trim(in_bill) = 'Z' THEN
        w_bill_dt := TO_DATE ( in_bill_dt, 'ddmmyyyy' );
       IF TO_NUMBER ( substr(in_bill_dt, 3, 2) ) < 4 THEN
            w_yy := lpad(TO_NUMBER(substr(in_bill_dt, 7, 2)) - 1, 2, '0');
        ELSE
            w_yy := substr(in_bill_dt, 7, 2);
        END IF;
        
        
	   --
        out_err_cd := -3;
	   --
       dbms_output.put_line(w_yy);
        SELECT
            nvl(MAX(TO_NUMBER(substr(bill_no, 5, 6))),
                0) + 1
        INTO w_ctr
        FROM
            t22_bill
        WHERE
                substr(bill_no, 1, 1) = in_region_cd
            AND substr(bill_no, 2, 2) = w_yy;

        w_bill_no := in_region_cd
                     || w_yy
                     || '-'
                     || lpad(w_ctr, 6, '0');
        dbms_output.put_line(w_yy);
         --
        out_err_cd := -4;
        SELECT
            nvl(MAX(TO_NUMBER(substr(invoice_no, 10, 5))),
                0) + 1
        INTO w_ctr1
        FROM
            t22_bill
        WHERE
            substr(invoice_no, 1, 8) = 'R'
                                       || in_invoice
                                       || 'C'
                                       || w_yy;

        w_invoice_no := 'R'
                        || in_invoice
                        || 'C'
                        || w_yy
                        || '/'
                        || lpad(w_ctr1, 5, '0');
        
        
        INSERT INTO t22_bill (
            bill_no,
            bill_dt,
            case_no,
            adv_bill,
            invoice_no
        ) VALUES (
            w_bill_no,
            w_bill_dt,
            in_case_no,
            in_adv_bill,
            w_invoice_no
        );

        w_bill_status := NULL;
    ELSE
        out_err_cd := -5;
        w_bill_no := in_bill;
        SELECT
            bill_status
        INTO w_bill_status
        FROM
            t22_bill
        WHERE
            bill_no = w_bill_no;

        IF w_bill_status IS NOT NULL THEN
            w_bill_status := 'U';
        END IF;
        DELETE FROM t23_bill_items
        WHERE
            bill_no = in_bill; -- For Existing Bills --
    END IF;
	---
	---
	---
    out_err_cd := -6;
	---
    FOR r1 IN c1 LOOP
        IF r1.qty_passed = r1.qty THEN
            w_basic_value := r1.basic_value;
            w_sales_tax := r1.stax;
            w_discount := r1.discount;
            w_other_charges := r1.other_charges;
            w_value := r1.value;
        ELSE
            w_basic_value := r1.qty_passed * ( r1.rate / r1.div_factor );
		---
            IF nvl(r1.discount_type, 'X') = 'P' THEN
                w_discount := w_basic_value * r1.discount_per / 100;
            ELSIF nvl(r1.discount_type, 'X') = 'N' THEN
                w_discount := ( r1.qty_passed * r1.discount_per );
            ELSE
                w_discount := ( r1.qty_passed / r1.qty ) * r1.discount;
            END IF;

            w_value := w_basic_value - w_discount;
		---
            IF r1.stax_per = 0 THEN
                w_sales_tax := ( r1.qty_passed / r1.qty ) * r1.stax;
            ELSE
                w_sales_tax := w_value * r1.stax_per / 100;
            END IF;

            w_value := w_value + w_sales_tax;
		---
            IF nvl(r1.ot_charge_type, 'X') = 'P' THEN
                w_other_charges := w_basic_value * r1.ot_charge_per / 100;
            ELSIF nvl(r1.ot_charge_type, 'X') = 'N' THEN
                w_other_charges := ( r1.qty_passed * r1.ot_charge_per );
            ELSE
                w_other_charges := ( r1.qty_passed / r1.qty ) * r1.other_charges;
            END IF;

            w_value := w_value + w_other_charges;
		---
        END IF;

        w_total_value := w_total_value + w_value;
        INSERT INTO t23_bill_items VALUES (
            w_bill_no,
            r1.srno,
            r1.item,
            r1.qty_passed,
            r1.rate,
            r1.uom,
            w_basic_value,
            decode(r1.stax_per, 0, NULL, r1.stax_per),
            w_sales_tax,
            '',
            '',
            0,
            r1.discount_type,
            decode(r1.discount_per, 0, NULL, r1.discount_per),
            w_discount,
            w_other_charges,
            --w_value,
            in_material_value_diff,
            r1.ot_charge_type,
            decode(r1.ot_charge_per, 0, NULL, r1.ot_charge_per)
            
        );

    END LOOP;
	---
	--- FEE CALCULATION ---
	---
    out_err_cd := -7;
	---
    IF in_fee_type IN ( 'D', 'H' ) THEN
        w_insp_fee := in_no_of_insp * in_fee;
    ELSIF in_fee_type = 'P' THEN
        w_insp_fee := w_total_value * in_fee / 100;
    ELSIF in_fee_type = 'L' THEN
        w_insp_fee := in_fee;
    END IF;
    dbms_output.put_line(w_insp_fee);
	---
	---
    IF ( nvl(in_max_fee, 0) >= 0 ) OR ( nvl(in_min_fee, 0) > 0 ) THEN
        IF
            ( nvl(in_min_fee, 0) > 0 )
            AND ( in_min_fee > w_insp_fee )
        THEN
            w_insp_fee := in_min_fee;
        END IF;

        IF
            ( nvl(in_max_fee, 0) >= 0 )
            AND ( in_max_fee < w_insp_fee )
        THEN
            w_insp_fee := in_max_fee;
        END IF;

    END IF;
	 ----
    w_insp_fee := round(w_insp_fee);
    dbms_output.put_line(w_insp_fee);
	----
    IF in_tax_type = 'I' THEN
        w_igst := round(w_insp_fee * w_i_gst_rate);
        w_cgst := 0;
        w_sgst := 0;
    ELSIF in_tax_type = 'C' THEN
        w_cgst := round(w_insp_fee * w_c_gst_rate);
        w_sgst := round(w_insp_fee * w_s_gst_rate);
        w_igst := 0;
    ELSIF in_tax_type = 'X' THEN
        w_cgst := 0;
        w_sgst := 0;
        w_igst := 0;
    ELSIF in_tax_type = 'Y' THEN
        w_total_fee := w_insp_fee;
        w_insp_fee := w_total_fee / ( 1 + w_i_gst_rate );
        w_igst := round(w_insp_fee * w_i_gst_rate);
        w_cgst := 0;
        w_sgst := 0;
        w_insp_fee := w_total_fee - ( w_igst );
    ELSIF in_tax_type = 'Z' THEN
        w_total_fee := w_insp_fee;
        w_insp_fee := w_total_fee / ( 1 + w_c_gst_rate + + w_s_gst_rate );
        w_igst := 0;
        w_cgst := round(w_insp_fee * w_c_gst_rate);
        w_sgst := round(w_insp_fee * w_s_gst_rate);
        w_insp_fee := w_total_fee - ( w_cgst + w_sgst );
    END IF;

    w_total_fee := round(w_insp_fee + w_cgst + w_sgst + w_igst);
    dbms_output.put_line(w_total_fee);
	---
    UPDATE t22_bill
    SET
        --material_value = w_total_value,
        material_value = in_material_value_diff,
        fee_type = in_fee_type,
        fee_rate = in_fee,
        tax_type = in_tax_type,
        --insp_fee = w_insp_fee,
        insp_fee = in_insp_fee_diff,
        service_tax = 0,
        serv_tax_rate = 0,
        edu_cess = 0,
        she_cess = 0,
        swachh_bharat_cess = 0,
        krishi_kalyan_cess = 0,
        cgst = w_cgst,
        sgst = w_sgst,
        igst = w_igst,
        min_fee = decode(in_min_fee, 0, NULL, in_min_fee),
        max_fee = decode(in_max_fee, - 1, NULL, in_max_fee),
        --bill_amount = w_total_fee,
        bill_amount = in_bill_amount_diff,
        bill_status = w_bill_status,
        NEW_MATERIAL_VALUE = in_material_value_new,
        NEW_INSP_FEE = in_insp_fee_new,
        NEW_BILL_AMOUNT = in_bill_amount_new
    WHERE
        bill_no = w_bill_no;
	---
	---
    IF trim(in_bill) = 'Z' THEN
        UPDATE t20_ic
        SET
            bill_no = w_bill_no
        WHERE
            case_no = in_case_no
            AND call_recv_dt = in_call_recv_dt
            AND consignee_cd = in_consignee_cd
            AND call_sno = in_call_sno;

    ELSE
	---
        UPDATE t26_cheque_posting
        SET
            bill_amount = w_total_fee
        WHERE
            bill_no = w_bill_no;

    END IF;
	---
    COMMIT;
    --out_fee := w_insp_fee;
    --out_bill := w_bill_no;
    out_err_cd := 0;
    
    OPEN p_result_cursor FOR SELECT
                                 w_insp_fee AS out_fee,
                                 w_bill_no  AS out_bill,
                                 out_err_cd AS out_err_cd
                             FROM
                                 dual;
EXCEPTION
    WHEN no_data_found THEN
        ROLLBACK;
    WHEN my_exception THEN
        ROLLBACK;
    WHEN OTHERS THEN
        ROLLBACK;
END;
/

ALTER TABLE T20_Ic ADD Updateddate  TIMESTAMP(6) WITH TIME ZONE;
ALTER TABLE T20_Ic ADD Updatedby  NUMBER(6,0);

create or replace PROCEDURE SP_T20IC_CONSIGNEEUPDATE 
(
    p_BkNo IN VARCHAR2,
    p_SetNo IN VARCHAR2,
    p_RegionCode IN VARCHAR2,
    p_ConsigneeCd IN VARCHAR2,
    p_UserId IN VARCHAR2,
    p_UpdatedBy IN VARCHAR2,
    p_result_cursor OUT SYS_REFCURSOR
)
IS
    out_err_cd      INT := 0;
    my_exception EXCEPTION;
BEGIN
    -- Update the T20Ic record
    --out_err_cd := -1;
    UPDATE T20_Ic
    SET Consignee_Cd = p_ConsigneeCd,
        User_Id = p_UserId,
        Datetime = SYSDATE,
        Updatedby = p_UpdatedBy,
        Updateddate = SYSDATE
    WHERE Bk_No = p_BkNo
        AND Set_No = p_SetNo
        AND CASE_NO LIKE p_RegionCode || '%';
        
    IF SQL%ROWCOUNT = 0 THEN
        out_err_cd := 0; -- Record not found
    ELSE
        out_err_cd := 1; -- Success
    END IF;

    -- Check for errors and set the error code
    COMMIT;
    --out_err_cd := 0;
    
    OPEN p_result_cursor FOR SELECT
                                 out_err_cd AS out_err_cd
                             FROM
                                 dual;

EXCEPTION
    WHEN no_data_found THEN
        ROLLBACK;
    WHEN my_exception THEN
        ROLLBACK;
    WHEN OTHERS THEN
        ROLLBACK;
END;
/

create or replace PROCEDURE SP_GENERATE_BILL_NEW (
    in_region_cd    IN CHAR,
    in_case_no      IN VARCHAR2,
    in_call_recv_dt IN VARCHAR2,
    in_call_sno     IN INT,
    in_consignee_cd IN INT,
    in_bill         IN VARCHAR2,
    in_fee_type     IN VARCHAR2,
    in_fee          IN NUMBER,
    in_tax_type     IN VARCHAR2,
    in_no_of_insp   IN INT,
    in_max_fee      IN INT,
    in_min_fee      IN INT,
    in_bill_dt      IN VARCHAR2,
    in_adv_bill     IN VARCHAR2,
    p_result_cursor OUT SYS_REFCURSOR
    --out_err_cd      OUT INT,
    --out_bill        OUT VARCHAR2,
    --out_fee         OUT INT
) IS

    CURSOR c1 IS
    SELECT
        c.item_srno_po          srno,
        c.item_desc_po          item,
        nvl(c.qty_passed, 0)    qty_passed,
        nvl(p.qty, 0)           qty,
        nvl(p.rate, 0)          rate,
        p.uom_cd                uom,
        nvl(p.basic_value, 0)   basic_value,
        nvl(p.sales_tax_per, 0) stax_per,
        nvl(p.sales_tax, 0)     stax,
        p.excise_type           excise_type,
        nvl(p.excise_per, 0)    excise_per,
        nvl(p.excise, 0)        excise,
        p.discount_type         discount_type,
        nvl(p.discount_per, 0)  discount_per,
        nvl(p.discount, 0)      discount,
        p.ot_charge_type        ot_charge_type,
        nvl(p.ot_charge_per, 0) ot_charge_per,
        nvl(p.other_charges, 0) other_charges,
        nvl(p.value, 0)         value,
        nvl(u.uom_factor, 1)    div_factor
    FROM
        t18_call_details c,
        t15_po_detail    p,
        t04_uom          u
    WHERE
            c.case_no = p.case_no
        AND c.consignee_cd = p.consignee_cd
        AND c.item_srno_po = p.item_srno
        AND u.uom_cd = p.uom_cd
        AND c.case_no = in_case_no
        AND to_char(c.call_recv_dt, 'dd/mm/yyyy') = in_call_recv_dt
        AND c.consignee_cd = in_consignee_cd
        AND c.call_sno = in_call_sno;

    r1                        c1%rowtype;
    w_basic_value             NUMBER := 0;
    w_sales_tax               NUMBER := 0;
    w_excise                  NUMBER := 0;
    w_discount                NUMBER := 0;
    w_other_charges           NUMBER := 0;
    w_value                   NUMBER := 0;
    w_total_value             NUMBER := 0;
    w_bill_no                 VARCHAR2(10) := '';
    w_bill_dt                 DATE;
    w_yy                      CHAR(2);
    w_ctr                     NUMBER := 0;
    w_insp_fee                NUMBER := 0;
    w_service_tax             NUMBER := 0;
    w_edu_cess                NUMBER := 0;
    w_she_cess                NUMBER := 0;
    w_swachh_bharat_cess      NUMBER := 0;
    w_krishi_kalyan_cess      NUMBER := 0;
    w_total_fee               NUMBER := 0;
    w_adv_bill_no             NUMBER := 0;
    w_bill_status             CHAR(1) := NULL;
    w_serv_tax                NUMBER := 0;
    w_stax_rate               NUMBER := 0;
    w_e_cess                  NUMBER := 0;
    w_edu_cess_rate           NUMBER := 0;
    w_s_cess                  NUMBER := 0;
    w_she_cess_rate           NUMBER := 0;
    w_sb_cess                 NUMBER := 0;
    w_swachh_bharat_cess_rate NUMBER := 0;
    w_kk_cess                 NUMBER := 0;
    w_krishi_kalyan_cess_rate NUMBER := 0;
    my_exception EXCEPTION;
    out_err_cd                INT := 0;
BEGIN
    out_err_cd := -1;
	---
    IF ( in_fee_type IS NULL ) OR ( trim(in_fee_type) = '' ) OR ( in_fee = 0 ) THEN
        RAISE my_exception;
    END IF;
	---
	---
    out_err_cd := -2;
	---
    IF
        ( nvl(in_max_fee, 0) > 0 )
        AND ( nvl(in_min_fee, 0) > 0 )
        AND ( nvl(in_max_fee, 0) < nvl(in_min_fee, 0) )
    THEN
        RAISE my_exception;
    END IF;
	---
	---
    out_err_cd := -8;
	---
    SELECT
        stax_rate
    INTO w_serv_tax
    FROM
        t98_servicetax
    WHERE
        (
            SELECT
                ic_dt
            FROM
                t20_ic
            WHERE
                    case_no = in_case_no
                AND to_char(call_recv_dt, 'dd/mm/yyyy') = in_call_recv_dt
                AND consignee_cd = in_consignee_cd
                AND call_sno = in_call_sno
        ) BETWEEN dt_from AND dt_to;

    w_stax_rate := w_serv_tax / 100;
    SELECT
        edu_cess
    INTO w_e_cess
    FROM
        t98_servicetax
    WHERE
        (
            SELECT
                ic_dt
            FROM
                t20_ic
            WHERE
                    case_no = in_case_no
                AND to_char(call_recv_dt, 'dd/mm/yyyy') = in_call_recv_dt
                AND consignee_cd = in_consignee_cd
                AND call_sno = in_call_sno
        ) BETWEEN dt_from AND dt_to;

    w_edu_cess_rate := w_e_cess / 100;
    SELECT
        she_cess
    INTO w_s_cess
    FROM
        t98_servicetax
    WHERE
        (
            SELECT
                ic_dt
            FROM
                t20_ic
            WHERE
                    case_no = in_case_no
                AND to_char(call_recv_dt, 'dd/mm/yyyy') = in_call_recv_dt
                AND consignee_cd = in_consignee_cd
                AND call_sno = in_call_sno
        ) BETWEEN dt_from AND dt_to;

    w_she_cess_rate := w_s_cess / 100;
    SELECT
        swachh_bharat_cess
    INTO w_sb_cess
    FROM
        t98_servicetax
    WHERE
        (
            SELECT
                ic_dt
            FROM
                t20_ic
            WHERE
                    case_no = in_case_no
                AND to_char(call_recv_dt, 'dd/mm/yyyy') = in_call_recv_dt
                AND consignee_cd = in_consignee_cd
                AND call_sno = in_call_sno
        ) BETWEEN dt_from AND dt_to;

    w_swachh_bharat_cess_rate := w_sb_cess / 100;
    SELECT
        krishi_kalyan_cess
    INTO w_kk_cess
    FROM
        t98_servicetax
    WHERE
        (
            SELECT
                ic_dt
            FROM
                t20_ic
            WHERE
                    case_no = in_case_no
                AND to_char(call_recv_dt, 'dd/mm/yyyy') = in_call_recv_dt
                AND consignee_cd = in_consignee_cd
                AND call_sno = in_call_sno
        ) BETWEEN dt_from AND dt_to;

    w_krishi_kalyan_cess_rate := w_kk_cess / 100;
	---
	---  ---------------------- For New Bills -------------------------------
    IF trim(in_bill) = 'X' THEN
        w_bill_dt := TO_DATE ( in_bill_dt, 'ddmmyyyy' );
        IF TO_NUMBER ( substr(in_bill_dt, 3, 2) ) < 4 THEN
            w_yy := lpad(TO_NUMBER(substr(in_bill_dt, 7, 2)) - 1, 2, '0');

        ELSE
            w_yy := substr(in_bill_dt, 7, 2);
        END IF;
	   --
        out_err_cd := -3;
	   --
        IF in_region_cd = 'N' THEN
            IF nvl(in_adv_bill, 'X') = 'A' THEN
                SELECT
                    nvl(MAX(TO_NUMBER(substr(bill_no, 5, 6))),
                        35000) + 1
                INTO w_ctr
                FROM
                    t22_bill
                WHERE
                        substr(bill_no, 1, 1) = in_region_cd
                    AND substr(bill_no, 2, 2) = w_yy
                    AND TO_NUMBER(substr(bill_no, 5, 6)) >= 35000;

            ELSE
                SELECT
                    nvl(MAX(TO_NUMBER(substr(bill_no, 5, 6))),
                        0) + 1
                INTO w_ctr
                FROM
                    t22_bill
                WHERE
                        substr(bill_no, 1, 1) = in_region_cd
                    AND substr(bill_no, 2, 2) = w_yy
                    AND TO_NUMBER(substr(bill_no, 5, 6)) < 35001;

            END IF;
        ELSE
            SELECT
                nvl(MAX(TO_NUMBER(substr(bill_no, 5, 6))),
                    0) + 1
            INTO w_ctr
            FROM
                t22_bill
            WHERE
                    substr(bill_no, 1, 1) = in_region_cd
                AND substr(bill_no, 2, 2) = w_yy;

        END IF;

        w_bill_no := in_region_cd
                     || w_yy
                     || '-'
                     || lpad(w_ctr, 6, '0');
         --
        out_err_cd := -4;
        INSERT INTO t22_bill (
            bill_no,
            bill_dt,
            case_no,
            adv_bill
        ) VALUES (
            w_bill_no,
            w_bill_dt,
            in_case_no,
            in_adv_bill
        );

        w_bill_status := NULL;
    ELSE
        out_err_cd := -5;
        w_bill_no := in_bill;
        SELECT
            bill_status
        INTO w_bill_status
        FROM
            t22_bill
        WHERE
            bill_no = w_bill_no;

        IF w_bill_status IS NOT NULL THEN
            w_bill_status := 'U';
        END IF;
        DELETE FROM t23_bill_items
        WHERE
            bill_no = in_bill; -- For Existing Bills --
    END IF;
	---
	---
	---
    out_err_cd := -6;
	---
    FOR r1 IN c1 LOOP
        IF r1.qty_passed = r1.qty THEN
            w_basic_value := r1.basic_value;
            w_sales_tax := r1.stax;
            w_excise := r1.excise;
            w_discount := r1.discount;
            w_other_charges := r1.other_charges;
            w_value := r1.value;
        ELSE
            w_basic_value := r1.qty_passed * ( r1.rate / r1.div_factor );
		---
            IF nvl(r1.discount_type, 'X') = 'P' THEN
                w_discount := w_basic_value * r1.discount_per / 100;
            ELSIF nvl(r1.discount_type, 'X') = 'N' THEN
                w_discount := ( r1.qty_passed * r1.discount_per );
            ELSE
                w_discount := ( r1.qty_passed / r1.qty ) * r1.discount;
            END IF;

            w_value := w_basic_value - w_discount;
		---
            IF nvl(r1.excise_type, 'X') = 'P' THEN
                w_excise := w_value * r1.excise_per / 100;
            ELSE
                w_excise := ( r1.qty_passed / r1.qty ) * r1.excise;
            END IF;

            w_value := w_value + w_excise;
		---
            IF r1.stax_per = 0 THEN
                w_sales_tax := ( r1.qty_passed / r1.qty ) * r1.stax;
            ELSE
                w_sales_tax := w_value * r1.stax_per / 100;
            END IF;

            w_value := w_value + w_sales_tax;
		---
            IF nvl(r1.ot_charge_type, 'X') = 'P' THEN
                w_other_charges := w_basic_value * r1.ot_charge_per / 100;
            ELSIF nvl(r1.ot_charge_type, 'X') = 'N' THEN
                w_other_charges := ( r1.qty_passed * r1.ot_charge_per );
            ELSE
                w_other_charges := ( r1.qty_passed / r1.qty ) * r1.other_charges;
            END IF;

            w_value := w_value + w_other_charges;
		---
        END IF;

        w_total_value := w_total_value + w_value;
        INSERT INTO t23_bill_items VALUES (
            w_bill_no,
            r1.srno,
            r1.item,
            r1.qty_passed,
            r1.rate,
            r1.uom,
            w_basic_value,
            decode(r1.stax_per, 0, NULL, r1.stax_per),
            w_sales_tax,
            r1.excise_type,
            decode(r1.excise_per, 0, NULL, r1.excise_per),
            w_excise,
            r1.discount_type,
            decode(r1.discount_per, 0, NULL, r1.discount_per),
            w_discount,
            w_other_charges,
            w_value,
            r1.ot_charge_type,
            decode(r1.ot_charge_per, 0, NULL, r1.ot_charge_per)
        );

    END LOOP;
	---
	--- FEE CALCULATION ---
	---
    out_err_cd := -7;
	---
    IF in_fee_type IN ( 'D', 'H' ) THEN
        w_insp_fee := in_no_of_insp * in_fee;
    ELSIF in_fee_type = 'P' THEN
        w_insp_fee := w_total_value * in_fee / 100;
    ELSIF in_fee_type = 'L' THEN
        w_insp_fee := in_fee;
    END IF;
	---
	---
    IF in_tax_type IN ( 'I', 'D' ) THEN
        IF
            ( nvl(in_min_fee, 0) > 0 )
            AND ( in_min_fee > w_insp_fee )
        THEN
            w_insp_fee := in_min_fee;
        END IF;
	   ---
        IF
            ( nvl(in_max_fee, 0) >= 0 )
            AND ( in_max_fee < w_insp_fee )
        THEN
            w_insp_fee := in_max_fee;
        END IF;
	   ---
        w_total_fee := round(w_insp_fee);
	   ---
        w_insp_fee := w_total_fee / ( 1 + w_stax_rate + ( w_stax_rate * w_edu_cess_rate ) + ( w_stax_rate * w_she_cess_rate ) + w_swachh_bharat_cess_rate
        + w_krishi_kalyan_cess_rate );

        w_service_tax := round(w_insp_fee * w_stax_rate);
        w_edu_cess := round(w_insp_fee *(w_stax_rate * w_edu_cess_rate));
        w_she_cess := round(w_insp_fee *(w_stax_rate * w_she_cess_rate));
        w_swachh_bharat_cess := round(w_insp_fee * w_swachh_bharat_cess_rate);
        w_krishi_kalyan_cess := round(w_insp_fee * w_krishi_kalyan_cess_rate);
        w_insp_fee := w_total_fee - ( w_service_tax + w_edu_cess + w_she_cess + w_swachh_bharat_cess + w_krishi_kalyan_cess );
    ELSE
        IF ( nvl(in_max_fee, 0) >= 0 ) OR ( nvl(in_min_fee, 0) > 0 ) THEN
            IF
                ( nvl(in_min_fee, 0) > 0 )
                AND ( in_min_fee > w_insp_fee )
            THEN
                w_insp_fee := in_min_fee;
            END IF;

            IF
                ( nvl(in_max_fee, 0) >= 0 )
                AND ( in_max_fee < w_insp_fee )
            THEN
                w_insp_fee := in_max_fee;
            END IF;

        END IF;
	   ---
        IF in_tax_type = 'N' THEN
            w_service_tax := 0;
            w_edu_cess := 0;
            w_she_cess := 0;
            w_swachh_bharat_cess := 0;
            w_krishi_kalyan_cess_rate := 0;
            w_insp_fee := round(w_insp_fee);
            w_total_fee := w_insp_fee;
        ELSE
            w_service_tax := w_insp_fee * w_stax_rate;
            w_edu_cess := round(w_service_tax * w_edu_cess_rate);
            w_she_cess := round(w_service_tax * w_she_cess_rate);
            w_swachh_bharat_cess := round(w_insp_fee * w_swachh_bharat_cess_rate);
            w_krishi_kalyan_cess := round(w_insp_fee * w_krishi_kalyan_cess_rate);
            w_insp_fee := round(w_insp_fee);
            w_service_tax := round(w_service_tax);
            w_total_fee := w_insp_fee + w_service_tax + w_edu_cess + w_she_cess + w_swachh_bharat_cess + w_krishi_kalyan_cess;
        END IF;

    END IF;
	---
	---
    UPDATE t22_bill
    SET
        material_value = w_total_value,
        fee_type = in_fee_type,
        fee_rate = in_fee,
        tax_type = decode(in_tax_type, 'I', 'I', 'N', 'N',
                          'D', 'D', ''),
        insp_fee = w_insp_fee,
        service_tax = w_service_tax,
        serv_tax_rate = w_serv_tax,
        edu_cess = w_edu_cess,
        she_cess = w_she_cess,
        swachh_bharat_cess = w_swachh_bharat_cess,
        krishi_kalyan_cess = w_krishi_kalyan_cess,
        min_fee = decode(in_min_fee, 0, NULL, in_min_fee),
        max_fee = decode(in_max_fee, - 1, NULL, in_max_fee),
        bill_amount = w_total_fee,
        bill_status = w_bill_status
    WHERE
        bill_no = w_bill_no;
	---
	---
    IF trim(in_bill) = 'X' THEN
        UPDATE t20_ic
        SET
            bill_no = w_bill_no
        WHERE
                case_no = in_case_no
            AND to_char(call_recv_dt, 'dd/mm/yyyy') = in_call_recv_dt
            AND consignee_cd = in_consignee_cd
            AND call_sno = in_call_sno;

    ELSE
	---
        UPDATE t26_cheque_posting
        SET
            bill_amount = w_total_fee,DATETIME = systimestamp
        WHERE
            bill_no = w_bill_no;

    END IF;
	---
    COMMIT;
    --out_fee := w_insp_fee;
    --out_bill := w_bill_no;
    out_err_cd := 0;

    OPEN p_result_cursor FOR SELECT
                                 w_insp_fee AS out_fee,
                                 w_bill_no  AS out_bill,
                                 out_err_cd AS out_err_cd
                             FROM
                                 dual;

EXCEPTION
    WHEN no_data_found THEN
        ROLLBACK;
    WHEN my_exception THEN
        ROLLBACK;
    WHEN OTHERS THEN
        ROLLBACK;
END;
/

create or replace PROCEDURE sp_generate_bill_gst_new (
    in_region_cd    IN VARCHAR2,
    in_case_no      IN VARCHAR2,
    in_call_recv_dt IN DATE,
    in_call_sno     IN NUMBER,
    in_consignee_cd IN NUMBER,
    in_bill         IN VARCHAR2,
    in_fee_type     IN VARCHAR2,
    in_fee          IN NUMBER,
    in_tax_type     IN VARCHAR2,
    in_no_of_insp   IN NUMBER,
    in_invoice      IN VARCHAR2,
    in_max_fee      IN NUMBER,
    in_min_fee      IN NUMBER,
    in_bill_dt      IN CHAR,
    in_adv_bill     IN VARCHAR2,
    p_result_cursor OUT SYS_REFCURSOR
    --out_err_cd      OUT NUMBER,
    --out_bill        OUT VARCHAR2,
    --out_fee         OUT NUMBER
) IS

    CURSOR c1 IS
    SELECT
        c.item_srno_po          srno,
        c.item_desc_po          item,
        nvl(c.qty_passed, 0)    qty_passed,
        nvl(p.qty, 0)           qty,
        nvl(p.rate, 0)          rate,
        p.uom_cd                uom,
        nvl(p.basic_value, 0)   basic_value,
        nvl(p.sales_tax_per, 0) stax_per,
        nvl(p.sales_tax, 0)     stax,
        p.discount_type         discount_type,
        nvl(p.discount_per, 0)  discount_per,
        nvl(p.discount, 0)      discount,
        p.ot_charge_type        ot_charge_type,
        nvl(p.ot_charge_per, 0) ot_charge_per,
        nvl(p.other_charges, 0) other_charges,
        nvl(p.value, 0)         value,
        nvl(u.uom_factor, 1)    div_factor
    FROM
        t18_call_details c,
        t15_po_detail    p,
        t04_uom          u
    WHERE
            c.case_no = p.case_no
        AND c.consignee_cd = p.consignee_cd
        AND c.item_srno_po = p.item_srno
        AND u.uom_cd = p.uom_cd
        AND c.case_no = in_case_no
        AND c.call_recv_dt = in_call_recv_dt
        AND c.consignee_cd = in_consignee_cd
        AND c.call_sno = in_call_sno;

    r1              c1%ROWTYPE;
    w_basic_value   NUMBER := 0;
    w_sales_tax     NUMBER := 0;
    w_discount      NUMBER := 0;
    w_other_charges NUMBER := 0;
    w_value         NUMBER := 0;
    w_total_value   NUMBER := 0;
    w_bill_no       VARCHAR2(10) := '';
    w_invoice_no    VARCHAR2(14) := '';
    w_bill_dt       DATE;
    w_yy            VARCHAR2(4) := '';
    w_ctr           NUMBER := 0;
    w_ctr1          NUMBER := 0;
    w_insp_fee      NUMBER := 0;
    w_igst          NUMBER := 0;
    w_cgst          NUMBER := 0;
    w_sgst          NUMBER := 0;
    w_total_fee     NUMBER := 0;
    w_adv_bill_no   NUMBER := 0;
    w_bill_status   CHAR(1) := NULL;
    w_c_gst         NUMBER := 0;
    w_c_gst_rate    NUMBER := 0;
    w_i_gst         NUMBER := 0;
    w_i_gst_rate    NUMBER := 0;
    w_s_gst         NUMBER := 0;
    w_s_gst_rate    NUMBER := 0;
    w_in_region_cd  VARCHAR2(1) := '';
    w_in_adv_bill   VARCHAR2(1) := '';
    w_in_case_no    VARCHAR2(10) := '';
    out_err_cd      INT := 0;
    my_exception EXCEPTION;
BEGIN
    out_err_cd := -1;
    dbms_output.put_line('-1');
	---
    IF ( in_fee_type IS NULL ) OR ( trim(in_fee_type) = '' ) OR ( in_fee = 0 ) THEN
        RAISE my_exception;
    END IF;
	---
	---
    out_err_cd := -2;
    dbms_output.put_line('-2');
	---
    IF
        ( nvl(in_max_fee, 0) > 0 )
        AND ( nvl(in_min_fee, 0) > 0 )
        AND ( nvl(in_max_fee, 0) < nvl(in_min_fee, 0) )
    THEN
        RAISE my_exception;
    END IF;
	---
	---
    out_err_cd := -8;
	---

    SELECT
        igst_rate
    INTO w_i_gst
    FROM
        t89_gst
    WHERE
        (
            SELECT
                ic_dt
            FROM
                t20_ic
            WHERE
                    case_no = in_case_no
                AND call_recv_dt = in_call_recv_dt
                AND consignee_cd = in_consignee_cd
                AND call_sno = in_call_sno
        ) BETWEEN dt_from AND dt_to;

    w_i_gst_rate := w_i_gst / 100;
    SELECT
        sgst_rate
    INTO w_s_gst
    FROM
        t89_gst
    WHERE
        (
            SELECT
                ic_dt
            FROM
                t20_ic
            WHERE
                    case_no = in_case_no
                AND call_recv_dt = in_call_recv_dt
                AND consignee_cd = in_consignee_cd
                AND call_sno = in_call_sno
        ) BETWEEN dt_from AND dt_to;

    w_s_gst_rate := w_s_gst / 100;
    SELECT
        cgst_rate
    INTO w_c_gst
    FROM
        t89_gst
    WHERE
        (
            SELECT
                ic_dt
            FROM
                t20_ic
            WHERE
                    case_no = in_case_no
                AND call_recv_dt = in_call_recv_dt
                AND consignee_cd = in_consignee_cd
                AND call_sno = in_call_sno
        ) BETWEEN dt_from AND dt_to;

    w_c_gst_rate := w_c_gst / 100;
    
	---  ---------------------- For New Bills -------------------------------
    IF trim(in_bill) = 'X' THEN
        w_bill_dt := TO_DATE ( in_bill_dt, 'ddmmyyyy' );
        IF TO_NUMBER ( substr(in_bill_dt, 3, 2) ) < 4 THEN
            w_yy := lpad(TO_NUMBER(substr(in_bill_dt, 7, 2)) - 1, 2, '0');

        ELSE
            w_yy := substr(in_bill_dt, 7, 2);
        END IF;
       
	   --
        out_err_cd := -3;
	   --

        SELECT
            nvl(MAX(TO_NUMBER(substr(bill_no, 5, 6))),
                0) + 1
        INTO w_ctr
        FROM
            t22_bill
        WHERE
                substr(bill_no, 1, 1) = in_region_cd
            AND substr(bill_no, 2, 2) = w_yy;

        w_in_region_cd := in_region_cd;
        w_bill_no := ( w_in_region_cd
                       || w_yy );
        w_bill_no := in_region_cd
                     || w_yy
                     || '-'
                     || lpad(w_ctr, 6, '0');
                     
                    
         --
        out_err_cd := -4;
        dbms_output.put_line('-4');
        SELECT
            nvl(MAX(TO_NUMBER(substr(invoice_no, 10, 5))),
                0) + 1
        INTO w_ctr1
        FROM
            t22_bill
        WHERE
            substr(invoice_no, 1, 8) = 'R'
                                       || in_invoice
                                       || 'T'
                                       || w_yy;

        w_invoice_no := 'R'
                        || in_invoice
                        || 'T'
                        || w_yy
                        || '/'
                        || lpad(w_ctr1, 5, '0');

        w_in_adv_bill := in_adv_bill;
        w_in_case_no := in_case_no;
        dbms_output.put_line(w_bill_no);
        dbms_output.put_line(w_bill_dt);
        dbms_output.put_line(w_in_case_no);
        dbms_output.put_line(w_in_adv_bill);
        dbms_output.put_line(w_invoice_no);
        
        INSERT INTO t22_bill (
            bill_no,
            bill_dt,
            case_no,
            adv_bill,
            invoice_no
        ) VALUES (
            w_bill_no,
            w_bill_dt,
            w_in_case_no,
            w_in_adv_bill,
            w_invoice_no
        );

        w_bill_status := NULL;
    ELSE
        out_err_cd := -5;
        w_bill_no := in_bill;
        SELECT
            bill_status
        INTO w_bill_status
        FROM
            t22_bill
        WHERE
            bill_no = w_bill_no;

        IF w_bill_status IS NOT NULL THEN
            w_bill_status := 'U';
        END IF;
        DELETE FROM t23_bill_items
        WHERE
            bill_no = in_bill; -- For Existing Bills --
    END IF;
	---
	---
	---
    out_err_cd := -6;
	---
dbms_output.put_line('-6');
    FOR r1 IN c1 LOOP
    
        IF r1.qty_passed = r1.qty THEN
            w_basic_value := r1.basic_value;
            w_sales_tax := r1.stax;
            w_discount := r1.discount;
            w_other_charges := r1.other_charges;
            w_value := r1.value;
        ELSE
            w_basic_value := r1.qty_passed * ( r1.rate / r1.div_factor );
		---
            IF nvl(r1.discount_type, 'X') = 'P' THEN
                w_discount := w_basic_value * r1.discount_per / 100;
            ELSIF nvl(r1.discount_type, 'X') = 'N' THEN
                w_discount := ( r1.qty_passed * r1.discount_per );
            ELSE
                w_discount := ( r1.qty_passed / r1.qty ) * r1.discount;
            END IF;

            w_value := w_basic_value - w_discount;
            
		---
            IF r1.stax_per = 0 THEN
                w_sales_tax := ( r1.qty_passed / r1.qty ) * r1.stax;
            ELSE
                w_sales_tax := w_value * r1.stax_per / 100;
            END IF;

            w_value := w_value + w_sales_tax;
		---
            IF nvl(r1.ot_charge_type, 'X') = 'P' THEN
                w_other_charges := w_basic_value * r1.ot_charge_per / 100;
            ELSIF nvl(r1.ot_charge_type, 'X') = 'N' THEN
                w_other_charges := ( r1.qty_passed * r1.ot_charge_per );
            ELSE
                w_other_charges := ( r1.qty_passed / r1.qty ) * r1.other_charges;
            END IF;

            w_value := w_value + w_other_charges;
		---
        END IF;

        w_total_value := w_total_value + w_value;
        
        INSERT INTO t23_bill_items VALUES (
            w_bill_no,
            r1.srno,
            r1.item,
            r1.qty_passed,
            r1.rate,
            r1.uom,
            w_basic_value,
            decode(r1.stax_per, 0, NULL, r1.stax_per),
            w_sales_tax,
            '',
            '',
            0,
            r1.discount_type,
            decode(r1.discount_per, 0, NULL, r1.discount_per),
            w_discount,
            w_other_charges,
            w_value,
            r1.ot_charge_type,
            decode(r1.ot_charge_per, 0, NULL, r1.ot_charge_per)
        );

    END LOOP;
	---
	--- FEE CALCULATION ---
	---
    out_err_cd := -7;
	---
dbms_output.put_line('-7');


    IF in_fee_type IN ( 'D', 'H' ) THEN
        w_insp_fee := in_no_of_insp * in_fee;
    ELSIF in_fee_type = 'P' THEN
        w_insp_fee := w_total_value * in_fee / 100;
    ELSIF in_fee_type = 'L' THEN
        w_insp_fee := in_fee;
    END IF;
    
    
    dbms_output.put_line(in_no_of_insp);
        dbms_output.put_line(in_fee);
        dbms_output.put_line(w_insp_fee);
	---
	---
    IF ( nvl(in_max_fee, 0) >= 0 ) OR ( nvl(in_min_fee, 0) > 0 ) THEN
        IF
            ( nvl(in_min_fee, 0) > 0 )
            AND ( in_min_fee > w_insp_fee )
        THEN
            w_insp_fee := in_min_fee;
        END IF;

        IF
            ( nvl(in_max_fee, 0) >= 0 )
            AND ( in_max_fee < w_insp_fee )
        THEN
            w_insp_fee := in_max_fee;
        END IF;

    END IF;
	 ----
    w_insp_fee := round(w_insp_fee);
	----
    IF in_tax_type = 'I' THEN
        w_igst := round(w_insp_fee * w_i_gst_rate);
        w_cgst := 0;
        w_sgst := 0;
    ELSIF in_tax_type = 'C' THEN
        w_cgst := round(w_insp_fee * w_c_gst_rate);
        w_sgst := round(w_insp_fee * w_s_gst_rate);
        w_igst := 0;
    ELSIF in_tax_type = 'X' THEN
        w_cgst := 0;
        w_sgst := 0;
        w_igst := 0;
    ELSIF in_tax_type = 'Y' THEN
        w_total_fee := w_insp_fee;
        w_insp_fee := w_total_fee / ( 1 + w_i_gst_rate );
        w_igst := round(w_insp_fee * w_i_gst_rate);
        w_cgst := 0;
        w_sgst := 0;
        w_insp_fee := w_total_fee - ( w_igst );
    ELSIF in_tax_type = 'Z' THEN
        w_total_fee := w_insp_fee;
        w_insp_fee := w_total_fee / ( 1 + w_c_gst_rate + + w_s_gst_rate );
        w_igst := 0;
        w_cgst := round(w_insp_fee * w_c_gst_rate);
        w_sgst := round(w_insp_fee * w_s_gst_rate);
        w_insp_fee := w_total_fee - ( w_cgst + w_sgst );
    END IF;

    w_total_fee := round(w_insp_fee + w_cgst + w_sgst + w_igst);
	---

    UPDATE t22_bill
    SET
        material_value = w_total_value,
        fee_type = in_fee_type,
        fee_rate = in_fee,
        tax_type = in_tax_type,
        insp_fee = w_insp_fee,
        service_tax = 0,
        serv_tax_rate = 0,
        edu_cess = 0,
        she_cess = 0,
        swachh_bharat_cess = 0,
        krishi_kalyan_cess = 0,
        cgst = w_cgst,
        sgst = w_sgst,
        igst = w_igst,
        min_fee = decode(in_min_fee, 0, NULL, in_min_fee),
        max_fee = decode(in_max_fee, - 1, NULL, in_max_fee),
        bill_amount = w_total_fee,
        bill_status = NVL(w_bill_status, null)
    WHERE
        bill_no = w_bill_no;
    
	---
	---
    IF trim(in_bill) = 'X' THEN
        UPDATE t20_ic
        SET
            bill_no = w_bill_no
        WHERE
                case_no = in_case_no
            AND call_recv_dt = in_call_recv_dt
            AND consignee_cd = in_consignee_cd
            AND call_sno = in_call_sno;

    ELSE
	---
        UPDATE t26_cheque_posting
        SET
            bill_amount = w_total_fee
        WHERE
            bill_no = w_bill_no;

    END IF;
	---
    COMMIT;
    --out_fee := w_insp_fee;
    --out_bill := w_bill_no;
    out_err_cd := 0;
    
    OPEN p_result_cursor FOR SELECT
                                 w_insp_fee AS out_fee,
                                 w_bill_no  AS out_bill,
                                 out_err_cd AS out_err_cd
                             FROM
                                 dual;
                                 
EXCEPTION
    WHEN no_data_found THEN
        ROLLBACK;
    WHEN my_exception THEN
        ROLLBACK;
    WHEN OTHERS THEN
        ROLLBACK;
END;
/

create or replace PROCEDURE SP_T20IC_CONSIGNEEUPDATE 
(
    p_BkNo IN VARCHAR2,
    p_SetNo IN VARCHAR2,
    p_RegionCode IN VARCHAR2,
    p_ConsigneeCd IN VARCHAR2,
    p_UserId IN VARCHAR2,
    p_UpdatedBy IN VARCHAR2,
    p_result_cursor OUT SYS_REFCURSOR
)
IS
    out_err_cd      INT := 0;
    my_exception EXCEPTION;
BEGIN
    -- Update the T20Ic record
    --out_err_cd := -1;
    UPDATE T20_Ic
    SET Consignee_Cd = p_ConsigneeCd,
        User_Id = p_UserId,
        Datetime = SYSDATE,
        Updatedby = p_UpdatedBy,
        Updateddate = SYSDATE
    WHERE Bk_No = p_BkNo
        AND Set_No = p_SetNo
        AND CASE_NO LIKE p_RegionCode || '%';
        
    IF SQL%ROWCOUNT = 0 THEN
        out_err_cd := 0; -- Record not found
    ELSE
        out_err_cd := 1; -- Success
    END IF;

    -- Check for errors and set the error code
    COMMIT;
    --out_err_cd := 0;
    
    OPEN p_result_cursor FOR SELECT
                                 out_err_cd AS out_err_cd
                             FROM
                                 dual;

EXCEPTION
    WHEN no_data_found THEN
        ROLLBACK;
    WHEN my_exception THEN
        ROLLBACK;
    WHEN OTHERS THEN
        ROLLBACK;
END;
/

create or replace PROCEDURE SP_VendorMarkedToIE (
    p_dtFr  IN  DATE,
    p_dtTo  IN  DATE,
    p_IeCd  IN  VARCHAR2,
    p_result_cursor OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_result_cursor FOR

    SELECT
    TRIM(T051.VEND_NAME) || NVL2(TRIM(T03.CITY), ',' || TRIM(T03.CITY), '') AS VENDOR,
    TRIM(T052.VEND_NAME) || NVL2(TRIM(T032.CITY), ',' || TRIM(T032.CITY), '') AS MANUFACTURER,
    T051.VEND_CD AS VEND_CD,
    T052.VEND_CD AS MFG_CD,
    (T06.CONSIGNEE_DESIG || ' ' || T06.CONSIGNEE_FIRM) AS CONSIGNEE,
    T18.ITEM_DESC_PO AS ITEM_DESC_PO,
    TO_CHAR(T15.EXT_DELV_DT, 'dd/mm/yyyy') AS EXT_DELV_DT,
    TO_CHAR(T17.CALL_MARK_DT, 'dd/mm/yyyy') AS CALL_MARK_DT,
    TO_CHAR(T17.DT_INSP_DESIRE, 'dd/mm/yyyy') AS INSP_DESIRE_DT,
    TO_CHAR(T17.CALL_RECV_DT, 'dd/mm/yyyy') AS CALL_RECV_DT,
    NVL(T17.NEW_VENDOR, 'X') AS NEW_VENDOR,
    T09.IE_NAME AS IE_NAME,
    T09.IE_PHONE_NO AS IE_PHONE_NO,
    T13.PO_NO AS PO_NO,
    TO_CHAR(T13.PO_DT, 'dd/mm/yyyy') AS PO_DATE,
    TO_CHAR(T13.PO_DT, 'yyyy') AS PO_YR,
    T13.PO_SOURCE AS PO_SOURCE,
    DECODE(PO_SOURCE, 'V', 'VENDOR', 'M', 'MANUAL', 'C', 'IREPS', 'OTHER') AS SOURCE,
    T13.RLY_CD AS RLY_CD,
    T17.CASE_NO AS CASE_NO,
    T17.USER_ID AS USER_ID,
    TO_CHAR(T17.DATETIME, 'dd/mm/yyyy') AS DATETIME,
    T17.REMARKS AS REMARKS,
    T17.CALL_STATUS AS CALL_STATUS,
    TRIM(T21.CALL_STATUS_DESC) ||
    DECODE(T21.CALL_STATUS_CD,
        'A', NVL2(T17.BK_NO, ' (BookSet-' || T17.BK_NO || '/' || T17.SET_NO || ')', ''),
        'R', NVL2(T17.BK_NO, ' (BookSet-' || T17.BK_NO || '/' || T17.SET_NO || ')', ''),
        'C', ' on ' || TO_CHAR(T17.CALL_STATUS_DT, 'dd/mm/yyyy')) ||
    DECODE(T17.CALL_CANCEL_STATUS,
        'N', ' (Non Chargeable)' || '/' || 'Document Not Received',
        'C', ' (Chargeable)' || '/' || 'Document Not Received') AS CALL_STATUS_FULL,
    T21.CALL_STATUS_COLOR AS COLOUR,
    T052.VEND_CONTACT_PER_1 AS MFG_PERS,
    T052.VEND_CONTACT_TEL_1 AS MFG_PHONE,
    T17.CALL_SNO AS CALL_SNO,
    CAST((SELECT COUNT(*) FROM T18_CALL_DETAILS A WHERE A.CASE_NO = T18.CASE_NO AND A.CALL_RECV_DT = T18.CALL_RECV_DT AND A.CALL_SNO = T18.CALL_SNO) as NUMBER(6)) AS COUNT,
    T91.IMMS_RLY_CD AS IMMS_RLY_CD
    FROM
        T05_VENDOR T051,
        T03_CITY T03,
        T06_CONSIGNEE T06,
        T17_CALL_REGISTER T17,
        T18_CALL_DETAILS T18,
        T13_PO_MASTER T13,
        T09_IE T09,
        T05_VENDOR T052,
        T03_CITY T032,
        T21_CALL_STATUS_CODES T21,
        T19_CALL_CANCEL T19,
        T15_PO_DETAIL T15,
        T91_RAILWAYS T91
    WHERE
        T051.VEND_CD = T13.VEND_CD
        AND T06.CONSIGNEE_CD(+) = T13.PURCHASER_CD
        AND T13.CASE_NO = T15.CASE_NO
        AND T15.CASE_NO = T18.CASE_NO
        AND T15.ITEM_SRNO = T18.ITEM_SRNO_PO
        AND T15.CASE_NO = T17.CASE_NO
        AND T13.CASE_NO = T17.CASE_NO
        AND T17.CALL_STATUS = T21.CALL_STATUS_CD
        AND T09.IE_CD = T17.IE_CD
        AND T18.CASE_NO = T17.CASE_NO
        AND T18.CALL_RECV_DT = T17.CALL_RECV_DT
        AND T18.CALL_SNO = T17.CALL_SNO
        AND T17.CASE_NO = T19.CASE_NO(+)
        AND T17.CALL_RECV_DT = T19.CALL_RECV_DT(+)
        AND T17.CALL_SNO = T19.CALL_SNO(+)
        AND T17.MFG_CD = T052.VEND_CD(+)
        AND T03.CITY_CD = T051.VEND_CITY_CD
        AND T032.CITY_CD(+) = T052.VEND_CITY_CD
        AND T13.RLY_CD = T91.RLY_CD(+)
        AND (
            (T17.CALL_MARK_DT BETWEEN TO_DATE(p_dtFr, 'dd/mm/yyyy') AND TO_DATE(p_dtTo, 'dd/mm/yyyy')
            AND T17.CALL_STATUS NOT IN ('B', 'C')
            OR (T17.CALL_STATUS = 'C' AND T17.CALL_RECV_DT > TO_DATE('27-FEB-12', 'dd/mm/yy') AND NVL(T19.DOCS_SUBMITTED, 'X') = 'X')
        )
        OR T17.CALL_STATUS IN ('M', 'U', 'S', 'W')
        )
        AND T17.IE_CD = p_IeCd
        AND T18.ITEM_SRNO_PO = (
            SELECT MIN(B.ITEM_SRNO_PO)
            FROM T18_CALL_DETAILS B
            WHERE B.CASE_NO = T18.CASE_NO
            AND B.CALL_RECV_DT = T18.CALL_RECV_DT
            AND B.CALL_SNO = T18.CALL_SNO
        )


    ORDER BY T051.VEND_NAME,T17.CALL_MARK_DT, T17.CALL_SNO;

EXCEPTION
    WHEN OTHERS THEN
        NULL;
END;
/

create or replace PROCEDURE SP_DtInspectionMarkedToIE (
    p_dtFr  IN  DATE,
    p_dtTo  IN  DATE,
    p_IeCd  IN  VARCHAR2,
    p_result_cursor OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_result_cursor FOR

    SELECT
    TRIM(T051.VEND_NAME) || NVL2(TRIM(T03.CITY), ',' || TRIM(T03.CITY), '') AS VENDOR,
    TRIM(T052.VEND_NAME) || NVL2(TRIM(T032.CITY), ',' || TRIM(T032.CITY), '') AS MANUFACTURER,
    T051.VEND_CD AS VEND_CD,
    T052.VEND_CD AS MFG_CD,
    (T06.CONSIGNEE_DESIG || ' ' || T06.CONSIGNEE_FIRM) AS CONSIGNEE,
    T18.ITEM_DESC_PO AS ITEM_DESC_PO,
    TO_CHAR(T15.EXT_DELV_DT, 'dd/mm/yyyy') AS EXT_DELV_DT,
    TO_CHAR(T17.CALL_MARK_DT, 'dd/mm/yyyy') AS CALL_MARK_DT,
    TO_CHAR(T17.DT_INSP_DESIRE, 'dd/mm/yyyy') AS INSP_DESIRE_DT,
    TO_CHAR(T17.CALL_RECV_DT, 'dd/mm/yyyy') AS CALL_RECV_DT,
    NVL(T17.NEW_VENDOR, 'X') AS NEW_VENDOR,
    T09.IE_NAME AS IE_NAME,
    T09.IE_PHONE_NO AS IE_PHONE_NO,
    T13.PO_NO AS PO_NO,
    TO_CHAR(T13.PO_DT, 'dd/mm/yyyy') AS PO_DATE,
    TO_CHAR(T13.PO_DT, 'yyyy') AS PO_YR,
    T13.PO_SOURCE AS PO_SOURCE,
    DECODE(PO_SOURCE, 'V', 'VENDOR', 'M', 'MANUAL', 'C', 'IREPS', 'OTHER') AS SOURCE,
    T13.RLY_CD AS RLY_CD,
    T17.CASE_NO AS CASE_NO,
    T17.USER_ID AS USER_ID,
    TO_CHAR(T17.DATETIME, 'dd/mm/yyyy') AS DATETIME,
    T17.REMARKS AS REMARKS,
    T17.CALL_STATUS AS CALL_STATUS,
    TRIM(T21.CALL_STATUS_DESC) ||
    DECODE(T21.CALL_STATUS_CD,
        'A', NVL2(T17.BK_NO, ' (BookSet-' || T17.BK_NO || '/' || T17.SET_NO || ')', ''),
        'R', NVL2(T17.BK_NO, ' (BookSet-' || T17.BK_NO || '/' || T17.SET_NO || ')', ''),
        'C', ' on ' || TO_CHAR(T17.CALL_STATUS_DT, 'dd/mm/yyyy')) ||
    DECODE(T17.CALL_CANCEL_STATUS,
        'N', ' (Non Chargeable)' || '/' || 'Document Not Received',
        'C', ' (Chargeable)' || '/' || 'Document Not Received') AS CALL_STATUS_FULL,
    T21.CALL_STATUS_COLOR AS COLOUR,
    T052.VEND_CONTACT_PER_1 AS MFG_PERS,
    T052.VEND_CONTACT_TEL_1 AS MFG_PHONE,
    T17.CALL_SNO AS CALL_SNO,
    CAST((SELECT COUNT(*) FROM T18_CALL_DETAILS A WHERE A.CASE_NO = T18.CASE_NO AND A.CALL_RECV_DT = T18.CALL_RECV_DT AND A.CALL_SNO = T18.CALL_SNO) as NUMBER(6)) AS COUNT,
    T91.IMMS_RLY_CD AS IMMS_RLY_CD
    FROM
        T05_VENDOR T051,
        T03_CITY T03,
        T06_CONSIGNEE T06,
        T17_CALL_REGISTER T17,
        T18_CALL_DETAILS T18,
        T13_PO_MASTER T13,
        T09_IE T09,
        T05_VENDOR T052,
        T03_CITY T032,
        T21_CALL_STATUS_CODES T21,
        T19_CALL_CANCEL T19,
        T15_PO_DETAIL T15,
        T91_RAILWAYS T91
    WHERE
        T051.VEND_CD = T13.VEND_CD
        AND T06.CONSIGNEE_CD(+) = T13.PURCHASER_CD
        AND T13.CASE_NO = T15.CASE_NO
        AND T15.CASE_NO = T18.CASE_NO
        AND T15.ITEM_SRNO = T18.ITEM_SRNO_PO
        AND T15.CASE_NO = T17.CASE_NO
        AND T13.CASE_NO = T17.CASE_NO
        AND T17.CALL_STATUS = T21.CALL_STATUS_CD
        AND T09.IE_CD = T17.IE_CD
        AND T18.CASE_NO = T17.CASE_NO
        AND T18.CALL_RECV_DT = T17.CALL_RECV_DT
        AND T18.CALL_SNO = T17.CALL_SNO
        AND T17.CASE_NO = T19.CASE_NO(+)
        AND T17.CALL_RECV_DT = T19.CALL_RECV_DT(+)
        AND T17.CALL_SNO = T19.CALL_SNO(+)
        AND T17.MFG_CD = T052.VEND_CD(+)
        AND T03.CITY_CD = T051.VEND_CITY_CD
        AND T032.CITY_CD(+) = T052.VEND_CITY_CD
        AND T13.RLY_CD = T91.RLY_CD(+)
        AND (
            (T17.CALL_MARK_DT BETWEEN TO_DATE(p_dtFr, 'dd/mm/yyyy') AND TO_DATE(p_dtTo, 'dd/mm/yyyy')
            AND T17.CALL_STATUS NOT IN ('B', 'C')
            OR (T17.CALL_STATUS = 'C' AND T17.CALL_RECV_DT > TO_DATE('27-FEB-12', 'dd/mm/yy') AND NVL(T19.DOCS_SUBMITTED, 'X') = 'X')
        )
        OR T17.CALL_STATUS IN ('M', 'U', 'S', 'W')
        )
        AND T17.IE_CD = p_IeCd
        AND T18.ITEM_SRNO_PO = (
            SELECT MIN(B.ITEM_SRNO_PO)
            FROM T18_CALL_DETAILS B
            WHERE B.CASE_NO = T18.CASE_NO
            AND B.CALL_RECV_DT = T18.CALL_RECV_DT
            AND B.CALL_SNO = T18.CALL_SNO
        )


    ORDER BY T17.DT_INSP_DESIRE,T17.CALL_MARK_DT, T17.CALL_SNO, T051.VEND_NAME;

EXCEPTION
    WHEN OTHERS THEN
        NULL;
END;
/


create or replace PROCEDURE SP_GET_CALL_MARKED_ONLINE_NEW(
    P_DATE IN DATE,
    P_REGION IN VARCHAR2,
    P_RDB1 IN NUMBER, 
    P_RDB2 IN NUMBER,
    P_RDB3 IN NUMBER,
    P_RESULT_CURSOR OUT SYS_REFCURSOR
)
IS
    v_query VARCHAR2(4000);
BEGIN
    v_query := 'select P.CASE_NO,TO_CHAR(C.CALL_RECV_DT,''dd/mm/yyyy'') CALL_RECV_DT,' ||
                ' C.CALL_INSTALL_NO,C.CALL_SNO,to_char(C.DATETIME,''dd/mm/yyyy-HH24:MI:SS'') DATE_TIME,' ||
                ' decode(S.CALL_STATUS_CD,''C'',S.CALL_STATUS_DESC||decode(C.CALL_CANCEL_STATUS,''N'','' (Non Chargeable)'',''C'','' (Chargeable)'',''''),S.CALL_STATUS_DESC)CALL_STATUS,' ||
                ' C.CALL_LETTER_NO,C.REMARKS,P.PO_NO,TO_CHAR(P.PO_DT,''dd/mm/yyyy'') PO_DT,' ||
                ' (V.VEND_NAME||''(''||NVL2(T.LOCATION,T.LOCATION||'' : ''||T.CITY,T.CITY)||'')'')VENDOR, I.IE_NAME' || 
                ' from T17_CALL_REGISTER C, T13_PO_MASTER P,T09_IE I, T05_VENDOR V,T03_CITY T,T21_CALL_STATUS_CODES S' ||
                ' where C.CASE_NO=P.CASE_NO(+) and C.IE_CD=I.IE_CD(+) and P.VEND_CD=V.VEND_CD' ||
                ' and V.VEND_CITY_CD=T.CITY_CD and C.CALL_STATUS=S.CALL_STATUS_CD(+) and ONLINE_CALL=''Y''';

    
    IF P_RDB1 = 1 THEN
        v_query := v_query || ' and P.REGION_CODE=''' || P_REGION || ''' and (NVL(C.IE_CD,0)!=0) AND C.CALL_RECV_DT = ''' || TO_DATE(P_DATE, 'dd/mm/yyyy') || '''';
        v_query := v_query || ' ORDER BY P.CASE_NO,C.CALL_RECV_DT,C.CALL_SNO ';
        DBMS_OUTPUT.PUT_LINE('P_RDB1');
    END IF;

    IF P_RDB2 = 1 THEN
        v_query := v_query || ' and P.REGION_CODE=''' || P_REGION || ''' and (C.IE_CD is null) AND C.CALL_RECV_DT <= ''' || TO_DATE(P_DATE, 'dd/mm/yyyy') || '''';
        v_query := v_query || ' ORDER BY C.CALL_RECV_DT desc,C.CALL_SNO ';
        DBMS_OUTPUT.PUT_LINE('P_RDB2');
    END IF;

    IF P_RDB3 = 1 THEN
        v_query := v_query || ' and P.REGION_CODE=''' || P_REGION || ''' and (C.IE_CD is null) AND C.CALL_RECV_DT = ''' || TO_DATE(P_DATE, 'dd/mm/yyyy') || '''';
        v_query := v_query || ' ORDER BY P.CASE_NO,C.CALL_RECV_DT,C.CALL_SNO ';
        DBMS_OUTPUT.PUT_LINE('P_RDB3');
    END IF;
    DBMS_OUTPUT.PUT_LINE(v_query);
    OPEN P_RESULT_CURSOR FOR v_query;
END;
/

create or replace PROCEDURE GET_LO_DASHBOARD (
    p_mobile IN VARCHAR2,
    p_result_cursor OUT SYS_REFCURSOR
) AS
    P_FROMDATE DATE;
    P_TODATE DATE;
BEGIN
    P_FROMDATE := GET_FINANCIAL_YEAR_START_DATE();
    P_TODATE := GET_FINANCIAL_YEAR_END_DATE(); --SYSDATE;
    
    OPEN p_result_cursor FOR
    SELECT 
        SUM(TOTAL_BILL) AS TOTAL_BILL,
        COUNT(CASE WHEN PASSED_OUTST <> 0 THEN 1 END) AS OUTST_COUNT,
        COUNT(CASE WHEN PASSED_OUTST = 0 THEN 1 END) AS PASSED_COUNT,
        CAST(SUM(AMOUNT_RECEIVED) AS NUMBER(8,2)) AS AMOUNT_RECEIVED
    FROM
    (
        SELECT  
            COUNT(DISTINCT T22.CASE_NO) AS TOTAL_BILL,
            T22.BILL_AMOUNT AS BILL_AMOUNT,
            NVL(T22.AMOUNT_RECEIVED,0) AS AMOUNT_RECEIVED,
            NVL(T22.BILL_AMOUNT,0) - NVL(T22.AMOUNT_RECEIVED,0) AS PASSED_OUTST
        FROM T105_LO_LOGIN T105
        JOIN T106_LO_ORGN T106 ON T105.MOBILE = T106.MOBILE
        INNER JOIN T13_PO_MASTER T13 ON T106.ORGN_TYPE = T13.RLY_NONRLY AND T106.ORGN_CHASED = T13.RLY_CD
        INNER JOIN T17_CALL_REGISTER T17 ON T13.CASE_NO = T17.CASE_NO AND T13.REGION_CODE = T17.REGION_CODE
        INNER JOIN T22_BILL T22 ON T17.CASE_NO = T22.CASE_NO
        INNER JOIN T20_IC T20 ON T22.BILL_NO = T20.BILL_NO
        WHERE T105.MOBILE = p_mobile AND T17.CALL_STATUS IN('B','PRB')
        --AND T22.BILL_DT BETWEEN p_start_date AND p_end_date
        AND T22.BILL_DT BETWEEN P_FROMDATE AND P_TODATE
        GROUP BY T22.BILL_AMOUNT, T22.AMOUNT_RECEIVED
    ) P;

END;
/

create or replace PROCEDURE GET_LO_DASHBOARD_LIST (
    p_mobile IN VARCHAR2,
    p_start_date IN DATE,
    p_end_date IN DATE,
    p_flag IN VARCHAR2,
    p_result_cursor OUT SYS_REFCURSOR
) AS
BEGIN
    IF p_flag = 'TB' THEN
        OPEN p_result_cursor FOR
            SELECT  
                DISTINCT T22.CASE_NO AS CASE_NO,
                T22.BILL_NO AS BILL_NO,
                T22.BILL_AMOUNT AS BILL_AMOUNT,
                NVL(T22.AMOUNT_RECEIVED,0) AS AMOUNT_RECEIVED,
                NVL(T22.BILL_AMOUNT,0) - NVL(T22.AMOUNT_RECEIVED,0) AS PASSED_OUTST
            FROM T105_LO_LOGIN T105
            JOIN T106_LO_ORGN T106 ON T105.MOBILE = T106.MOBILE
            INNER JOIN T13_PO_MASTER T13 ON T106.ORGN_TYPE = T13.RLY_NONRLY AND T106.ORGN_CHASED = T13.RLY_CD
            INNER JOIN T17_CALL_REGISTER T17 ON T13.CASE_NO = T17.CASE_NO AND T13.REGION_CODE = T17.REGION_CODE
            INNER JOIN T22_BILL T22 ON T17.CASE_NO = T22.CASE_NO
            INNER JOIN T20_IC T20 ON T22.BILL_NO = T20.BILL_NO
            WHERE T105.MOBILE = p_mobile AND T17.CALL_STATUS IN('B','PRB')
            AND T22.BILL_DT BETWEEN p_start_date AND p_end_date;
    ELSIF p_flag = 'TOB' THEN
        OPEN p_result_cursor FOR
            SELECT  
                DISTINCT T22.CASE_NO AS CASE_NO,
                T22.BILL_NO AS BILL_NO,
                T22.BILL_AMOUNT AS BILL_AMOUNT,
                NVL(T22.AMOUNT_RECEIVED,0) AS AMOUNT_RECEIVED,
                NVL(T22.BILL_AMOUNT,0) - NVL(T22.AMOUNT_RECEIVED,0) AS PASSED_OUTST
            FROM T105_LO_LOGIN T105
            JOIN T106_LO_ORGN T106 ON T105.MOBILE = T106.MOBILE
            INNER JOIN T13_PO_MASTER T13 ON T106.ORGN_TYPE = T13.RLY_NONRLY AND T106.ORGN_CHASED = T13.RLY_CD
            INNER JOIN T17_CALL_REGISTER T17 ON T13.CASE_NO = T17.CASE_NO AND T13.REGION_CODE = T17.REGION_CODE
            INNER JOIN T22_BILL T22 ON T17.CASE_NO = T22.CASE_NO
            INNER JOIN T20_IC T20 ON T22.BILL_NO = T20.BILL_NO
            WHERE T105.MOBILE = p_mobile AND T17.CALL_STATUS IN('B','PRB')
            AND T22.BILL_DT BETWEEN p_start_date AND p_end_date
            AND (NVL(T22.BILL_AMOUNT,0) - NVL(T22.AMOUNT_RECEIVED,0))  <> 0;
        ELSIF p_flag = 'TPB' THEN
        OPEN p_result_cursor FOR
            SELECT  
                DISTINCT T22.CASE_NO AS CASE_NO,
                T22.BILL_NO AS BILL_NO,
                T22.BILL_AMOUNT AS BILL_AMOUNT,
                NVL(T22.AMOUNT_RECEIVED,0) AS AMOUNT_RECEIVED,
                NVL(T22.BILL_AMOUNT,0) - NVL(T22.AMOUNT_RECEIVED,0) AS PASSED_OUTST
            FROM T105_LO_LOGIN T105
            JOIN T106_LO_ORGN T106 ON T105.MOBILE = T106.MOBILE
            INNER JOIN T13_PO_MASTER T13 ON T106.ORGN_TYPE = T13.RLY_NONRLY AND T106.ORGN_CHASED = T13.RLY_CD
            INNER JOIN T17_CALL_REGISTER T17 ON T13.CASE_NO = T17.CASE_NO AND T13.REGION_CODE = T17.REGION_CODE
            INNER JOIN T22_BILL T22 ON T17.CASE_NO = T22.CASE_NO
            INNER JOIN T20_IC T20 ON T22.BILL_NO = T20.BILL_NO
            WHERE T105.MOBILE = p_mobile AND T17.CALL_STATUS IN('B','PRB')
            AND T22.BILL_DT BETWEEN p_start_date AND p_end_date
            AND (NVL(T22.BILL_AMOUNT,0) - NVL(T22.AMOUNT_RECEIVED,0))  = 0;
        ELSIF p_flag = 'TBR' THEN
        OPEN p_result_cursor FOR
            SELECT  
                DISTINCT T22.CASE_NO AS CASE_NO,
                T22.BILL_NO AS BILL_NO,
                T22.BILL_AMOUNT AS BILL_AMOUNT,
                NVL(T22.AMOUNT_RECEIVED,0) AS AMOUNT_RECEIVED,
                NVL(T22.BILL_AMOUNT,0) - NVL(T22.AMOUNT_RECEIVED,0) AS PASSED_OUTST
            FROM T105_LO_LOGIN T105
            JOIN T106_LO_ORGN T106 ON T105.MOBILE = T106.MOBILE
            INNER JOIN T13_PO_MASTER T13 ON T106.ORGN_TYPE = T13.RLY_NONRLY AND T106.ORGN_CHASED = T13.RLY_CD
            INNER JOIN T17_CALL_REGISTER T17 ON T13.CASE_NO = T17.CASE_NO AND T13.REGION_CODE = T17.REGION_CODE
            INNER JOIN T22_BILL T22 ON T17.CASE_NO = T22.CASE_NO
            INNER JOIN T20_IC T20 ON T22.BILL_NO = T20.BILL_NO
            WHERE T105.MOBILE = p_mobile AND T17.CALL_STATUS IN('B','PRB')
            AND T22.BILL_DT BETWEEN p_start_date AND p_end_date
            AND (NVL(T22.AMOUNT_RECEIVED,0))  <> 0;
    END IF;
END;
/

CREATE VIEW VIEW_CALLDETAILSFORSPECIFICPO_REPORT AS

SELECT 
    trim(T051.VEND_NAME)||nvl2(trim(T03.CITY),','||trim(T03.CITY),'') VENDOR,
    trim(T052.VEND_NAME)||nvl2(trim(T032.CITY),','||trim(T032.CITY),'') MANUFACTURER,
    T051.VEND_CD VEND_CD,
    T052.VEND_CD MFG_CD,
    (T06.CONSIGNEE_DESIG||' '||T06.CONSIGNEE_FIRM) CONSIGNEE,
    T18.ITEM_DESC_PO,
    T18.QTY_TO_INSP,
    T17.CALL_MARK_DT,
    T09.IE_NAME,
    T09.IE_PHONE_NO,
    T13.PO_NO,
    T13.PO_DT,
    T17.CASE_NO,
    T17.REMARKS REMARK,
    trim(T21.CALL_STATUS_DESC)||decode(T21.CALL_STATUS_CD,
        'A', nvl2(T17.BK_NO,' (BookSet-'||T17.BK_NO||'/'||T17.SET_NO||')','')||' Dt: '||to_char(T17.CALL_STATUS_DT,'dd/mm/yyyy'),
        'B', ' (Accepted on Dt:'||to_char(T17.CALL_STATUS_DT,'dd/mm/yyyy')||')',
        'R', nvl2(T17.BK_NO,' (BookSet-'||T17.BK_NO||'/'||T17.SET_NO||')',''),
        'G', ' Dt: '||to_char(T17.CALL_STATUS_DT,'dd/mm/yyyy'),
        'C', ' on '||to_char(T17.CALL_STATUS_DT,'dd/mm/yyyy')
    ) || decode(T17.CALL_CANCEL_STATUS, 'N', ' (Non Chargeable)', 'C', ' (Chargeable)', '') CALL_STATUS,
    T21.CALL_STATUS_COLOR COLOUR,
    T052.VEND_CONTACT_PER_1 MFG_PERS,
    (T052.VEND_CONTACT_TEL_1) MFG_PHONE,
    T17.CALL_SNO,
    T17.HOLOGRAM,
    T17.CASE_NO||'-'||T17.BK_NO||'-'||T17.SET_NO IC_PHOTO,
    T17.CASE_NO||'-'||T17.BK_NO||'-'||T17.SET_NO||'-A1' IC_PHOTO_A1,
    T17.CASE_NO||'-'||T17.BK_NO||'-'||T17.SET_NO||'-A2' IC_PHOTO_A2,
    (
        SELECT count(*)
        FROM T18_CALL_DETAILS A
        WHERE A.CASE_NO=T18.CASE_NO AND A.CALL_RECV_DT=T18.CALL_RECV_DT AND A.CALL_SNO=T18.CALL_SNO
    ) COUNT,
    nvl2(T08.CO_PHONE_NO, trim(T08.CO_NAME)||' (Mob: '||CO_PHONE_NO||')', T08.CO_NAME) CO_NAME,
    upper(T13.L5NO_PO) L5NO_PO,
    T13.RLY_NONRLY,
    T13.RLY_CD
FROM 
    T05_VENDOR T051,
    T06_CONSIGNEE T06,
    T17_CALL_REGISTER T17,
    T18_CALL_DETAILS T18,
    T13_PO_MASTER T13,
    T09_IE T09,
    T05_VENDOR T052,
    T03_CITY T03,
    T03_CITY T032,
    T08_IE_CONTROLL_OFFICER T08,
    T21_CALL_STATUS_CODES T21
WHERE 
    T051.VEND_CD=T13.VEND_CD
    AND T06.CONSIGNEE_CD(+)=T13.PURCHASER_CD
    AND T13.CASE_NO=T17.CASE_NO
    AND T17.CALL_STATUS=T21.CALL_STATUS_CD
    AND T09.IE_CD=T17.IE_CD
    AND T18.CASE_NO=T17.CASE_NO
    AND T18.CALL_RECV_DT=T17.CALL_RECV_DT
    AND T18.CALL_SNO=T17.CALL_SNO
    AND T17.MFG_CD=T052.VEND_CD(+)
    --AND (
    --    upper(T13.L5NO_PO)='L 180'
    --    AND TO_CHAR(T13.PO_DT,'dd/mm/yyyy')='22/12/2016'
    --    AND T13.RLY_NONRLY='U'
    --    AND T13.RLY_CD='NSIC'
    --)
    --AND T13.VEND_CD='61448'
    AND T18.ITEM_SRNO_PO=(
        SELECT min(B.ITEM_SRNO_PO)
        FROM T18_CALL_DETAILS B
        WHERE B.CASE_NO=T18.CASE_NO AND B.CALL_RECV_DT=T18.CALL_RECV_DT AND B.CALL_SNO=T18.CALL_SNO
    )
    AND T03.CITY_CD=T051.VEND_CITY_CD
    AND T032.CITY_CD(+)=T052.VEND_CITY_CD
    AND T08.CO_CD(+)=T09.IE_CO_CD;

    CREATE VIEW VIEW_VENDOR_CALLS_MARKED_FOR_SPECIFIC_PO AS
SELECT
    T13.L5NO_PO,
    T13.PO_NO,
    T13.PO_DT,
    T13.RLY_NONRLY,
    T13.RLY_CD,
    T13.VEND_CD
FROM
    T13_PO_MASTER T13
JOIN
    T17_CALL_REGISTER T17 ON T13.CASE_NO = T17.CASE_NO
GROUP BY
    T13.L5NO_PO,
    T13.PO_NO,
    T13.PO_DT,
    T13.RLY_NONRLY,
    T13.RLY_CD,
    T13.VEND_CD
ORDER BY
    T13.PO_DT;

    CREATE VIEW VIEW_VENDOR_CALLS_MARKED_FOR_SPECIFIC_IC AS
SELECT
    T06.CONSIGNEE_FIRM || '/' || T06.CONSIGNEE_DESIG || '/' || T06.CONSIGNEE_DEPT AS PURCHASER,
    T13.PO_NO,
    T13.PO_DT,
    T20.IC_NO,
    T20.IC_DT,
    T20.BK_NO,
    T20.SET_NO,
    T20.BILL_NO,
    T09.IE_NAME,
    T05.VEND_NAME AS VENDOR,
    T18.ITEM_DESC_PO,
    T18.QTY_TO_INSP,
    T18.QTY_PASSED,
    T18.QTY_REJECTED,
    T17.HOLOGRAM,
    T49.IC_PHOTO,
    T49.IC_PHOTO_A1,
    T49.IC_PHOTO_A2,
    T13.L5NO_PO,
    T13.RLY_NONRLY,
    T13.RLY_CD,
    T13.VEND_CD
FROM
    T13_PO_MASTER T13
JOIN T06_CONSIGNEE T06 ON T13.PURCHASER_CD = T06.CONSIGNEE_CD
JOIN T20_IC T20 ON T13.CASE_NO = T20.CASE_NO
JOIN T18_CALL_DETAILS T18 ON T20.CASE_NO = T18.CASE_NO
    AND T20.CALL_RECV_DT = T18.CALL_RECV_DT
    AND T20.CALL_SNO = T18.CALL_SNO
    AND T20.CONSIGNEE_CD = T18.CONSIGNEE_CD
JOIN T09_IE T09 ON T20.IE_CD = T09.IE_CD
JOIN T05_VENDOR T05 ON T13.VEND_CD = T05.VEND_CD
JOIN T17_CALL_REGISTER T17 ON T18.CASE_NO = T17.CASE_NO
    AND T18.CALL_RECV_DT = T17.CALL_RECV_DT
    AND T18.CALL_SNO = T17.CALL_SNO
LEFT JOIN T49_IC_PHOTO_ENCLOSED T49 ON T17.CASE_NO = T49.CASE_NO
    AND T17.CALL_RECV_DT = T49.CALL_RECV_DT
    AND T17.CALL_SNO = T49.CALL_SNO
--WHERE
    --TRIM(UPPER(T13.L5NO_PO)) = 'L 180'
    --AND TO_CHAR(T13.PO_DT, 'dd/mm/yyyy') = '22/12/2016'
    --AND T13.RLY_NONRLY = 'U'
    --AND T13.RLY_CD = 'NSIC'
    --AND T13.VEND_CD = '61448'
ORDER BY
    T20.IC_DT, T18.ITEM_SRNO_PO;


    CREATE VIEW VIEW_GET_BILLREGISTER_DTAILS AS
SELECT T22.BILL_NO,
            T22.BILL_DT,
            BK_NO,
            SET_NO,
            IC_DT,
            BILL_AMOUNT,
            NVL(SERVICE_TAX,0) SERVICE_TAX,
            NVL(EDU_CESS,0) EDU_CESS,
            NVL(SHE_CESS,0) SHE_CESS,
            NVL(SWACHH_BHARAT_CESS,0) SWACHH_BHARAT_CESS,
            NVL(KRISHI_KALYAN_CESS,0) KRISHI_KALYAN_CESS,
            NVL(INSP_FEE,0) INSP_FEE,
            NVL(IGST,0) IGST,
            NVL(SGST,0) SGST,
            NVL(CGST,0) CGST,
            INVOICE_NO,
            T20.RECIPIENT_GSTIN_NO,
            DECODE(T12.BPO_TYPE,'R','Railway','P','Private','S','State Govt','U','PSU','F','Foreign Railway') BPO_TYPE,
            IRN_NO,
            QR_CODE,
            DECODE(SAP_STATUS,'S','Sent to SAP','Pending') SENTTOSAP,
            DECODE(BILL_FINALISED,'Y','Yes','No') FINALISED,
            ACK_DT,
            DIG_BILL_GEN_DT,
            T12.BPO_CD||'-'||T12.BPO_NAME||','||T12.BPO_ORGN||','||T03.CITY BPO,
            T22.MATERIAL_VALUE,
            DECODE(SUBSTR(T20.RECIPIENT_GSTIN_NO,1,2),
                '01','01-Jammu 0',
                '02','02-Himachal Pradesh',
                '03','03-Punjab',
                '04','04-Chandigarh',
                '05','05-Uttarakhand',
                '06','06-Haryana',
                '07','07-Delhi',
                '08','08-Rajasthan',
                '09','09-Uttar Pradesh',
                '10','10-Bihar',
                '11','11-Sikkim',
                '12','12-Arunachal Pradesh',
                '13','13-Nagaland',
                '14','14-Manipur',
                '15','15-Mizoram',
                '16','16-Tripura',
                '17','17-Meghalaya',
                '18','18-Assam',
                '19','19-West Bengal',
                '20','20-Jharkhand',
                '21','21-Odisha',
                '22','22-Chhattisgarh',
                '23','23-Madhya Pradesh',
                '24','24-Gujarat',
                '25','25-Daman 0',
                '26','26-Dadra 0 Haveli',
                '27','27-Maharashtra',
                '29','29-Karnataka',
                '30','30-Goa',
                '31','31-Lakshdweep',
                '32','32-Kerala',
                '33','33-Tamil Nadu',
                '34','34-Pondicherry',
                '35','35-Andaman 0 Islands',
                '36','36-Telangana',
                '37','37-Andhra Pradesh',
                '97-Other Territory'
            ) STATE,
            T22.CASE_NO,
            '' AS CheckValue
FROM T22_BILL T22, T20_IC T20, T12_BILL_PAYING_OFFICER T12, T03_CITY T03
WHERE T20.BILL_NO(+)=T22.BILL_NO
    AND T20.BPO_CD=T12.BPO_CD(+)
    AND T12.BPO_CITY_CD=T03.CITY_CD;

    CREATE VIEW VIEW_MA_DETAIL_SEARCH AS
SELECT
    m.CASE_NO AS CASE_NO,
    m.PO_NO AS PO_NO,
    m.PO_DT,
    m.MA_NO AS MA_NO,
    m.MA_DT,
    m.RLY_NONRLY AS RLY_NONRLY,
    (DECODE(m.RLY_NONRLY,
            'R', 'Railway',
            'P', 'Private',
            'S', 'State Government',
            'F', 'Foreign Railways',
            'U', 'PSU') || '(' || m.RLY_CD || ')') AS RLY_CD,
    m.PO_OR_LETTER AS PO_OR_LETTER,
    d.MA_SNO AS MA_SNO,
    d.MA_FIELD AS MA_FIELD,
    d.MA_STATUS AS MA_STATUS,
    d.MA_DESC AS MA_DESC,
    d.OLD_PO_VALUE AS OLD_PO_VALUE,
    d.NEW_PO_VALUE AS NEW_PO_VALUE,
    d.MA_REMARKS AS MA_REMARKS,
    t13.vend_cd
FROM
    VEND_PO_MA_MASTER m
JOIN
    VEND_PO_MA_DETAIL d ON m.Case_no = d.Case_no
                       AND m.ma_no = d.ma_no
                       AND m.ma_dt = d.ma_dt
JOIN
    T13_PO_MASTER t13 ON t13.case_no = m.Case_no;


CREATE VIEW VIEW_MA_SUB_DETAIL AS
SELECT
    m.CASE_NO AS CASE_NO,
    m.PO_NO AS PO_NO,
    m.PO_DT,
    m.MA_NO AS MA_NO,
    m.MA_DT,
    m.RLY_NONRLY AS RLY_NONRLY,
    (DECODE(m.RLY_NONRLY,
            'R', 'Railway',
            'P', 'Private',
            'S', 'State Government',
            'F', 'Foreign Railways',
            'U', 'PSU') || '(' || m.RLY_CD || ')') AS RLY_CD,
    (DECODE(m.PO_OR_LETTER,
            'P', 'PO',
            'L', 'Letter')) AS PO_OR_LETTER,
    d.MA_SNO AS MA_SNO,
    d.MA_FIELD AS MA_FIELD,
    (DECODE(d.MA_STATUS,
            'P', 'Pending',
            'A', 'Approved',
            'R', 'Return')) AS MA_STATUS,
            d.USER_ID,
            m.PO_SRC
FROM
    VEND_PO_MA_MASTER m
JOIN
    VEND_PO_MA_DETAIL d ON m.Case_no = d.Case_no
                       AND m.ma_no = d.ma_no
                       AND m.ma_dt = d.ma_dt;


CREATE VIEW VIEW_GET_PO_DETAILS_REPORT AS
SELECT
    T13.CASE_NO,
    T05.VEND_CD,
    T05.VEND_NAME || ',' || T03.CITY AS VENDOR,
    T05.VEND_REMARKS,
    T13.PO_NO,
    T13.PO_DT,
    T13.PO_SOURCE,
    T91.IMMS_RLY_CD,
    T13.RLY_CD,
    T13.REMARKS
FROM
    T13_PO_MASTER T13
JOIN
    T05_VENDOR T05 ON T13.VEND_CD = T05.VEND_CD
JOIN
    T03_CITY T03 ON T05.VEND_CITY_CD = T03.CITY_CD
LEFT JOIN
    T91_RAILWAYS T91 ON T13.RLY_CD = T91.RLY_CD;


    CREATE VIEW VIEW_GET_PO_DETAILS_REPORT_LIST AS
SELECT
    t15.CASE_NO,
    t15.ITEM_SRNO,
    t15.ITEM_DESC,
    t15.QTY,
    t15.EXT_DELV_DT,
    SUM(NVL(t18.QTY_PASSED, 0)) AS PASSED,
    SUM(NVL(t18.QTY_REJECTED, 0)) AS REJECTED
FROM
    T15_PO_DETAIL t15
LEFT JOIN
    T18_CALL_DETAILS t18 ON t15.CASE_NO = t18.CASE_NO
                        AND t15.ITEM_SRNO = t18.ITEM_SRNO_PO

GROUP BY
    t15.CASE_NO,
    t15.ITEM_SRNO,
    t15.ITEM_DESC,
    t15.QTY,
    t15.EXT_DELV_DT
ORDER BY
    t15.CASE_NO,
    t15.ITEM_SRNO;

    CREATE VIEW VIEW_GET_PO_DETAILS_REPORT_P_CALLDETAILS AS
SELECT
    t15.CASE_NO,
    t15.ITEM_SRNO,
    t15.ITEM_DESC,
    t15.QTY,
    t15.EXT_DELV_DT,
    SUM(NVL(t18.QTY_PASSED, 0)) AS PASSED,
    SUM(NVL(t18.QTY_REJECTED, 0)) AS REJECTED
FROM
    T15_PO_DETAIL t15
LEFT JOIN
    T18_CALL_DETAILS t18 ON t15.CASE_NO = t18.CASE_NO
                        AND t15.ITEM_SRNO = t18.ITEM_SRNO_PO

GROUP BY
    t15.CASE_NO,
    t15.ITEM_SRNO,
    t15.ITEM_DESC,
    t15.QTY,
    t15.EXT_DELV_DT
ORDER BY
    t15.CASE_NO,
    t15.ITEM_SRNO;


    CREATE VIEW VIEW_GET_PO_DETAILS_REPORT_R_VENDOR_PLACE AS
SELECT 
    T20.BILL_NO, 
    T20.IC_DT,
    T20.BK_NO,
    T20.SET_NO,
    T20.REASON_REJECT,
    T09.IE_NAME,
    V05.Vendor,
    T18.ITEM_DESC_PO,
    TO_CHAR(T20.IC_TYPE_ID) AS IC_TYPE_ID,
    T13.VEND_CD,
    T13.CASE_NO
FROM 
    T13_PO_MASTER T13
JOIN 
    T20_IC T20 ON T13.CASE_NO = T20.CASE_NO
JOIN 
    T09_IE T09 ON T20.IE_CD = T09.IE_CD
JOIN 
    V05_VENDOR V05 ON T13.VEND_CD = V05.VEND_CD
JOIN 
    T18_CALL_DETAILS T18 ON T20.CASE_NO = T18.CASE_NO 
                        AND T20.CALL_RECV_DT = T18.CALL_RECV_DT 
                        AND T20.CALL_SNO = T18.CALL_SNO 
                        AND T20.CONSIGNEE_CD = T18.CONSIGNEE_CD 
--WHERE 
    --T20.IC_TYPE_ID = 2 
    --AND T13.VEND_CD = 4088 
    --AND T13.CASE_NO <> 'N20090053' 
ORDER BY 
    T20.IC_DT, T20.BILL_NO;

    CREATE VIEW VIEW_GET_ICPHOTOENCLOSED AS
SELECT
    T49.CASE_NO,
    T49.CALL_RECV_DT,
    T49.CALL_SNO,
    T49.BK_NO,
    T49.SET_NO,
    T09.IE_NAME,
    T17.IE_CD,
    T17.REGION_CODE,
    'IC_PHOTOS/' || T49.FILE_1 AS FILE_1,
    'IC_PHOTOS/' || T49.FILE_2 AS FILE_2,
    'IC_PHOTOS/' || T49.FILE_3 AS FILE_3,
    'IC_PHOTOS/' || T49.FILE_4 AS FILE_4,
    'IC_PHOTOS/' || T49.FILE_5 AS FILE_5,
    NVL2(T49.FILE_6, 'IC_PHOTOS/' || T49.FILE_6, '') AS FILE_6,
    NVL2(T49.FILE_7, 'IC_PHOTOS/' || T49.FILE_7, '') AS FILE_7,
    NVL2(T49.FILE_8, 'IC_PHOTOS/' || T49.FILE_8, '') AS FILE_8,
    NVL2(T49.FILE_9, 'IC_PHOTOS/' || T49.FILE_9, '') AS FILE_9,
    NVL2(T49.FILE_10, 'IC_PHOTOS/' || T49.FILE_10, '') AS FILE_10
FROM
    T49_IC_PHOTO_ENCLOSED T49
JOIN
    T17_CALL_REGISTER T17 ON T49.CASE_NO = T17.CASE_NO
                          AND T49.CALL_RECV_DT = T17.CALL_RECV_DT
                          AND T49.CALL_SNO = T17.CALL_SNO
JOIN
    T09_IE T09 ON T17.IE_CD = T09.IE_CD;

    CREATE VIEW VIEW_GET_PENDING_JI_COMPLAINTS AS
SELECT
    COMPLAINT_ID,
    COMPLAINT_DT,
    REJ_MEMO_NO || ' Dt. ' || TO_CHAR(REJ_MEMO_DT, 'dd/mm/yyyy') AS REJ_MEMO,
    CASE_NO,
    BK_NO,
    SET_NO,
    T40.IE_NAME,
    IE_CO_NAME,
    DECODE(COMP_RECV_REGION, 'N', 'Northern', 'S', 'Southern', 'W', 'Western', 'E', 'Eastern', 'C', 'Central') AS COMP_RECV_REGION,
    CONSIGNEE_NAME || ', ' || CONSIGNEE_CITY AS CONSIGNEE,
    VENDOR,
    ITEM_DESC,
    QTY_OFFERED || ' ' || UOM_S_DESC AS QTY_OFF,
    QTY_REJECTED || ' ' || UOM_S_DESC AS QTY_REJECTED,
    REJECTION_VALUE,
    REJECTION_REASON,
    STATUS,
    DECODE(JI_REQUIRED, 'Y', 'Yes', 'N', 'NO', 'Cancelled') AS JI_REQUIRED,
    JI_SNO,
    JI_DT,
    T38.DEFECT_DESC,
    T39.JI_STATUS_DESC,
    ACTION,
    L5NO_PO AS PO_NO,
    PO_DT, 
    IC_DT,
    T09.IE_NAME AS JI_IE_NAME,
    DECODE(ACTION_PROPOSED, 'W', 'Warning Letter', 'I', 'Minor Penalty', 'J', 'Major Penalty', 'O', 'Others') AS ACTION_PROPOSED,
    TO_CHAR(ACTION_PROPOSED_DT, 'dd/mm/yyyy') AS ACTION_PROPOSED_DT,
    CO_NAME,
    JI_FIX_DT,
    T40.IE_CD,
    IE_JI_REMARKS
FROM
    V40_CONSIGNEE_COMPLAINTS T40
    LEFT JOIN T38_DEFECT_CODES T38 ON T40.DEFECT_CD = T38.DEFECT_CD
    LEFT JOIN T39_JI_STATUS_CODES T39 ON T40.JI_STATUS_CD = T39.JI_STATUS_CD
    LEFT JOIN T09_IE T09 ON T40.JI_IE_CD = T09.IE_CD
    LEFT JOIN T08_IE_CONTROLL_OFFICER T08 ON T40.IE_CO_CD = T08.CO_CD;



    CREATE VIEW VIEW_GET_CALLINSPECTION_PRINT_REPORT AS
SELECT
    P.PO_NO,
    P.PO_DT,
    TRIM(M.VEND_NAME) AS MFG_NAME,
    TRIM(M.VEND_ADD1) || '/' || NVL2(CM.LOCATION, CM.LOCATION || ' / ' || CM.CITY, CM.CITY) AS MFG_ADD,
    (P.PURCHASER_CD || '-' || PU.CONSIGNEE) AS PURCHASER,
    (T18.CONSIGNEE_CD || '-' || CN.CONSIGNEE) AS CONSIGNEE,
    T17.CASE_NO,
    T17.CALL_RECV_DT,
    T17.CALL_SNO,
    T17.CALL_LETTER_NO,
    TO_CHAR(T17.CALL_LETTER_DT, 'dd/mm/yyyy') AS CALL_LETTER_DT,
    T17.CALL_INSTALL_NO,
    NVL(T17.ONLINE_CALL, 'X') AS ONLINE_CALL,
    NVL(T17.FINAL_OR_STAGE, 'X') AS FINAL_OR_STAGE,
    T17.REMARKS,
    DECODE(T17.ITEM_RDSO, 'Y', 'Yes', 'N', 'No', '') AS ITEM_RDSO,
    DECODE(T17.VEND_RDSO, 'Y', 'Yes', 'N', 'No', '') AS VEND_RDSO,
    TO_CHAR(T17.VEND_APPROVAL_FR, 'dd/mm/yyyy') AS VEND_APP_FR,
    TO_CHAR(T17.VEND_APPROVAL_TO, 'dd/mm/yyyy') AS VEND_APP_TO,
    DECODE(STAGGERED_DP, 'Y', 'YES', 'N', 'NO', 'N.A') AS STAG_DP,
    LOT_DP_1,
    LOT_DP_2,
    T09.IE_NAME,
    T18.ITEM_DESC_PO,
    T18.QTY_ORDERED,
    T18.QTY_TO_INSP,
    NVL(T18.CUM_QTY_PREV_OFFERED, '0') AS CUM_QTY_PREV_OFFERED,
    NVL(T18.CUM_QTY_PREV_PASSED, '0') AS CUM_QTY_PREV_PASSED,
    M.VEND_CONTACT_PER_1,
    M.VEND_CONTACT_TEL_1,
    M.VEND_EMAIL,
    V12.BPO,
    T15.EXT_DELV_DT AS DELV_DT,
    T15.ITEM_CD,
    IRFC_FUNDED
FROM
    T05_VENDOR M,
    T03_CITY CM,
    T13_PO_MASTER P,
    T17_CALL_REGISTER T17,
    T18_CALL_DETAILS T18,
    V06_CONSIGNEE CN,
    V06_CONSIGNEE PU,
    V12_BILL_PAYING_OFFICER V12,
    T14_PO_BPO T14,
    T15_PO_DETAIL T15,
    T09_IE T09
WHERE
    P.CASE_NO = T17.CASE_NO
    AND T17.MFG_CD = M.VEND_CD
    AND M.VEND_CITY_CD = CM.CITY_CD
    AND P.PURCHASER_CD = PU.CONSIGNEE_CD
    AND T18.CONSIGNEE_CD = CN.CONSIGNEE_CD
    AND P.CASE_NO = T14.CASE_NO
    AND T14.BPO_CD = V12.BPO_CD
    AND T14.CONSIGNEE_CD = T18.CONSIGNEE_CD
    AND P.CASE_NO = T15.CASE_NO
    AND T15.CASE_NO = T18.CASE_NO
    AND T15.ITEM_SRNO = T18.ITEM_SRNO_PO
    AND T15.CONSIGNEE_CD = T18.CONSIGNEE_CD
    AND T14.CONSIGNEE_CD = T15.CONSIGNEE_CD
    AND T18.CASE_NO = T17.CASE_NO
    AND T18.CALL_RECV_DT = T17.CALL_RECV_DT
    AND T18.CALL_SNO = T17.CALL_SNO
    AND T17.IE_CD = T09.IE_CD(+);



    CREATE VIEW VIEW_GET_CALLINSPECTION_PRINT_SUB_REPORT AS
SELECT
    T13.VEND_CD,
    T05.VEND_NAME,
    NVL2(T05.VEND_ADD2, T05.VEND_ADD1 || '/' || T05.VEND_ADD2, T05.VEND_ADD1) || '/' || T03.CITY AS VEND_ADDRESS,
    T05.VEND_EMAIL,
    T05.VEND_CONTACT_PER_1,
    T05.VEND_CONTACT_TEL_1,
    CASE
        WHEN T13.PO_SOURCE = 'V' THEN 'VENDOR'
        WHEN T13.PO_SOURCE = 'M' THEN 'MANUAL'
        WHEN T13.PO_SOURCE = 'C' THEN 'IREPS'
        ELSE 'OTHER'
    END AS SOURCE,
    T13.CASE_NO
FROM
    T13_PO_MASTER T13
JOIN
    T05_VENDOR T05 ON T13.VEND_CD = T05.VEND_CD
JOIN
    T03_CITY T03 ON T05.VEND_CITY_CD = T03.CITY_CD;

    CREATE VIEW VIEW_GET_CALL_REG_CANCELLATION AS
SELECT
    P.CASE_NO,
    C.CALL_RECV_DT,
    C.CALL_INSTALL_NO,
    C.CALL_SNO,
    DECODE(
        S.CALL_STATUS_CD,
        'C', S.CALL_STATUS_DESC || DECODE(C.CALL_CANCEL_STATUS, 'N', ' (Non Chargeable)', 'C', ' (Chargeable)' || '@' || C.CALL_CANCEL_CHARGES || '+ S.T.'),
        'R', NVL2(C.REJ_CHARGES, S.CALL_STATUS_DESC || '@' || REJ_CHARGES || '+ GST', S.CALL_STATUS_DESC),
        S.CALL_STATUS_DESC
    ) AS CALL_STATUS,
    C.CALL_LETTER_NO,
    C.REMARKS,
    P.PO_NO,
    P.PO_DT, 
    I.IE_SNAME,
    (V.VEND_NAME || '(' || NVL2(T.LOCATION, T.LOCATION || ' : ' || T.CITY, T.CITY) || ')') AS VENDOR,
    P.REGION_CODE,
    C.CALL_STATUS AS C_STATUS
FROM
    T17_CALL_REGISTER C
    JOIN T13_PO_MASTER P ON P.CASE_NO = C.CASE_NO
    LEFT JOIN T09_IE I ON C.IE_CD = I.IE_CD
    JOIN T05_VENDOR V ON P.VEND_CD = V.VEND_CD
    JOIN T03_CITY T ON V.VEND_CITY_CD = T.CITY_CD
    LEFT JOIN T21_CALL_STATUS_CODES S ON C.CALL_STATUS = S.CALL_STATUS_CD;

    CREATE VIEW VIEW_GET_CALL_STATUS_DETAILS AS
SELECT
        t051.vend_name,
        ( t06.consignee_desig
          || ' '
          || t06.consignee_firm )  AS consignee,
        t18.item_desc_po,
        t17.call_mark_dt,
        t17.call_recv_dt,
        dt_insp_desire           AS desire_dt,
        t09.ie_name,
        t09.ie_phone_no,
        t13.po_no,
        t13.po_dt,
        t17.case_no,
        t17.call_letter_dt       AS call_letter_dt,
        t17.call_letter_no,
        decode(t17.call_status, 'M', 'Pending', 'A', 'Accepted',
               'R', 'Rejection', 'C', 'Cancelled', 'U',
               'Under Lab Testing', 'S', 'Still Under Inspection', 'G', 'Stage Inspection',
               'W', 'Withheld')  AS call_status1,
        t17.call_status,
        T17.CALL_STATUS_DT,
        t17.call_cancel_status,
        t17.call_cancel_charges,
        t17.bk_no,
        t17.set_no,
        t17.remarks,
        t17.hologram,
        nvl(update_allowed, 'Y') AS update_allowed,
        t052.vend_contact_per_1  AS mfg_pers,
        t052.vend_contact_tel_1  AS mfg_phone,
        t17.call_sno,
        (
            SELECT
                COUNT(*)
            FROM
                t18_call_details a
            WHERE
                    a.case_no = t18.case_no
                AND a.call_recv_dt = t18.call_recv_dt
        )                        AS count,
        t18.item_srno_po
    FROM
             t05_vendor t051
        JOIN t13_po_master     t13 ON t051.vend_cd = t13.vend_cd
        LEFT JOIN t06_consignee     t06 ON t06.consignee_cd = t13.purchaser_cd
        JOIN t17_call_register t17 ON t13.case_no = t17.case_no
        JOIN t18_call_details  t18 ON t18.case_no = t17.case_no
                                     AND t18.call_recv_dt = t17.call_recv_dt
        JOIN t09_ie            t09 ON t09.ie_cd = t17.ie_cd
        LEFT JOIN t05_vendor        t052 ON t17.mfg_cd = t052.vend_cd
    ORDER BY
        t051.vend_name,
        call_mark_dt;

        CREATE VIEW VIEW_CHEQUE_POSTING_DETAILS AS
SELECT
    T26.BANK_CD,
    T26.CHQ_NO,
    T26.CHQ_DT AS CHQ_DT,
    T26.BILL_NO,
    T22.BILL_AMOUNT,T09_IE_HISTORY
    T26.AMOUNT_CLEARED,
    T26.POSTING_DT AS POSTING_DT,
    NVL(T22.BILL_AMT_CLEARED, 0) AS BILL_AMT_CLEARED,
    (B.BPO_CD || '-' || B.BPO_NAME || '/' || NVL2(B.BPO_ADD, B.BPO_ADD || '/', '') || NVL2(C.LOCATION, C.CITY || '/' || C.LOCATION, C.CITY) || '/' || B.BPO_RLY) AS BPO_NAME,
    T26.DATETIME
FROM
    T26_CHEQUE_POSTING T26,
    V22_BILL T22,
    T12_BILL_PAYING_OFFICER B,
    T03_CITY C
WHERE
    T26.BILL_NO = T22.BILL_NO
    AND T22.BPO_CD = B.BPO_CD
    AND B.BPO_CITY_CD = C.CITY_CD;


ALTER TABLE t18_call_details ADD SUPP_B_FLAG VARCHAR2(10 BYTE)
ALTER TABLE t18_call_details ADD SUPP_NEW_RATE	NUMBER(11,2)




create or replace PROCEDURE "SP_GENERATE_CREDIT_NOTE_NEW" (
    in_region_cd    IN VARCHAR2,
    in_case_no      IN VARCHAR2,
    in_call_recv_dt IN DATE,
    in_call_sno     IN NUMBER,
    in_consignee_cd IN NUMBER,
    in_bill         IN VARCHAR2,
    in_fee_type     IN VARCHAR2,
    in_fee          IN NUMBER,
    in_tax_type     IN VARCHAR2,
    in_no_of_insp   IN NUMBER,
    in_invoice      IN VARCHAR2,
    in_max_fee      IN NUMBER,
    in_min_fee      IN NUMBER,
    in_bill_dt      IN CHAR,
    in_adv_bill     IN VARCHAR2,
    
    in_material_value_new   IN NUMBER,
    in_insp_fee_new         IN NUMBER,
    in_bill_amount_new      IN NUMBER,
    in_material_value_diff  IN NUMBER,
    in_insp_fee_diff        IN NUMBER,
    in_bill_amount_diff     IN NUMBER,
    
    p_result_cursor OUT SYS_REFCURSOR
    --out_err_cd      OUT NUMBER,
    --out_bill        OUT VARCHAR2,
    --out_fee         OUT NUMBER
) IS

    CURSOR c1 IS
    SELECT
        c.item_srno_po          srno,
        c.item_desc_po          item,
        nvl(c.qty_passed, 0)    qty_passed,
        nvl(p.qty, 0)           qty,
        --nvl(p.rate, 0)          rate,
        nvl(c.supp_new_rate, 0)          rate,
        p.uom_cd                uom,
        nvl(p.basic_value, 0)   basic_value,
        nvl(p.sales_tax_per, 0) stax_per,
        nvl(p.sales_tax, 0)     stax,
        p.discount_type         discount_type,
        nvl(p.discount_per, 0)  discount_per,
        nvl(p.discount, 0)      discount,
        p.ot_charge_type        ot_charge_type,
        nvl(p.ot_charge_per, 0) ot_charge_per,
        nvl(p.other_charges, 0) other_charges,
        nvl(p.value, 0)         value,
        nvl(u.uom_factor, 1)    div_factor
    FROM
        t18_call_details c,
        t15_po_detail    p,
        t04_uom          u
    WHERE
            c.case_no = p.case_no
        AND c.consignee_cd = p.consignee_cd
        AND c.item_srno_po = p.item_srno
        AND u.uom_cd = p.uom_cd
        AND c.case_no = in_case_no
        AND c.call_recv_dt = in_call_recv_dt
        AND c.consignee_cd = in_consignee_cd
        AND c.call_sno = in_call_sno;

    r1              c1%rowtype;
    w_basic_value   NUMBER := 0;
    w_sales_tax     NUMBER := 0;
    w_discount      NUMBER := 0;
    w_other_charges NUMBER := 0;
    w_value         NUMBER := 0;
    w_total_value   NUMBER := 0;
    w_bill_no       VARCHAR2(10) := '';
    w_invoice_no    VARCHAR2(14) := '';
    w_bill_dt       DATE;
    w_yy            CHAR(2);
    w_ctr           NUMBER := 0;
    w_ctr1          NUMBER := 0;
    w_insp_fee      NUMBER := 0;
    w_igst          NUMBER := 0;
    w_cgst          NUMBER := 0;
    w_sgst          NUMBER := 0;
    w_total_fee     NUMBER := 0;
    w_adv_bill_no   NUMBER := 0;
    w_bill_status   CHAR(1) := NULL;
    w_c_gst         NUMBER := 0;
    w_c_gst_rate    NUMBER := 0;
    w_i_gst         NUMBER := 0;
    w_i_gst_rate    NUMBER := 0;
    w_s_gst         NUMBER := 0;
    w_s_gst_rate    NUMBER := 0;
    out_err_cd      INT := 0;
    my_exception EXCEPTION;
BEGIN
    out_err_cd := -1;
	---
    IF ( in_fee_type IS NULL ) OR ( trim(in_fee_type) = '' ) OR ( in_fee = 0 ) THEN
        RAISE my_exception;
    END IF;
	---
	---
    out_err_cd := -2;
	---
    IF
        ( nvl(in_max_fee, 0) > 0 )
        AND ( nvl(in_min_fee, 0) > 0 )
        AND ( nvl(in_max_fee, 0) < nvl(in_min_fee, 0) )
    THEN
        RAISE my_exception;
    END IF;
	---
	---
    out_err_cd := -8;
	---
    SELECT
        igst_rate
    INTO w_i_gst
    FROM
        t89_gst
    WHERE
        (
            SELECT
                ic_dt
            FROM
                t20_ic
            WHERE
                    case_no = in_case_no
                AND call_recv_dt = in_call_recv_dt
                AND consignee_cd = in_consignee_cd
                AND call_sno = in_call_sno
        ) BETWEEN dt_from AND dt_to;

    w_i_gst_rate := w_i_gst / 100;
    SELECT
        sgst_rate
    INTO w_s_gst
    FROM
        t89_gst
    WHERE
        (
            SELECT
                ic_dt
            FROM
                t20_ic
            WHERE
                    case_no = in_case_no
                AND call_recv_dt = in_call_recv_dt
                AND consignee_cd = in_consignee_cd
                AND call_sno = in_call_sno
        ) BETWEEN dt_from AND dt_to;

    w_s_gst_rate := w_s_gst / 100;
    SELECT
        cgst_rate
    INTO w_c_gst
    FROM
        t89_gst
    WHERE
        (
            SELECT
                ic_dt
            FROM
                t20_ic
            WHERE
                    case_no = in_case_no
                AND call_recv_dt = in_call_recv_dt
                AND consignee_cd = in_consignee_cd
                AND call_sno = in_call_sno
        ) BETWEEN dt_from AND dt_to;

    w_c_gst_rate := w_c_gst / 100;
	---  ---------------------- For New Bills -------------------------------
    IF trim(in_bill) = 'Z' THEN
        w_bill_dt := TO_DATE ( in_bill_dt, 'ddmmyyyy' );
       IF TO_NUMBER ( substr(in_bill_dt, 3, 2) ) < 4 THEN
            w_yy := lpad(TO_NUMBER(substr(in_bill_dt, 7, 2)) - 1, 2, '0');
        ELSE
            w_yy := substr(in_bill_dt, 7, 2);
        END IF;
        
        
	   --
        out_err_cd := -3;
	   --
       dbms_output.put_line(w_yy);
        SELECT
            nvl(MAX(TO_NUMBER(substr(bill_no, 5, 6))),
                0) + 1
        INTO w_ctr
        FROM
            t22_bill
        WHERE
                substr(bill_no, 1, 1) = in_region_cd
            AND substr(bill_no, 2, 2) = w_yy;

        w_bill_no := in_region_cd
                     || w_yy
                     || '-'
                     || lpad(w_ctr, 6, '0');
        dbms_output.put_line(w_yy);
         --
        out_err_cd := -4;
        SELECT
            nvl(MAX(TO_NUMBER(substr(invoice_no, 10, 5))),
                0) + 1
        INTO w_ctr1
        FROM
            t22_bill
        WHERE
            substr(invoice_no, 1, 8) = 'R'
                                       || in_invoice
                                       || 'C'
                                       || w_yy;

        w_invoice_no := 'R'
                        || in_invoice
                        || 'C'
                        || w_yy
                        || '/'
                        || lpad(w_ctr1, 5, '0');
        
        
        INSERT INTO t22_bill (
            bill_no,
            bill_dt,
            case_no,
            adv_bill,
            invoice_no
        ) VALUES (
            w_bill_no,
            w_bill_dt,
            in_case_no,
            in_adv_bill,
            w_invoice_no
        );

        w_bill_status := NULL;
    ELSE
        out_err_cd := -5;
        w_bill_no := in_bill;
        SELECT
            bill_status
        INTO w_bill_status
        FROM
            t22_bill
        WHERE
            bill_no = w_bill_no;

        IF w_bill_status IS NOT NULL THEN
            w_bill_status := 'U';
        END IF;
        DELETE FROM t23_bill_items
        WHERE
            bill_no = in_bill; -- For Existing Bills --
    END IF;
	---
	---
	---
    out_err_cd := -6;
	---
    FOR r1 IN c1 LOOP
        IF r1.qty_passed = r1.qty THEN
            w_basic_value := r1.basic_value;
            w_sales_tax := r1.stax;
            w_discount := r1.discount;
            w_other_charges := r1.other_charges;
            w_value := r1.value;
        ELSE
            w_basic_value := r1.qty_passed * ( r1.rate / r1.div_factor );
		---
            IF nvl(r1.discount_type, 'X') = 'P' THEN
                w_discount := w_basic_value * r1.discount_per / 100;
            ELSIF nvl(r1.discount_type, 'X') = 'N' THEN
                w_discount := ( r1.qty_passed * r1.discount_per );
            ELSE
                w_discount := ( r1.qty_passed / r1.qty ) * r1.discount;
            END IF;

            w_value := w_basic_value - w_discount;
		---
            IF r1.stax_per = 0 THEN
                w_sales_tax := ( r1.qty_passed / r1.qty ) * r1.stax;
            ELSE
                w_sales_tax := w_value * r1.stax_per / 100;
            END IF;

            w_value := w_value + w_sales_tax;
		---
            IF nvl(r1.ot_charge_type, 'X') = 'P' THEN
                w_other_charges := w_basic_value * r1.ot_charge_per / 100;
            ELSIF nvl(r1.ot_charge_type, 'X') = 'N' THEN
                w_other_charges := ( r1.qty_passed * r1.ot_charge_per );
            ELSE
                w_other_charges := ( r1.qty_passed / r1.qty ) * r1.other_charges;
            END IF;

            w_value := w_value + w_other_charges;
		---
        END IF;

        w_total_value := w_total_value + w_value;
        INSERT INTO t23_bill_items VALUES (
            w_bill_no,
            r1.srno,
            r1.item,
            r1.qty_passed,
            r1.rate,
            r1.uom,
            w_basic_value,
            decode(r1.stax_per, 0, NULL, r1.stax_per),
            w_sales_tax,
            '',
            '',
            0,
            r1.discount_type,
            decode(r1.discount_per, 0, NULL, r1.discount_per),
            w_discount,
            w_other_charges,
            --w_value,
            in_material_value_diff,
            r1.ot_charge_type,
            decode(r1.ot_charge_per, 0, NULL, r1.ot_charge_per)
            
        );

    END LOOP;
	---
	--- FEE CALCULATION ---
	---
    out_err_cd := -7;
	---
    IF in_fee_type IN ( 'D', 'H' ) THEN
        w_insp_fee := in_no_of_insp * in_fee;
    ELSIF in_fee_type = 'P' THEN
        w_insp_fee := w_total_value * in_fee / 100;
    ELSIF in_fee_type = 'L' THEN
        w_insp_fee := in_fee;
    END IF;
    dbms_output.put_line(w_insp_fee);
	---
	---
    IF ( nvl(in_max_fee, 0) >= 0 ) OR ( nvl(in_min_fee, 0) > 0 ) THEN
        IF
            ( nvl(in_min_fee, 0) > 0 )
            AND ( in_min_fee > w_insp_fee )
        THEN
            w_insp_fee := in_min_fee;
        END IF;

        IF
            ( nvl(in_max_fee, 0) >= 0 )
            AND ( in_max_fee < w_insp_fee )
        THEN
            w_insp_fee := in_max_fee;
        END IF;

    END IF;
	 ----
    w_insp_fee := round(w_insp_fee);
    dbms_output.put_line(w_insp_fee);
	----
    IF in_tax_type = 'I' THEN
        w_igst := round(w_insp_fee * w_i_gst_rate);
        w_cgst := 0;
        w_sgst := 0;
    ELSIF in_tax_type = 'C' THEN
        w_cgst := round(w_insp_fee * w_c_gst_rate);
        w_sgst := round(w_insp_fee * w_s_gst_rate);
        w_igst := 0;
    ELSIF in_tax_type = 'X' THEN
        w_cgst := 0;
        w_sgst := 0;
        w_igst := 0;
    ELSIF in_tax_type = 'Y' THEN
        w_total_fee := w_insp_fee;
        w_insp_fee := w_total_fee / ( 1 + w_i_gst_rate );
        w_igst := round(w_insp_fee * w_i_gst_rate);
        w_cgst := 0;
        w_sgst := 0;
        w_insp_fee := w_total_fee - ( w_igst );
    ELSIF in_tax_type = 'Z' THEN
        w_total_fee := w_insp_fee;
        w_insp_fee := w_total_fee / ( 1 + w_c_gst_rate + + w_s_gst_rate );
        w_igst := 0;
        w_cgst := round(w_insp_fee * w_c_gst_rate);
        w_sgst := round(w_insp_fee * w_s_gst_rate);
        w_insp_fee := w_total_fee - ( w_cgst + w_sgst );
    END IF;

    w_total_fee := round(w_insp_fee + w_cgst + w_sgst + w_igst);
    dbms_output.put_line(w_total_fee);
	---
    UPDATE t22_bill
    SET
        --material_value = w_total_value,
        material_value = in_material_value_diff,
        fee_type = in_fee_type,
        fee_rate = in_fee,
        tax_type = in_tax_type,
        --insp_fee = w_insp_fee,
        insp_fee = in_insp_fee_diff,
        service_tax = 0,
        serv_tax_rate = 0,
        edu_cess = 0,
        she_cess = 0,
        swachh_bharat_cess = 0,
        krishi_kalyan_cess = 0,
        cgst = w_cgst,
        sgst = w_sgst,
        igst = w_igst,
        min_fee = decode(in_min_fee, 0, NULL, in_min_fee),
        max_fee = decode(in_max_fee, - 1, NULL, in_max_fee),
        --bill_amount = w_total_fee,
        bill_amount = in_bill_amount_diff,
        bill_status = w_bill_status,
        NEW_MATERIAL_VALUE = in_material_value_new,
        NEW_INSP_FEE = in_insp_fee_new,
        NEW_BILL_AMOUNT = in_bill_amount_new
    WHERE
        bill_no = w_bill_no;
	---
	---
    IF trim(in_bill) = 'Z' THEN
        UPDATE t20_ic
        SET
            bill_no = w_bill_no
        WHERE
            case_no = in_case_no
            AND call_recv_dt = in_call_recv_dt
            AND consignee_cd = in_consignee_cd
            AND call_sno = in_call_sno;

    ELSE
	---
        UPDATE t26_cheque_posting
        SET
            bill_amount = w_total_fee
        WHERE
            bill_no = w_bill_no;

    END IF;
	---
    COMMIT;
    --out_fee := w_insp_fee;
    --out_bill := w_bill_no;
    out_err_cd := 0;
    
    OPEN p_result_cursor FOR SELECT
                                 w_insp_fee AS out_fee,
                                 w_bill_no  AS out_bill,
                                 out_err_cd AS out_err_cd
                             FROM
                                 dual;
EXCEPTION
    WHEN no_data_found THEN
        ROLLBACK;
    WHEN my_exception THEN
        ROLLBACK;
    WHEN OTHERS THEN
        ROLLBACK;
END;

------------------------------------------------------------

ALTER TABLE T17_CALL_REGISTER ADD CREATEDBY	VARCHAR2(50 BYTE)
ALTER TABLE T17_CALL_REGISTER ADD CREATEDDATE	TIMESTAMP(6)
ALTER TABLE T17_CALL_REGISTER ADD UPDATEDBY	VARCHAR2(50 BYTE)
ALTER TABLE T17_CALL_REGISTER ADD UPDATEDDATE	TIMESTAMP(6)
ALTER TABLE T17_CALL_REGISTER ADD ISDELETED	NUMBER(2,0)
ALTER TABLE T17_CALL_REGISTER ADD CM_APPROVAL	CHAR(1 BYTE)
ALTER TABLE T17_CALL_REGISTER ADD CM_APPROVAL_DT	DATE
ALTER TABLE T17_CALL_REGISTER ADD ISFINALIZEDSTATUS	CHAR(1 BYTE)

create or replace PROCEDURE SP_CallsMarkedToIE (
    p_dtFr  IN  DATE,
    p_dtTo  IN  DATE,
    p_IeCd  IN  VARCHAR2,
    p_result_cursor OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_result_cursor FOR
   
    SELECT
    TRIM(T051.VEND_NAME) || NVL2(TRIM(T03.CITY), ',' || TRIM(T03.CITY), '') AS VENDOR,
    TRIM(T052.VEND_NAME) || NVL2(TRIM(T032.CITY), ',' || TRIM(T032.CITY), '') AS MANUFACTURER,
    T051.VEND_CD AS VEND_CD,
    T052.VEND_CD AS MFG_CD,
    (T06.CONSIGNEE_DESIG || ' ' || T06.CONSIGNEE_FIRM) AS CONSIGNEE,
    T18.ITEM_DESC_PO AS ITEM_DESC_PO,
    TO_CHAR(T15.EXT_DELV_DT, 'dd/mm/yyyy') AS EXT_DELV_DT,
    TO_CHAR(T17.CALL_MARK_DT, 'dd/mm/yyyy') AS CALL_MARK_DT,
    TO_CHAR(T17.DT_INSP_DESIRE, 'dd/mm/yyyy') AS INSP_DESIRE_DT,
    TO_CHAR(T17.CALL_RECV_DT, 'dd/mm/yyyy') AS CALL_RECV_DT,
    NVL(T17.NEW_VENDOR, 'X') AS NEW_VENDOR,
    T09.IE_NAME AS IE_NAME,
    T09.IE_PHONE_NO AS IE_PHONE_NO,
    T13.PO_NO AS PO_NO,
    TO_CHAR(T13.PO_DT, 'dd/mm/yyyy') AS PO_DATE,
    TO_CHAR(T13.PO_DT, 'yyyy') AS PO_YR,
    T13.PO_SOURCE AS PO_SOURCE,
    DECODE(PO_SOURCE, 'V', 'VENDOR', 'M', 'MANUAL', 'C', 'IREPS', 'OTHER') AS SOURCE,
    T13.RLY_CD AS RLY_CD,
    T17.CASE_NO AS CASE_NO,
    T17.USER_ID AS USER_ID,
    TO_CHAR(T17.DATETIME, 'dd/mm/yyyy') AS DATETIME,
    T17.REMARKS AS REMARKS,
    T17.CALL_STATUS AS CALL_STATUS,
    TRIM(T21.CALL_STATUS_DESC) ||
    DECODE(T21.CALL_STATUS_CD,
        'A', NVL2(T17.BK_NO, ' (BookSet-' || T17.BK_NO || '/' || T17.SET_NO || ')', ''),
        'R', NVL2(T17.BK_NO, ' (BookSet-' || T17.BK_NO || '/' || T17.SET_NO || ')', ''),
        'C', ' on ' || TO_CHAR(T17.CALL_STATUS_DT, 'dd/mm/yyyy')) ||
    DECODE(T17.CALL_CANCEL_STATUS,
        'N', ' (Non Chargeable)' || '/' || 'Document Not Received',
        'C', ' (Chargeable)' || '/' || 'Document Not Received') AS CALL_STATUS_FULL,
    T21.CALL_STATUS_COLOR AS COLOUR,
    T052.VEND_CONTACT_PER_1 AS MFG_PERS,
    T052.VEND_CONTACT_TEL_1 AS MFG_PHONE,
    T17.CALL_SNO AS CALL_SNO,
    CAST((SELECT COUNT(*) FROM T18_CALL_DETAILS A WHERE A.CASE_NO = T18.CASE_NO AND A.CALL_RECV_DT = T18.CALL_RECV_DT AND A.CALL_SNO = T18.CALL_SNO) as NUMBER(6)) AS COUNT,
    T91.IMMS_RLY_CD AS IMMS_RLY_CD,
    T17.CM_APPROVAL AS CM_APPROVAL,
    DECODE(T109.STATUS,'S','SAMPLE RECEIVED ON: '||TO_CHAR(T109.SAMPLE_RECV_DT,'DD/MM/YYYY')||', TOTAL TESTING CHARGES ARE: Rs.'||DECODE(T109.TESTING_CHARGES,0,'_',T109.TESTING_CHARGES)||', LIKELY TEST REPORT RELEASE DATE IS: '||NVL(TO_CHAR(T109.LIKELY_DT_REPORT,'DD/MM/YYYY'),'_'),'C','Lab Report under Compilation','U','Lab Report Uploaded on: '||to_char(T109.LAB_REP_UPLOADED_DT,'dd/mm/yyyy-HH24:MI:SS'),'O','Others- '||T109.REMARKS) AS LAB_STATUS,
    CAST((SELECT COUNT(*) FROM T110_LAB_DOC A WHERE A.CASE_NO = T18.CASE_NO AND A.CALL_RECV_DT = T18.CALL_RECV_DT AND A.CALL_SNO = T18.CALL_SNO) as NUMBER(6)) AS PAYMENT_RECIEPT,
    CAST((SELECT COUNT(*) FROM T47_Ie_Work_Plan WHERE  TRUNC(Visit_Dt) = TRUNC(TO_DATE((SELECT sysdate FROM dual), 'DD-MM-YY')) AND IE_CD = p_IeCd) as NUMBER(6)) AS APPROVALCOUNT
    
    FROM
        T05_VENDOR T051,
        T03_CITY T03,
        T06_CONSIGNEE T06,
        T17_CALL_REGISTER T17,
        T18_CALL_DETAILS T18,
        T13_PO_MASTER T13,
        T09_IE T09,
        T05_VENDOR T052,
        T03_CITY T032,
        T21_CALL_STATUS_CODES T21,
        T19_CALL_CANCEL T19,
        T15_PO_DETAIL T15,
        T91_RAILWAYS T91,
        T109_LAB_SAMPLE_INFO T109
    WHERE
        T051.VEND_CD = T13.VEND_CD
        AND T06.CONSIGNEE_CD(+) = T13.PURCHASER_CD
        AND T13.CASE_NO = T15.CASE_NO
        AND T15.CASE_NO = T18.CASE_NO
        AND T15.ITEM_SRNO = T18.ITEM_SRNO_PO
        AND T15.CASE_NO = T17.CASE_NO
        AND T13.CASE_NO = T17.CASE_NO
        AND T17.CALL_STATUS = T21.CALL_STATUS_CD
        AND T09.IE_CD = T17.IE_CD
        AND T18.CASE_NO = T17.CASE_NO
        AND T18.CALL_RECV_DT = T17.CALL_RECV_DT
        AND T18.CALL_SNO = T17.CALL_SNO
        AND T17.CASE_NO = T19.CASE_NO(+)
        AND T17.CALL_RECV_DT = T19.CALL_RECV_DT(+)
        AND T17.CALL_SNO = T19.CALL_SNO(+)
        AND T17.MFG_CD = T052.VEND_CD(+)
        AND T03.CITY_CD = T051.VEND_CITY_CD
        AND T032.CITY_CD(+) = T052.VEND_CITY_CD
        AND T13.RLY_CD = T91.RLY_CD(+)
        AND T18.CASE_NO = T109.CASE_NO (+)
        AND T18.CALL_RECV_DT = T109.CALL_RECV_DT (+)
        AND T18.CALL_SNO = T109.CALL_SNO (+)
        AND (
            (T17.CALL_MARK_DT BETWEEN p_dtFr AND p_dtTo
            AND T17.CALL_STATUS NOT IN ('B', 'C')
            OR (T17.CALL_STATUS = 'C' AND T17.CALL_RECV_DT > TO_DATE('27-FEB-12', 'dd/mm/yy') AND NVL(T19.DOCS_SUBMITTED, 'X') = 'X')
        )
        OR T17.CALL_STATUS IN ('M', 'U', 'S', 'W')
        )
        AND T17.IE_CD = p_IeCd
       AND t18.item_srno_po = (
        SELECT
            MIN(b.item_srno_po)
        FROM
            t18_call_details b
        WHERE
                b.case_no = t18.case_no
            AND b.call_recv_dt = t18.call_recv_dt
            AND b.call_sno = t18.call_sno
    )
        
    ORDER BY T17.CALL_MARK_DT, T17.CALL_SNO, T051.VEND_NAME;

EXCEPTION
    WHEN OTHERS THEN
        NULL;
END;


--------------------------------------------------



create or replace PROCEDURE GET_LOGINBYUSERPASS (
    P_USER_NAME IN VARCHAR2,
    P_PASSWORD IN VARCHAR2,
    P_USERTYPE IN VARCHAR2,
    P_RESULT_CURSOR OUT SYS_REFCURSOR
) AS
BEGIN

    IF P_USER_NAME IS NULL OR P_PASSWORD IS NULL THEN
        -- Handle NULL inputs
        OPEN P_RESULT_CURSOR FOR
            SELECT 'NULL_INPUT' AS RESULT FROM DUAL;
    ELSE
        IF P_USERTYPE = 'USERS'
            THEN   
            -- Valid credentials
            OPEN P_RESULT_CURSOR FOR
            SELECT u.MOBILE AS MOBILE,u.ID AS ID, u.USER_NAME AS USER_NAME,u.USER_ID AS USER_ID 
            FROM T02_USERS u 
            WHERE TRIM(u.USER_ID) = TRIM(P_USER_NAME) AND TRIM(u.PASSWORD) = TRIM(P_PASSWORD);
        ELSIF P_USERTYPE = 'VENDOR'
            THEN
            OPEN P_RESULT_CURSOR FOR
            SELECT V.VEND_CONTACT_TEL_1 AS MOBILE, V.VEND_CD AS ID,V.VEND_NAME AS USER_NAME,V.VEND_CD AS USER_ID 
            FROM T05_VENDOR V 
            WHERE TRIM(V.VEND_CD) = TRIM(P_USER_NAME) AND TRIM(V.VEND_PWD) = TRIM(P_PASSWORD);
        ELSIF P_USERTYPE = 'IE'
            THEN
            OPEN P_RESULT_CURSOR FOR
            SELECT E.IE_PHONE_NO AS MOBILE,E.IE_CD AS ID,E.IE_NAME AS USER_NAME, E.IE_EMP_NO AS USER_ID 
            FROM T09_IE E 
            WHERE TRIM(E.IE_EMP_NO) = TRIM(P_USER_NAME) AND TRIM(E.IE_PWD) = TRIM(P_PASSWORD)
            AND E.IE_STATUS is null;
        ELSIF P_USERTYPE = 'CLIENT_LOGIN'
            THEN
            OPEN P_RESULT_CURSOR FOR
            SELECT C.MOBILE AS MOBILE, C.ID AS ID,C.USER_NAME AS USER_NAME,C.MOBILE AS USER_ID 
            FROM T32_CLIENT_LOGIN C 
            WHERE TRIM(C.MOBILE) = TRIM(P_USER_NAME) AND TRIM(C.PWD) = TRIM(P_PASSWORD);
        ELSIF P_USERTYPE = 'LO_LOGIN'
            THEN
            OPEN P_RESULT_CURSOR FOR
            SELECT L.MOBILE AS MOBILE, 0 AS ID,L.LO_NAME AS USER_NAME,L.MOBILE AS USER_ID 
            FROM T105_LO_LOGIN L 
            WHERE TRIM(L.MOBILE) = TRIM(P_USER_NAME) AND TRIM(L.PWD) = TRIM(P_PASSWORD);
            
        ELSE
            -- Invalid credentials
            OPEN P_RESULT_CURSOR FOR
            SELECT 'INVALID_CREDENTIALS' AS RESULT FROM DUAL;
        END IF;
    END IF;
    
END;

--------------------------------------------------


CREATE OR REPLACE FORCE EDITIONABLE VIEW "IBSDEV"."VIEW_GET_BPODETAILS" ("BPO_CD", "BPO_NAME", "BPO_RLY", "BPO_ADD", "GSTIN_NO", "AUDESC", "CITY", "SAP_CUST_CD_BPO", "isdeleted") AS 
  SELECT B.BPO_CD,
       B.BPO_NAME,
       B.BPO_RLY,
       (B.BPO_ADD || ',' || NVL2(C.LOCATION, C.LOCATION || ' : ' || C.CITY, C.CITY)) AS BPO_ADD,
       GSTIN_NO,
       A.AU || '-' || A.AUDESC AS AUDESC,
       C.CITY,
       B.SAP_CUST_CD_BPO,
       b.isdeleted
FROM T12_BILL_PAYING_OFFICER B
LEFT JOIN T03_CITY C ON B.BPO_CITY_CD = C.CITY_CD
LEFT JOIN AU_CRIS A ON A.AU = B.AU
ORDER BY B.BPO_NAME, B.BPO_RLY, (B.BPO_ADD || ',' || NVL2(C.LOCATION, C.LOCATION || ' : ' || C.CITY, C.CITY));


--------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "IBSDEV"."VIEW_GET_INSPECTION_CERT_DETAILS" ("ICNO", "CASENO", "BKNO", "SETNO", "STATUS", "CALLRECVDT", "CALLSNO", "IESNAME", "CONSIGNEE", "CALLSTATUSDESC", "REGIONCODE", "CALLSTATUS") AS 
  SELECT 
        IC_NO AS ICNO, 
        CASE_NO AS CASENO, 
        BK_NO AS BKNO,
        SET_NO AS SETNO,
        STATUS,
        CALL_RECV_DATE AS CALLRECVDT,
        CALL_SNO AS CALLSNO,
        IE_SNAME AS IESNAME,
        CONSIGNEE, 
        CALL_STATUS_DESC AS CALLSTATUSDESC,
        REGION_CODE AS REGIONCODE,
        CALL_STATUS AS CALLSTATUS
    FROM
        (SELECT 
        T20.IC_NO IC_NO, 
        T18.CASE_NO CASE_NO, 
        T20.BK_NO BK_NO,
        T20.SET_NO SET_NO,
         T17.REGION_CODE,
         T17.CALL_STATUS,
        NVL2(T20.BILL_NO,'Bill No:'||T20.BILL_NO,'Bill Pending') STATUS, 
        T18.CALL_RECV_DT CALL_RECV_DATE,T18.CALL_SNO CALL_SNO,T09.IE_SNAME IE_SNAME,
        (T06.CONSIGNEE_CD||'-'||nvl2(trim(T06.CONSIGNEE_DESIG),trim(T06.CONSIGNEE_DESIG)||'/','')||nvl2(trim(T06.CONSIGNEE_DEPT),trim(T06.CONSIGNEE_DEPT)||'/','')||nvl2(trim(T06.CONSIGNEE_FIRM),trim(T06.CONSIGNEE_FIRM)||'/','')||NVL2(trim(T06.CONSIGNEE_ADD1),trim(T06.CONSIGNEE_ADD1)||'/','')||NVL2(trim(T03.LOCATION),trim(T03.LOCATION)||' : '||trim(T03.CITY),trim(T03.CITY))) CONSIGNEE, T21.CALL_STATUS_DESC  
        FROM T18_CALL_DETAILS T18,T20_IC T20, T09_IE T09,T17_CALL_REGISTER T17,T06_CONSIGNEE T06, T03_CITY T03, T21_CALL_STATUS_CODES T21
        WHERE T20.CASE_NO(+)=T18.CASE_NO AND T20.CALL_RECV_DT(+)=T18.CALL_RECV_DT 
        AND T20.CONSIGNEE_CD(+)=T18.CONSIGNEE_CD AND T17.CASE_NO=T18.CASE_NO AND T17.CALL_RECV_DT=T18.CALL_RECV_DT 
        AND T17.CALL_SNO=T18.CALL_SNO AND T20.CALL_SNO(+)=T18.CALL_SNO AND T17.IE_CD=T09.IE_CD and T06.CONSIGNEE_CD=T18.CONSIGNEE_CD 
        AND T06.CONSIGNEE_CITY=T03.CITY_CD and T17.CALL_STATUS=T21.CALL_STATUS_CD 

        --AND upper(T18.CASE_NO)=upper('N22080564') 
        --AND T18.CALL_RECV_DT=to_Date('26/08/2022','dd/mm/yyyy') 
        --AND T17.REGION_CODE='N' 
        --AND T17.CALL_STATUS <> 'C' 

        GROUP BY T18.CASE_NO,T18.CALL_RECV_DT,T18.CALL_SNO,T20.IC_NO,T20.BK_NO,REGION_CODE,CALL_STATUS,
        T20.SET_NO,NVL2(T20.BILL_NO,'Bill No:'||T20.BILL_NO,'Bill Pending'), 
        T09.IE_SNAME,(T06.CONSIGNEE_CD||'-'||nvl2(trim(T06.CONSIGNEE_DESIG),trim(T06.CONSIGNEE_DESIG)||'/','')||nvl2(trim(T06.CONSIGNEE_DEPT),trim(T06.CONSIGNEE_DEPT)||'/','')||nvl2(trim(T06.CONSIGNEE_FIRM),trim(T06.CONSIGNEE_FIRM)||'/','')||NVL2(trim(T06.CONSIGNEE_ADD1),trim(T06.CONSIGNEE_ADD1)||'/','')||NVL2(trim(T03.LOCATION),trim(T03.LOCATION)||' : '||trim(T03.CITY),trim(T03.CITY))),T21.CALL_STATUS_DESC) 
        ORDER BY CALL_RECV_DATE,CASE_NO,BK_NO,SET_NO;

create or replace PROCEDURE GET_LOGINDETAILS (
    P_USER_NAME IN VARCHAR2,
    P_USERTYPE IN VARCHAR2,
    P_RESULT_CURSOR OUT SYS_REFCURSOR
) AS
BEGIN

    IF P_USER_NAME IS NULL THEN
        -- Handle NULL inputs
        OPEN P_RESULT_CURSOR FOR
            SELECT 'NULL_INPUT' AS RESULT FROM DUAL;
    ELSE
        IF P_USERTYPE = 'USERS'
            THEN   
            -- Valid credentials
            OPEN P_RESULT_CURSOR FOR
            SELECT u.MOBILE AS MOBILE,u.ID AS ID, u.USER_NAME AS USER_NAME,u.USER_ID AS USER_ID,
            u.REGION AS REGION,u.auth_levl as AUTH_LEVL,
            R.ROLE_ID AS ROLE_ID,R.ROLENAME AS ROLE_NAME, 
            NULL AS ORGN_TYPE,NULL AS ORGN_CHASED,NULL AS ORGANISATION,0 AS IECD,0 AS COCD
            FROM T02_USERS u 
            JOIN USER_MASTER UM ON TO_CHAR(u.USER_ID) = TO_CHAR(UM.USER_ID)
            JOIN USERROLES UR ON UM.ID = UR.USER_MASTER_ID
            JOIN ROLES R ON UR.ROLE_ID = R.ROLE_ID
            WHERE TRIM(u.USER_ID) = TRIM(P_USER_NAME);
        ELSIF P_USERTYPE = 'VENDOR'
            THEN
            OPEN P_RESULT_CURSOR FOR
            SELECT V.VEND_CONTACT_TEL_1 AS MOBILE, V.VEND_CD AS ID,V.VEND_NAME AS USER_NAME,V.VEND_CD AS USER_ID,
            NULL AS REGION,NULL as AUTH_LEVL,R.ROLE_ID AS ROLE_ID,R.ROLENAME AS ROLE_NAME, 
            NULL AS ORGN_TYPE,NULL AS ORGN_CHASED,NULL AS ORGANISATION,0 AS IECD,0 AS COCD
            FROM T05_VENDOR V 
            JOIN USER_MASTER UM ON TO_CHAR(V.VEND_CD) = TO_CHAR(UM.USER_ID)
            JOIN USERROLES UR ON UM.ID = UR.USER_MASTER_ID
            JOIN ROLES R ON UR.ROLE_ID = R.ROLE_ID
            WHERE TRIM(V.VEND_CD) = TRIM(P_USER_NAME);
        ELSIF P_USERTYPE = 'IE'
            THEN
            OPEN P_RESULT_CURSOR FOR
            SELECT E.IE_PHONE_NO AS MOBILE,E.IE_CD AS ID,E.IE_NAME AS USER_NAME, E.IE_EMP_NO AS USER_ID,
            E.IE_REGION AS REGION,NULL as AUTH_LEVL,R.ROLE_ID AS ROLE_ID,R.ROLENAME AS ROLE_NAME, 
            NULL AS ORGN_TYPE,NULL AS ORGN_CHASED,NULL AS ORGANISATION,E.IE_CD AS IECD,E.IE_CO_CD AS COCD
            FROM T09_IE E
            JOIN USER_MASTER UM ON TO_CHAR(E.IE_EMP_NO) = TO_CHAR(UM.USER_ID)
            JOIN USERROLES UR ON UM.ID = UR.USER_MASTER_ID
            JOIN ROLES R ON UR.ROLE_ID = R.ROLE_ID
            WHERE TRIM(E.IE_EMP_NO) = TRIM(P_USER_NAME)
            AND E.IE_STATUS is null;
        ELSIF P_USERTYPE = 'CLIENT_LOGIN'
            THEN
            OPEN P_RESULT_CURSOR FOR
            SELECT C.MOBILE AS MOBILE, C.ID AS ID,C.USER_NAME AS USER_NAME,C.MOBILE AS USER_ID,
            NULL AS REGION,NULL as AUTH_LEVL,R.ROLE_ID AS ROLE_ID,R.ROLENAME AS ROLE_NAME, 
            C.ORGN_TYPE AS ORGN_TYPE,NULL AS ORGN_CHASED,C.ORGANISATION AS ORGANISATION,0 AS IECD,0 AS COCD
            FROM T32_CLIENT_LOGIN C
            JOIN USER_MASTER UM ON TO_CHAR(C.MOBILE) = TO_CHAR(UM.USER_ID)
            JOIN USERROLES UR ON UM.ID = UR.USER_MASTER_ID
            JOIN ROLES R ON UR.ROLE_ID = R.ROLE_ID
            WHERE TRIM(C.MOBILE) = TRIM(P_USER_NAME);
        ELSIF P_USERTYPE = 'LO_LOGIN'
            THEN
            OPEN P_RESULT_CURSOR FOR
            SELECT L.MOBILE AS MOBILE, 0 AS ID,L.LO_NAME AS USER_NAME,L.MOBILE AS USER_ID,
            NULL AS REGION,NULL as AUTH_LEVL,R.ROLE_ID AS ROLE_ID,R.ROLENAME AS ROLE_NAME, 
            NULL AS ORGN_TYPE,NULL AS ORGN_CHASED,NULL AS ORGANISATION,0 AS IECD,0 AS COCD
            FROM T105_LO_LOGIN L
            JOIN USER_MASTER UM ON TO_CHAR(L.MOBILE) = TO_CHAR(UM.USER_ID)
            JOIN USERROLES UR ON UM.ID = UR.USER_MASTER_ID
            JOIN ROLES R ON UR.ROLE_ID = R.ROLE_ID
            WHERE TRIM(L.MOBILE) = TRIM(P_USER_NAME)
            AND (TO_DATE((SELECT SYSDATE FROM DUAL),'DD-MM-YY') BETWEEN L.LO_PER_FR AND L.LO_PER_TO);

        
        END IF;
    END IF;

END;
/

ALTER TABLE USER_MASTER MODIFY CREATEDBY VARCHAR2(50 BYTE);


 CREATE OR REPLACE FORCE EDITIONABLE VIEW "T17_CALL_REGISTER_SEARCH_VIEW" ("VEND_CD", "CASE_NO", "CALL_RECV_DT", "CALL_INSTALL_NO", "CALL_SNO", "CALL_STATUS", "CALL_LETTER_NO", "REMARKS", "PO_NO", "PO_DT", "IE_SNAME", "VENDOR", "ONLINE_CALL_STATUS", "OFFLINE_CALL_STATUS","Client_Name") AS 
  select P.VEND_CD,P.CASE_NO,C.CALL_RECV_DT CALL_RECV_DT,
C.CALL_INSTALL_NO,C.CALL_SNO,
decode(C.CALL_STATUS,'M','Pending','A','Accepted','R','Rejection','C','Cancelled','U','Under Lab Testing','S','Still Under Inspection','G','Stage Inspection')
||decode(C.CALL_CANCEL_STATUS,'N',' (Non Chargeable)','C',' (Chargeable)','')CALL_STATUS,C.CALL_LETTER_NO,P.REMARKS,
P.PO_NO,
P.PO_DT PO_DT,I.IE_SNAME,(V.VEND_NAME||'('||NVL2(T.LOCATION,T.LOCATION||' : '||T.CITY,T.CITY)||')')VENDOR,
V.ONLINE_CALL_STATUS,V.OFFLINE_CALL_STATUS,
NVL((
                select RAILWAY Client from T91_RAILWAYS where RLY_CD = P.RLY_CD and P.RLY_NONRLY = 'R' 
                union
                select distinct BPO_ORGN Client from T12_BILL_PAYING_OFFICER where BPO_RLY = P.RLY_CD and P.RLY_NONRLY <> 'R' and ROWNUM <= 1
            ),'Other')  Client_Name
from T17_CALL_REGISTER C, T13_PO_MASTER P,T09_IE I, T05_VENDOR V,T03_CITY T 
where P.CASE_NO=C.CASE_NO(+) and C.IE_CD=I.IE_CD(+) and P.VEND_CD=V.VEND_CD 
and V.VEND_CITY_CD=T.CITY_CD;





=========================
Performance related work.
=========================

GET_LOGINBYUSERPASS - Naimesh changes in last

GET_CALL_REG_CANCELLATION
GET_INSPECTION_CERT_DETAILS
GetSearchAllData
GET_VENDOR_DATA






=========================================================
sp_generate_bill_gst_new
=========================================================

Contract Entry Form
=========================================================

ALTER TABLE T100_Contract ADD InspectionFee_Type VARCHAR2(5 BYTE);

ALTER TABLE T100_Contract ADD Per_Basis_FlatFee NUMBER(6,0);
ALTER TABLE T100_Contract ADD ManDay_FlatFee NUMBER(6,0);
ALTER TABLE T100_Contract ADD Lumpsum_FlatFee NUMBER(6,0);

ALTER TABLE T100_Contract ADD Per_Basis_Cancellation NUMBER(6,0);
ALTER TABLE T100_Contract ADD ManDay_Cancellation NUMBER(6,0);
ALTER TABLE T100_Contract ADD Lumpsum_Cancellation NUMBER(6,0);

ALTER TABLE T100_Contract ADD Per_Basis_Rejection NUMBER(6,0);
ALTER TABLE T100_Contract ADD ManDay_Rejection NUMBER(6,0);
ALTER TABLE T100_Contract ADD Lumpsum_Rejection NUMBER(6,0);


CREATE TABLE T100_Contract_Material (
    ID NUMBER(6,0),
    CONTRACT_ID NUMBER(6,0),
    PER_BASIS NUMBER(6,0),
    MANDAY NUMBER(6,0),
    LUMPSUM NUMBER(6,0),
    FROMRS NUMBER(6,0),
    TORS NUMBER(6,0),
    CREATEDBY VARCHAR2(50 BYTE),
    UPDATEDBY VARCHAR2(50 BYTE),
    CREATEDDATE	DATE,
    UPDATEDATE DATE,
    ISDELETED NUMBER(6,0),
    UserId VARCHAR2(10 BYTE);
    PRIMARY KEY (ID)
);

CREATE SEQUENCE T100_Contract_Material_seq
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
UPDATE T100_Contract_Material
   SET ID = T100_Contract_Material_seq.nextval;

ALTER TABLE T100_Contract_Material
    MODIFY ID INT DEFAULT T100_Contract_Material_seq.nextval;

=========================================================
Credit Note Invoice Report

GET_CNOTEINVOICE_SUMMARY
=========================================================

ALTER TABLE T29_JV_DETAILS MODIFY IU_ADV_NO DEFAULT NULL;
ALTER TABLE T29_JV_DETAILS MODIFY IU_ADV_DT DEFAULT NULL;


=============================
INTER Unit Transfer Report
=============================
SP_GET_INTER_UNIT_TRANSFER_REPORT

==============================
Invoice for SAP

GET_INVOICE_SAP_LIST
==============================


QANEA vs QAPROD Difference
==========================
1) ALTER TABLE RITES_BILL_DTLS MODIFY BILL_RESENT_COUNT NUMBER(2,0)
2) ALTER TABLE T20_IC MODIFY NO_OF_INSP NUMBER(5,2);
3) ALTER TABLE T22_BILL MODIFY BILL_RESENT_COUNT NUMBER(2,0);
4) ALTER TABLE T82_PO_DETAIL MODIFY EXCISE NUMBER(13,2);
5) ALTER TABLE T06_CONSIGNEE ADD STATUS CHAR(1 BYTE);
6) ALTER TABLE T12_BILL_PAYING_OFFICER ADD STATUS CHAR(1 BYTE);